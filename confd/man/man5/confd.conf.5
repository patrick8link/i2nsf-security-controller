'\" t
.\"     Title: confd.conf
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 03/24/2023
.\"    Manual: ConfD Manual
.\"    Source: Cisco Systems, Inc.
.\"  Language: English
.\"
.TH "CONFD\&.CONF" "5" "03/24/2023" "Cisco Systems, Inc." "ConfD Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
confd.conf \- ConfD daemon configuration file format
.SH "DESCRIPTION"
.PP
Whenever the ConfD daemon is started (or reloaded) it reads its configuration from
/etc/confd/confd\&.conf
or from the file specified with the
\fB\-c\fR
option, as described in
\m[blue]\fBconfd(1)\fR\m[]\&.
.PP
confd\&.conf
is an XML configuration file formally defined by a YANG module,
confd_cfg\&.yang
as referred to in the SEE ALSO section\&. This YANG module is included in the distribution\&. The ConfD distribution also includes a commented confd\&.conf\&.example file\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBTip\fR
.ps -1
.br
.PP
In the ConfD distribution there is an Emacs mode suitable for confd\&.conf editing\&.
.sp .5v
.RE
.PP
A short example: A ConfD configuration file that specifies where to find compiled YANG files etc, which facility to use for syslog, that the developer log should be disabled and that the audit log should be enabled\&. Finally, it also disables clear text NETCONF support:
.sp
.if n \{\
.RS 4
.\}
.nf
<?xml version="1\&.0" encoding="UTF\-8"?>
<confdConfig xmlns="http://tail\-f\&.com/ns/confd_cfg/1\&.0">
  <loadPath>
    <dir>/etc/confd</dir>
  </loadPath>

  <stateDir>/var/confd/state</stateDir>

  <cdb>
    <enabled>true</enabled>
    <dbDir>/var/confd/cdb</dbDir>
  </cdb>

  <aaa>
    <sshServerKeyDir>/etc/confd/ssh</sshServerKeyDir>
  </aaa>

  <datastores>
    <startup>
      <enabled>false</enabled>
    </startup>
    <candidate>
      <enabled>true</enabled>
      <filename>/var/confd/candidate/candidate\&.db</filename>
    </candidate>
    <running>
      <access>writable\-through\-candidate</access>
    </running>
  </datastores>

  <logs>
    <syslogConfig>
      <facility>daemon</facility>
    </syslogConfig>
    <developerLog>
      <enabled>false</enabled>
    </developerLog>
    <auditLog>
      <enabled>true</enabled>
    </auditLog>
  </logs>

  <netconf>
    <transport>
      <tcp>
        <enabled>false</enabled>
      </tcp>
    </transport>
  </netconf>

</confdConfig>
.fi
.if n \{\
.RE
.\}
.PP
Many configuration parameters get their default values as defined in the YANG module\&. Filename parameters have no default values\&.
.SH "CONFIGURATION PARAMETERS"
.PP
This section lists all available configuration parameters and their type (within parenthesis) and default values (within square brackets)\&. Parameters are written using a path notation to make it easier to see how they relate to each other\&.
.PP
/confdConfig
.RS 4
ConfD configuration\&.
.RE
.PP
/confdConfig/runtimeReconfiguration (config\-file | namespace) [config\-file]
.RS 4
Controls whether ConfD should find run\-time modifiable configuration parameters in the configuration file (config\-file setting) or whether ConfD should them from a namespace with the data stored in CDB\&. See further the Advanced Topics chapter in the User Guide as well as the confdconf/dyncfg example in the example collection\&.
.RE
.PP
/confdConfig/validateUtf8
.RS 4
This section defines settings which affect UTF\-8 validation\&.
.sp
.RE
.PP
/confdConfig/validateUtf8/enabled (boolean) [true]
.RS 4
By default (true) ConfD will validate any data modeled as \*(Aqstring\*(Aq to be valid UTF\-8 and conform to yang\-string\&.
.sp
NOTE: String data from data providers and in the confd\&.conf file itself are not validated\&.
.sp
The possibility to disable UTF\-8 validation is supplied because it can help in certain situations if there is data which is invalid UTF\-8 or does not conform to yang\-string\&. Disabling UTF\-8 and yang\-string validation allows invalid data input\&.
.sp
It is possible to check CDB contents for invalid UTF\-8 string data with the following
.sp
confd \-\-cdb\-debug\-dump cdb\-dir validate_utf8
.sp
Invalid data will need to be corrected manually with UTF\-8 validation disabled\&.
.sp
For further details see:
.sp
.if n \{\
.RS 4
.\}
.nf
o RFC 3629 UTF\-8, a transformation format of ISO 10646
  and the Unicode standard\&.
o RFC 7950 The YANG 1\&.1 Data Modeling Language,
  Section 14 YANG ABNF Grammar, yang\-string definition\&.

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/ignoreBindErrors/enabled (boolean) [false]
.RS 4
By default (false) ConfD will refuse to start if any of its nortbound agents fails to bind their respective ports\&. When enabled, this parameter forces ConfD to ignore that fatal error situation and instead it just issues a warning and disables the failing agent\&. The agent may be enabled by dynamically configuring a free port via some other nortbound interface\&.
.RE
.PP
/confdConfig/confdIpcAddress
.RS 4
ConfD listens by default on 127\&.0\&.0\&.1:4565 for incoming TCP connections from ConfD client libraries, such as CDB, MAAPI, the CLI, the external database API, as well as commands from the confd script (such as \*(Aqconfd \-\-reload\*(Aq)\&.
.sp
The IP address and port can be changed\&. If they are changed all clients using MAAPI, CDB et\&.c\&. must be re\-compiled to handle this\&. See the deployment user\-guide on how to do this\&.
.sp
Note that there are severe security implications involved if ConfD is instructed to bind(2) to anything but localhost\&. Read more about this in the ConfD IPC section in the Advanced Topics section of the User Guide\&. Use the IP 0\&.0\&.0\&.0 if you want ConfD to to listen(2) on all IPv4 addresses\&.
.sp
.RE
.PP
/confdConfig/confdIpcAddress/ip (inet:ip\-address) [127\&.0\&.0\&.1]
.RS 4
The IP address which ConfD listens to for incoming IPC connections\&.
.RE
.PP
/confdConfig/confdIpcAddress/port (inet:port\-number) [4565]
.RS 4
The port number which ConfD listens to for incoming IPC connections\&.
.RE
.PP
/confdConfig/confdIpcAddress/netns (string)
.RS 4
The network namespace name where the listening socket will belong to\&.
.RE
.PP
/confdConfig/confdIpcAddress/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/confdIpcExtraListenIp (string)
.RS 4
This parameter may be given multiple times\&.
.sp
A list of pipe separated additional IP, network namespace name to which we wish to bind the ConfD IPC listener\&. This is useful if we don\*(Aqt want to use the wildcard 0\&.0\&.0\&.0 address in order to never expose the ConfD IPC to certain interfaces\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/confdIpcAddress/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/confdIpcAddress/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<confdIpcExtraListenIp>
  10\&.45\&.22\&.11|netns=ipcns0|vrf=vrf0
</confdIpcExtraListenIp>
<confdIpcExtraListenIp>10\&.45\&.22\&.11|netns=ipcns0</confdIpcExtraListenIp>
<confdIpcExtraListenIp>::1</confdIpcExtraListenIp>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/confdExternalIpc
.RS 4
ConfD can be set up to use a different protocol than TCP for the IPC connections, see the Advanced Topics chapter in the User Guide for the details\&.
.sp
.RE
.PP
/confdConfig/confdExternalIpc/enabled (boolean) [false]
.RS 4
Enables the user\-provided IPC mechanism\&.
.RE
.PP
/confdConfig/confdExternalIpc/address (string)
.RS 4
This parameter is mandatory\&.
.sp
The address where ConfD should listen for incoming client connections using the user defined protocol\&.
.RE
.PP
/confdConfig/confdIpcListenBacklog (int32) [25]
.RS 4
The maximum length to which the queue of pending connections for the IPC sockets may grow (see the OS manual page for listen(2))\&. If a very large number of applications connect to ConfD more or less simultaneously at startup, this value may need to be raised to avoid connection failures\&. Note that the OS may restrict the length to a lower value, e\&.g\&. on Linux it is silently truncated to the value in /proc/sys/net/core/somaxconn \- i\&.e\&. this value may also need to be raised\&.
.RE
.PP
/confdConfig/confdIpcKeepalive (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq, the SO_KEEPALIVE option is set for IPC sockets\&.
.RE
.PP
/confdConfig/confdIpcDscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from ConfD for IPC connections\&.
.RE
.PP
/confdConfig/confdIpcAccessCheck
.RS 4
ConfD can be configured to restrict access for incoming connections to the IPC listener sockets\&. The access check requires that connecting clients prove possession of a shared secret\&. See the section Restricting access to the IPC port in the Advanced Topics chapter in the User Guide for the details\&.
.sp
.RE
.PP
/confdConfig/confdIpcAccessCheck/enabled (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq, access check for IPC connections is enabled\&.
.RE
.PP
/confdConfig/confdIpcAccessCheck/filename (string)
.RS 4
This parameter is mandatory\&.
.sp
filename is the full path to a file containing the shared secret for the IPC access check\&. The file should be protected via OS file permissions, such that it can only be read by the ConfD daemon and client processes that are allowed to connect to the IPC listener sockets\&.
.RE
.PP
/confdConfig/enableSharedMemorySchema (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq, then a C program will be started that loads the schema into shared memory, which then can be accessed by the C and Python APIs\&.
.RE
.PP
/confdConfig/sharedMemorySchemaExecutable (string)
.RS 4
The executable that sets up the shared memory holding the schema\&. If left unconfigured, the included executable $CONFD_DIR/lib/confd/lib/core/confd/priv/mmap_schema is used\&. Using mmap_schema means that ConfD creates and maintains the backing file, meaning that you don\*(Aqt have to write your own application\&. Note that if the value is configured, it must be specified as an absolute path (i\&.e containing the root directory and all other subdirectories leading to the executable)\&.
.RE
.PP
/confdConfig/sharedMemorySchemaPath (string)
.RS 4
Path to the shared memory file holding the schema\&. If left unconfigured, it defaults to \*(Aqstate/schema\*(Aq in the run\-directory\&. Note that if the value is configured, it must be specified as an absolute path (i\&.e containing the root directory and all other subdirectories leading to the executable)\&.
.RE
.PP
/confdConfig/loadPath/dir (string)
.RS 4
This parameter may be given multiple times\&.
.sp
The loadPath element contains any number of \*(Aqdir\*(Aq elements\&. Each \*(Aqdir\*(Aq element points to a directory path on disk which is searched for compiled YANG files (\&.fxs files), and compiled clispec files (\&.ccl files) during daemon startup\&.
.RE
.PP
/confdConfig/enableCompressedSchema (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq, ConfD\*(Aqs internal storage of the schema information from the \&.fxs files will be compressed\&. This will reduce the memory usage for large data models, but may also cause reduced performance when looking up the schema information\&. The trade off depends on the total amount of schema information and typical usage patterns, thus the effect should be evaluated before enabling this functionality\&.
.RE
.PP
/confdConfig/compressedSchemaLevel (compressedSchemaLevelType) [1]
.RS 4
If set to \*(Aqtrue\*(Aq, ConfD\*(Aqs internal storage of the schema information from the \&.fxs files will be compressed\&. This will reduce the memory usage for large data models, but may also cause reduced performance when looking up the schema information\&. The trade off depends on the total amount of schema information and typical usage patterns, thus the effect should be evaluated before enabling this functionality\&.
.RE
.PP
/confdConfig/stateDir (string)
.RS 4
This parameter is mandatory\&.
.sp
This is where ConfD writes persistent state data\&. Currently the only state files are \*(Aqrunning\&.invalid\*(Aq which exists only if the running database status is invalid, which it will be if one of the database implementation fails during the two\-phase commit protocol, \*(Aqglobal\&.data\*(Aq which is used to store some data that needs to be retained across reboots, \*(Aqschema\*(Aq which is the filename of the shared memory holding the schema, and \*(Aqcandidate\&.bup\&.{N,concat}\*(Aq which are used to maintain the candidate datastore, where \*(AqN\*(Aq is a sequence number\&.
.RE
.PP
/confdConfig/commitRetryTimeout (xs:duration | infinity) [PT0S]
.RS 4
Commit timeout in the ConfD backplane\&. This timeout controls for how long the commit operation will attempt to complete the operation when some other entity is locking the database, e\&.g\&. some other commit is in progress or some managed object is locking the database\&.
.RE
.PP
/confdConfig/maxValidationErrors (uint32 | unbounded) [1]
.RS 4
Controls how many validation errors are collected and presented to the user at a time when the user performs a validate or commit operation\&. Note that syntactical errors are detected and reported when the data is entered, and thus not covered by this parameter\&.
.RE
.PP
/confdConfig/subagents
.RS 4
Present only if ConfD runs as a primary agent\&. Lists all registered subagents\&.
.sp
.RE
.PP
/confdConfig/subagents/enabled (boolean) [false]
.RS 4
Whether ConfD should act as a primary agent\&. When set to \*(Aqtrue\*(Aq this ConfD instance is a primary agent\&.
.RE
.PP
/confdConfig/subagents/subagent
.RS 4
Parameters for a single subagent\&.
.RE
.PP
/confdConfig/subagents/subagent/name (string)
.RS 4
The name of the subagent\&. It is used as a unique identifier of the subagent\&. The name is included in the subagent events (see confd_lib_events(3)) generated by ConfD\&.
.RE
.PP
/confdConfig/subagents/subagent/enabled (boolean) [true]
.RS 4
Whether the subagent should be considered by ConfD\&. When set to \*(Aqfalse\*(Aq the subagent is ignored\&.
.RE
.PP
/confdConfig/subagents/subagent/tcp
.RS 4
Parameters to be used when the primary agent communicates with the subagent over plain text TCP\&. This is more efficient than SSH, but TCP is non\-standard\&.
.sp
.RE
.PP
/confdConfig/subagents/subagent/tcp/ip (inet:ip\-address)
.RS 4
This parameter is mandatory\&.
.sp
The IP address where the subagent listens for NETCONF TCP connections\&.
.RE
.PP
/confdConfig/subagents/subagent/tcp/port (inet:port\-number) [2023]
.RS 4
The port where the subagent listens for NETCONF TCP connections\&.
.RE
.PP
/confdConfig/subagents/subagent/tcp/netns (string)
.RS 4
The network namespace name where the socket connection will be made from\&.
.RE
.PP
/confdConfig/subagents/subagent/tcp/vrf (string)
.RS 4
The VRF interface name where the socket connection will bind to\&.
.RE
.PP
/confdConfig/subagents/subagent/tcp/confdAuth
.RS 4
In order to use NETCONF over TCP, the subagent must understand the ConfD proprietary TCP header, described in the NETCONF chapter in the ConfD User Guide\&.
.RE
.PP
/confdConfig/subagents/subagent/tcp/confdAuth/user (string)
.RS 4
This parameter is mandatory\&.
.sp
The user name to be used for authorization on the subagent\&.
.RE
.PP
/confdConfig/subagents/subagent/tcp/confdAuth/group (string)
.RS 4
This parameter is mandatory\&.
.sp
The group name to be used for authorization on the subagent\&.
.RE
.PP
/confdConfig/subagents/subagent/ssh
.RS 4
Parameters to be used when the primary agent communicates with the subagent over SSH\&.
.sp
.RE
.PP
/confdConfig/subagents/subagent/ssh/ip (inet:ip\-address)
.RS 4
This parameter is mandatory\&.
.sp
The IP address where the subagent listens for NETCONF SSH connections\&.
.RE
.PP
/confdConfig/subagents/subagent/ssh/port (inet:port\-number) [2022]
.RS 4
The port where the subagent listens for NETCONF SSH connections\&.
.RE
.PP
/confdConfig/subagents/subagent/ssh/netns (string)
.RS 4
The network namespace name where the socket connection will be made from\&.
.RE
.PP
/confdConfig/subagents/subagent/ssh/vrf (string)
.RS 4
The VRF interface name where the socket connection will bind to\&.
.RE
.PP
/confdConfig/subagents/subagent/ssh/user (string)
.RS 4
This parameter is mandatory\&.
.sp
The SSH user name used for authentication at the subagent\&.
.RE
.PP
/confdConfig/subagents/subagent/ssh/password (string)
.RS 4
This parameter is mandatory\&.
.sp
The SSH user\*(Aqs password\&.
.RE
.PP
/confdConfig/subagents/subagent/mount
.RS 4
This parameter defines where in the data hierarchy the subagent is registered\&. It consists of a path which must exist in the data model of the primary agent, and the name of the node which the subagent implements\&.
.RE
.PP
/confdConfig/subagents/subagent/mount/path (string)
.RS 4
This parameter is mandatory\&.
.sp
The path, in restricted XPath syntax, where the subagent\*(Aqs data is mounted\&. The XPath is restricted as an instance\-identifier (see confd_types(3))\&. To mount on the top level, use \*(Aq/\*(Aq\&. Note that the XPath expression must not contain any namespace prefixes\&.
.sp
If the subagent mounts more than one node, this object is a space separated list of paths\&.
.RE
.PP
/confdConfig/subagents/subagent/mount/node (xs:QName)
.RS 4
This parameter may be given multiple times\&.
.sp
The namespace and name of the top\-level node in that namespace, as a QName\&.
.sp
This leaf\-list must be of the same length as the \*(Aqpath\*(Aq leaf\&.
.RE
.PP
/confdConfig/subagents/subagent/disableSubtreeOptimization (boolean) [false]
.RS 4
Whenever possible, the primary agent sends a single subtree filter request, instead of one request for each object\&. If the subagent cannot handle these requests, for any reason, set this parameter to \*(Aqtrue\*(Aq\&.
.RE
.PP
/confdConfig/notifications
.RS 4
This section defines settings which affect notifications\&.
.sp
.RE
.PP
/confdConfig/notifications/eventStreams
.RS 4
Lists all available notification event streams\&.
.RE
.PP
/confdConfig/notifications/eventStreams/stream
.RS 4
Parameters for a single notification event stream\&.
.RE
.PP
/confdConfig/notifications/eventStreams/stream/name (string)
.RS 4
The name attached to a specific event stream\&.
.RE
.PP
/confdConfig/notifications/eventStreams/stream/description (string)
.RS 4
This parameter is mandatory\&.
.sp
A descriptive text attached to a specific event stream\&.
.RE
.PP
/confdConfig/notifications/eventStreams/stream/replaySupport (boolean)
.RS 4
This parameter is mandatory\&.
.sp
Signals if replay support is available for a specific event stream\&.
.RE
.PP
/confdConfig/notifications/eventStreams/stream/builtinReplayStore
.RS 4
Parameters for the built in replay store for this event stream\&.
.sp
If replay support is enabled ConfD automatically stores all notifications on disk ready to be replayed should a NETCONF manager or RESTCONF event notification subscriber ask for logged notifications\&. The replay store uses a set of wrapping log files on disk (of a certain number and size) to store the notifications\&.
.sp
The max size of each wrap log file (see below) should not be too large\&. This to achieve fast replay of notifications in a certain time range\&. If possible use a larger number of wrap log files instead\&.
.sp
If in doubt use the recommended settings (see below)\&.
.sp
.RE
.PP
/confdConfig/notifications/eventStreams/stream/builtinReplayStore/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq, the applications must implement its own replay support\&.
.RE
.PP
/confdConfig/notifications/eventStreams/stream/builtinReplayStore/dir (string)
.RS 4
This parameter is mandatory\&.
.sp
The wrapping log files will be put in this disk location\&.
.RE
.PP
/confdConfig/notifications/eventStreams/stream/builtinReplayStore/maxSize (tailf:size)
.RS 4
This parameter is mandatory\&.
.sp
The max size of each log wrap file\&. The recommended setting is approximately S10M\&.
.RE
.PP
/confdConfig/notifications/eventStreams/stream/builtinReplayStore/maxFiles (int64)
.RS 4
This parameter is mandatory\&.
.sp
The max number of log wrap files\&. The recommended setting is around 50 files\&.
.RE
.PP
/confdConfig/opcache
.RS 4
This section defines settings which affect the behavior of the operational data cache \- see the \*(AqOperational data\*(Aq chapter in the User Guide\&.
.sp
.RE
.PP
/confdConfig/opcache/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the cache is enabled\&.
.RE
.PP
/confdConfig/opcache/timeout (uint64)
.RS 4
This parameter is mandatory\&.
.sp
The amount of time to keep data in the cache, in seconds\&.
.RE
.PP
/confdConfig/configCache
.RS 4
This section defines settings which affect the behavior of the undocumented config data cache\&.
.sp
.RE
.PP
/confdConfig/configCache/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the cache is enabled\&.
.RE
.PP
/confdConfig/snmpgw
.RS 4
This section defines settings which affect the behavior of the SNMP gateway\&.
.sp
.RE
.PP
/confdConfig/snmpgw/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the gateway is enabled\&.
.RE
.PP
/confdConfig/snmpgw/trapPort (inet:port\-number)
.RS 4
The port number to listen for traps on\&.
.RE
.PP
/confdConfig/snmpgw/rowCacheMaxAge (xs:duration) [PT5S]
.RS 4
Whenever any object is requested from an agent, all objects in the same conceptual row will be fetched and cached\&. This value limits the age of values in the cache\&. Higher values may give higher performance but increases the probability that the SNMP gateway returns stale data\&. The default is 5 seconds\&.
.RE
.PP
/confdConfig/snmpgw/rowCacheMaxSize (uint16) [200]
.RS 4
Whenever any object is requested from an agent, all objects in the same conceptual row will be fetched and cached\&. This value limits the number of values in the cache\&. Higher values may give higher performance but may also cause higher memory utilization\&. The default is 200\&.
.RE
.PP
/confdConfig/snmpgw/agent
.RS 4
Parameters for a single agent\&.
.RE
.PP
/confdConfig/snmpgw/agent/name (string)
.RS 4
A name for the agent, mainly used for error reporting\&.
.RE
.PP
/confdConfig/snmpgw/agent/subscriptionId (string)
.RS 4
The subscription id, if set, is used for indicating to which applications external traps should be sent\&.
.RE
.PP
/confdConfig/snmpgw/agent/forwardNotifStream (string)
.RS 4
The forwarding notification stream , if present, indicates that traps should be automatically translated in accordance with the yang definition of the notification, and sent out on the given stream\&. The given stream may not implement replay support externally\&.
.RE
.PP
/confdConfig/snmpgw/agent/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the agent is enabled\&.
.RE
.PP
/confdConfig/snmpgw/agent/community (string) [private]
.RS 4
The community string for communication with the agent\&. If the community string cannot be expressed in Unicode, use the element community_bin instead (see below)\&. If both community_bin and community are specified, community is ignored\&.
.RE
.PP
/confdConfig/snmpgw/agent/community_bin (xs:hexBinary)
.RS 4
The community string for communication with the agent, encoded in hexBinary\&. For example, <community>AB</community> and <community_bin>4142</community_bin> are equivalent\&. The main use for this is when the community string cannot be expressed in Unicode\&.
.RE
.PP
/confdConfig/snmpgw/agent/version (v1 | v2c) [v2c]
.RS 4
The default protocol version to use\&. The value indicates the preferred version \- if the agent doesn\*(Aqt respond, the other version will be tried\&.
.RE
.PP
/confdConfig/snmpgw/agent/timeout (xs:duration) [PT5S]
.RS 4
The amount of time to wait for an answer from the agent before retrying or aborting the operation\&. The default is five seconds\&.
.RE
.PP
/confdConfig/snmpgw/agent/retries (uint8) [0]
.RS 4
The number of times an SNMP request towards the agent should be retried before aborting the operation\&. The default is 0\&.
.RE
.PP
/confdConfig/snmpgw/agent/ip (inet:ip\-address)
.RS 4
This parameter is mandatory\&.
.sp
The host (specified as a name or an IP address) on which the agent is running\&.
.RE
.PP
/confdConfig/snmpgw/agent/port (inet:port\-number) [161]
.RS 4
The port number to use for communication with the agent\&.
.RE
.PP
/confdConfig/snmpgw/agent/netns (string)
.RS 4
The network namespace name from where the socket request to the agent will be issued\&.
.RE
.PP
/confdConfig/snmpgw/agent/vrf (string)
.RS 4
The VRF interface name which from which the socket request to the agent should bind to\&.
.RE
.PP
/confdConfig/snmpgw/agent/module (string)
.RS 4
This parameter may be given multiple times\&.
.sp
A list of MIB module names that this agent implements\&. Each such MIB must be convert to YANG and compiled with the \-\-snmpgw flag to confdc\&.
.RE
.PP
/confdConfig/hideGroup
.RS 4
Hide groups that can be unhidden must be listed here\&. There can be zero, one or many hideGroup entries in the configuration\&.
.sp
If a hide group does not have a hideGroup entry, then it cannot be unhidden using the CLI \*(Aqunhide\*(Aq command\&. However, it is possible to add a hideGroup entry to the confd\&.conf file and then use confd \-\-reload to make it available in the CLI\&. This may be useful to enable for example a diagnostics hide groups that you do not even want accessible using a password\&.
.RE
.PP
/confdConfig/hideGroup/name (string)
.RS 4
Name of hide group\&. This name should correspond to a hide group name in some data model\&.
.RE
.PP
/confdConfig/hideGroup/password (tailf:md5\-digest\-string) []
.RS 4
A password can optionally be specified for a hide group\&. If no password or callback is given then the hide group can be unhidden without giving a password\&.
.sp
If a password is specified then the hide group cannot be enabled unless the password is entered\&.
.sp
To completely disable a hide group, ie make it impossible to unhide it, remove the entire hideGroup container for that hide group\&.
.RE
.PP
/confdConfig/hideGroup/callback (string)
.RS 4
A callback can optionally be specified for a hide group\&. If no callback or password is given then the hide group can be unhidden without giving a password\&.
.sp
If a callback is specified then the hide group cannot be enabled unless a password is entered and the callback successfully verifies the password\&. Using a callback it is possible to have short lived unhide passwords and per\-user unhide passwords\&.
.sp
The callback must be registered as a command() callback with confd_register_action_cbs(), see confd_lib_dp(3)\&. The \*(Aqpath\*(Aq argument to the callback is always \*(Aqhidegroup\*(Aq, while argv[0] is the name of the hide group, argv[1] is the name of the user issuing the unhide command, and argv[2] is the given password\&. The callback should return CONFD_OK to allow the unhiding, otherwise CONFD_ERR\&.
.RE
.PP
/confdConfig/cdb/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq, CDB is disabled\&.
.RE
.PP
/confdConfig/cdb/persistent (boolean) [true]
.RS 4
If persistent is set to \*(Aqfalse\*(Aq CDB will operate in RAM\-only mode\&. This is only applicable for permanent secondary nodes, i\&.e\&. secondary nodes that are unable to become primary, in a HA cluster\&.
.RE
.PP
/confdConfig/cdb/journalCompaction (automatic | manual) [automatic]
.RS 4
Controls the way the CDB configuration store does its journal compaction\&. Never set to anything but the default \*(Aqautomatic\*(Aq unless there is an external mechanism which controls the compaction using the cdb_initiate_journal_compaction() API call\&.
.RE
.PP
/confdConfig/cdb/dbDir (string)
.RS 4
dbDir is the directory on disk which CDB use for its storage and any temporary files being used\&. It is also the directory where CDB searches for initialization files\&.
.RE
.PP
/confdConfig/cdb/initPath/dir (string)
.RS 4
This parameter may be given multiple times\&.
.sp
The initPath can contain any number of \*(Aqdir\*(Aq elements\&. Each \*(Aqdir\*(Aq element points to a directory path which CDB will search for \&.xml files before looking in dbDir\&. The directories are searched in the order they are listed\&.
.RE
.PP
/confdConfig/cdb/clientTimeout (xs:duration | infinity) [infinity]
.RS 4
clientTimeout specifies how long CDB should wait while a client performs a certain action, before considering that client unresponsive\&. When set to infinity, CDB will never timeout waiting for a response from a client\&. A client which doesn\*(Aqt respond will have its socket closed\&. The timeout is applied to clients in the following situations:
.sp
.if n \{\
.RS 4
.\}
.nf
o   When a reader client calls cdb_start_session() it must
    end it with cdb_end_session() within the timeout period\&.
o   When a subscription client receives a subscription
    notification, it must respond with a call to
    cdb_sync_subscription_socket() within the timeout period\&.

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/cdb/replication (async | sync) [sync]
.RS 4
When CDB replication is enabled (which it is when high\-availability mode is enabled, see /confdConfig/ha) the CDB configuration stores can be replicated either asynchronously or synchronously\&. With asynchronous replication, a transaction updating the configuration is allowed to complete as soon as the updates have been sent to the connected secondary nodes\&. With the default synchronous replication, the transaction is suspended until the updates have been completely propagated to the secondary nodes, and the subscribers on the secondary nodes (if any) have acknowledged their subscription notifications (see confd_lib_cdb(3))\&.
.RE
.PP
/confdConfig/cdb/subscriptionReplay/enabled (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq, it is possible to use the cdb_replay_subscriptions() function to \*(Aqreplay\*(Aq the previously committed transaction to CDB subscribers\&. This means that CDB subscribers that miss one subscription notification can have it triggered again\&. CDB will save the previous transaction in a separate file in the dbDir\&.
.RE
.PP
/confdConfig/cdb/operational
.RS 4
Operational data can either be implemented by external callbacks, or stored in CDB (or a combination of both)\&. The operational datastore is used when data is to be stored in CDB\&.
.sp
.RE
.PP
/confdConfig/cdb/operational/enabled (boolean) [false]
.RS 4
Whether to enable storage of operational data in CDB\&.
.RE
.PP
/confdConfig/cdb/operational/dbDir (string)
.RS 4
dbDir is the directory on disk which CDB operational uses for its storage and any temporary files being used\&. If left unset (default) the same directory as dbDir for CDB is used\&.
.RE
.PP
/confdConfig/cdb/operational/persistent (confspec | always | never | yang) [yang]
.RS 4
By default the decision on how operational data in CDB is stored (persistent or volatile) is decided for each element in the YANG data model, via the tailf:persistent substatement to tailf:cdb\-oper, see tailf_yang_extensions(5)\&. It is possible to override this by using this setting in confd\&.conf\&. If \*(Aqnever\*(Aq, CDB will only keep the operational datastore in RAM\&. And if set to \*(Aqalways\*(Aq all CDB stored operational data will be persistently backed to a file\&. NOTE: the option \*(Aqconfspec\*(Aq is DEPRECATED \- use \*(Aqyang\*(Aq instead\&.
.RE
.PP
/confdConfig/cdb/operational/replication (never | always | persistent) [persistent]
.RS 4
When CDB replication is enabled (which it is when high\-availability mode is enabled, see /confdConfig/ha) the CDB operational store can optionally be replicated too\&. When set to \*(Aqpersistent\*(Aq, only persistent operational data is replicated\&. When set to \*(Aqnever\*(Aq, CDB operational is never replicated\&. Using \*(Aqalways\*(Aq means that both persistent and non\-persistent data is replicated\&.
.RE
.PP
/confdConfig/cdb/operational/replicationMode (async | sync) [async]
.RS 4
When CDB replication is enabled (which it is when high\-availability mode is enabled, see /confdConfig/ha) the replication of the CDB operational store (according to /confdConfig/cdb/operational/replication) can be done either asynchronously or synchronously\&. With the default asynchronous replication, an API call writing operational data will return as soon as the updates have been sent to the connected secondary nodes\&. With synchronous replication, the API call will block until the updates have been completely propagated to the secondary nodes\&.
.RE
.PP
/confdConfig/ha/enabled (boolean) [false]
.RS 4
Enables the high\-availability mode\&.
.RE
.PP
/confdConfig/ha/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
Defines which IP address ConfD should use for incoming requests from other HA nodes\&.
.RE
.PP
/confdConfig/ha/port (inet:port\-number) [4569]
.RS 4
Defines which port number confd should use for incoming requests from other HA nodes\&.
.RE
.PP
/confdConfig/ha/netns (string)
.RS 4
The network namespace name where the listening socket will belong to\&.
.RE
.PP
/confdConfig/ha/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/ha/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, and network namespace names, and VRF interface names; which are used for incoming requests from other HA nodes\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/ha/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/ha/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/ha/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>10\&.45\&.22\&.11:4777|netns=hans0|vrf=vrf0</extraIpPorts>
<extraIpPorts>127\&.0\&.0\&.1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=hans1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/ha/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for HA traffic\&.
.RE
.PP
/confdConfig/ha/externalIpc/enabled (boolean) [false]
.RS 4
Enables a user\-provided IPC mechanism for the communication between HA nodes\&. See the ConfD IPC section in the Advanced Topics chapter in the User Guide for further details\&.
.RE
.PP
/confdConfig/ha/externalIpc/address (string)
.RS 4
This parameter is mandatory\&.
.sp
The address ConfD should use for incoming requests from other HA nodes when the user\-provided IPC mechanism is enabled\&.
.RE
.PP
/confdConfig/ha/tickTimeout (xs:duration) [PT20S]
.RS 4
Defines the timeout between keepalive ticks sent between HA nodes\&. The special value \*(AqPT0\*(Aq means that no keepalive ticks will ever be sent\&.
.RE
.PP
/confdConfig/encryptedStrings
.RS 4
encryptedStrings defines keys used to encrypt strings adhering to the types tailf:des3\-cbc\-encrypted\-string, tailf:aes\-cfb\-128\-encrypted\-string and tailf:aes\-256\-cfb\-128\-encrypted\-string as defined in the tailf\-common YANG module, see the confd_types(3) manual page\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/externalKeys
.RS 4
Configuration of an external command that will provide the keys used for encryptedStrings\&. When set no keys for encrypted\-strings can be set in the configuration\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/externalKeys/command (string)
.RS 4
This parameter is mandatory\&.
.sp
Path to command executed to output keys\&.
.RE
.PP
/confdConfig/encryptedStrings/externalKeys/commandTimeout (xs:duration | infinity) [PT60S]
.RS 4
Command timeout\&. Timeout is measured between complete lines read from the output\&.
.RE
.PP
/confdConfig/encryptedStrings/externalKeys/commandArgument (string)
.RS 4
Argument available in externalKeys command as the environment variable CONFD_EXTERNAL_KEYS_ARGUMENT\&.
.RE
.PP
/confdConfig/encryptedStrings/DES3CBC
.RS 4
In the DES3CBC case three 64 bits (8 bytes) keys and a random initial vector are used to encrypt the string\&. The initVector element is only used when upgrading from versions before ConfD\-6\&.2, but it is kept for backward compatibility reasons\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/DES3CBC/key1 (hex8ValueType)
.RS 4
This parameter is mandatory\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/DES3CBC/key2 (hex8ValueType)
.RS 4
This parameter is mandatory\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/DES3CBC/key3 (hex8ValueType)
.RS 4
This parameter is mandatory\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/DES3CBC/initVector (hex8ValueType)
.RS 4
.RE
.PP
/confdConfig/encryptedStrings/AESCFB128
.RS 4
In the AESCFB128 case one 128 bits (16 bytes) key and a random initial vector are used to encrypt the string\&. The initVector element is only used when upgrading from versions before ConfD\-6\&.2, but it is kept for backward compatibility reasons\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/AESCFB128/key (hex16ValueType)
.RS 4
This parameter is mandatory\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/AESCFB128/initVector (hex16ValueType)
.RS 4
.RE
.PP
/confdConfig/encryptedStrings/AES256CFB128
.RS 4
In the AES256CFB128 case one 256 bits (32 bytes) key and a random initial vector are used to encrypt the string\&.
.sp
.RE
.PP
/confdConfig/encryptedStrings/AES256CFB128/key (hex32ValueType)
.RS 4
This parameter is mandatory\&.
.sp
.RE
.PP
/confdConfig/cryptHash
.RS 4
cryptHash specifies how cleartext values should be hashed for leafs of the types ianach:crypt\-hash, tailf:sha\-256\-digest\-string, and tailf:sha\-512\-digest\-string \- see the confd_types(3) manual page\&.
.sp
.RE
.PP
/confdConfig/cryptHash/algorithm (md5 | sha\-256 | sha\-512) [md5]
.RS 4
algorithm can be set to one of the values \*(Aqmd5\*(Aq, \*(Aqsha\-256\*(Aq, or \*(Aqsha\-512\*(Aq, to choose the corresponding hash algorithm for hashing of cleartext values for the ianach:crypt\-hash type\&.
.RE
.PP
/confdConfig/cryptHash/rounds (cryptHashRoundsType) [5000]
.RS 4
For the \*(Aqsha\-256\*(Aq and \*(Aqsha\-512\*(Aq algorithms for the ianach:crypt\-hash type, and for the tailf:sha\-256\-digest\-string and tailf:sha\-512\-digest\-string types, \*(Aqrounds\*(Aq specifies how many times the hashing loop should be executed\&. If a value other than the default 5000 is specified, the hashed format will have \*(Aqrounds=N$\*(Aq, where N is the specified value, prepended to the salt\&. This parameter is ignored for the \*(Aqmd5\*(Aq algorithm for ianach:crypt\-hash\&.
.RE
.PP
/confdConfig/logs
.RS 4
This section defines settings which affect the logging done by ConfD\&.
.sp
.RE
.PP
/confdConfig/logs/syslogConfig
.RS 4
Shared settings for how to log to syslog\&. Logs (see below) can be configured to log to file and/or syslog\&. If a log is configured to log to syslog, the settings under /confdConfig/logs/syslogConfig are used\&.
.sp
.RE
.PP
/confdConfig/logs/syslogConfig/version (bsd | 1) [bsd]
.RS 4
version is either \*(Aqbsd\*(Aq (traditional syslog) or \*(Aq1\*(Aq (new IETF syslog format: draft\-ietf\-syslog\-protocol\-16\&.txt)\&. \*(Aq1\*(Aq implies that /confdConfig/logs/syslogConfig/udp/enabled must be set to \*(Aqtrue\*(Aq\&.
.RE
.PP
/confdConfig/logs/syslogConfig/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType) [daemon]
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqauthpriv\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&. This facility setting is the default facility\&. It\*(Aqs also possible to set individual facilities in the different logs below\&. Furthermore with the syslogServers container described below it is possible to set default facility on a per server basis\&. If facility is explictly set for a log type, that item is used\&.
.RE
.PP
/confdConfig/logs/syslogConfig/udp
.RS 4
This is a container for UDP syslog\&. This container can only contain the configuration for a single UDP syslog server\&. If we need more than one syslog server we must use the /confdConfig/logs/syslogConfig/syslogServers container instead\&. If the udp container is used, the syslogServers container is ignored\&.
.sp
.RE
.PP
/confdConfig/logs/syslogConfig/udp/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq, messages will be sent to the local syslog daemon\&.
.RE
.PP
/confdConfig/logs/syslogConfig/udp/host (inet:host)
.RS 4
This parameter is mandatory\&.
.sp
host is either a domain name or an IPv4/IPv6 network address\&. UDP syslog messages are sent to this host\&.
.RE
.PP
/confdConfig/logs/syslogConfig/udp/port (inet:port\-number) [514]
.RS 4
port is a valid port number to be used in combination with /confdConfig/logs/syslogConfig/udp/host\&.
.RE
.PP
/confdConfig/logs/syslogConfig/syslogServers
.RS 4
This is an alternative way of specifying UDP syslog servers\&. If we use the /confdCfg/logs/syslogConfig/udp container this container is ignored, alternatively, if we use this container the /confdCfg/logs/syslogConfig/udp container is ignored\&.
.sp
.RE
.PP
/confdConfig/logs/syslogConfig/syslogServers/server
.RS 4
A set of syslog servers that get a copy of all syslog messages\&.
.RE
.PP
/confdConfig/logs/syslogConfig/syslogServers/server/host (inet:host)
.RS 4
host is either a domain name or an IPv4/IPv6 network address\&. UDP syslog messages are sent to this host\&.
.RE
.PP
/confdConfig/logs/syslogConfig/syslogServers/server/port (inet:port\-number) [514]
.RS 4
port is the UDP port number where this syslog server is listening\&.
.RE
.PP
/confdConfig/logs/syslogConfig/syslogServers/server/version (bsd | 1) [bsd]
.RS 4
version is either \*(Aqbsd\*(Aq (traditional syslog) or \*(Aq1\*(Aq (new IETF syslog format: draft\-ietf\-syslog\-protocol\-16\&.txt)\&.
.RE
.PP
/confdConfig/logs/syslogConfig/syslogServers/server/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType) [daemon]
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&.
.RE
.PP
/confdConfig/logs/syslogConfig/syslogServers/server/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq, this syslog server will not get any udp messages\&.
.RE
.PP
/confdConfig/logs/confdLog
.RS 4
confdLog is ConfD\*(Aqs daemon log\&. Check this log for startup problems of the ConfD daemon itself\&. This log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/confdLog/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the log is enabled\&.
.RE
.PP
/confdConfig/logs/confdLog/file/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, file logging is enabled\&.
.RE
.PP
/confdConfig/logs/confdLog/file/name (string)
.RS 4
This parameter is mandatory\&.
.sp
name is the full path to the actual log file\&.
.RE
.PP
/confdConfig/logs/confdLog/syslog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, syslog messages are sent\&.
.RE
.PP
/confdConfig/logs/confdLog/syslog/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType)
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqauthpriv\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&. This optional value overrides the /confdConfig/logs/syslogConfig/facility for this particular log\&.
.RE
.PP
/confdConfig/logs/confdLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/developerLog
.RS 4
developerLog is a debug log for troubleshooting user\-written code, AAA rules etc\&. Enable and check this log for problems with validation code etc\&. This log can be configured as /confdConfig/logs/confdLog\&. The log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/developerLog/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the log is enabled\&.
.RE
.PP
/confdConfig/logs/developerLog/file/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, file logging is enabled\&.
.RE
.PP
/confdConfig/logs/developerLog/file/name (string)
.RS 4
This parameter is mandatory\&.
.sp
name is the full path to the actual log file\&.
.RE
.PP
/confdConfig/logs/developerLog/syslog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, syslog messages are sent\&.
.RE
.PP
/confdConfig/logs/developerLog/syslog/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType)
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqauthpriv\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&. This optional value overrides the /confdConfig/logs/syslogConfig/facility for this particular log\&.
.RE
.PP
/confdConfig/logs/developerLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/developerLogLevel (error | info | trace) [info]
.RS 4
Controls which level of developer messages are printed in the developer log\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/logs/auditLog
.RS 4
auditLog is an audit log recording successful and failed logins to the ConfD backplane and also user operations performed from the CLI or northbound interfaces\&. This log is enabled by default\&. In all other regards it can be configured as /confdConfig/logs/confdLog\&. This log is not rotated, i\&.e\&. use logrotate(8)\&. This configuration parameter takes effect for both existing and new sessions\&.
.sp
.RE
.PP
/confdConfig/logs/auditLog/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the log is enabled\&.
.RE
.PP
/confdConfig/logs/auditLog/file/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, file logging is enabled\&.
.RE
.PP
/confdConfig/logs/auditLog/file/name (string)
.RS 4
This parameter is mandatory\&.
.sp
name is the full path to the actual log file\&.
.RE
.PP
/confdConfig/logs/auditLog/syslog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, syslog messages are sent\&.
.RE
.PP
/confdConfig/logs/auditLog/syslog/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType)
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqauthpriv\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&. This optional value overrides the /confdConfig/logs/syslogConfig/facility for this particular log\&.
.RE
.PP
/confdConfig/logs/auditLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/auditLogCommit (boolean) [false]
.RS 4
Controls whether the audit log should include messages about the resulting configuration changes for each commit to the running data store\&. This configuration parameter takes effect for both existing and new sessions\&. If set to \*(Aqtrue\*(Aq, the audit log will include entries of the form:
.sp
.if n \{\
.RS 4
.\}
.nf
    commit thandle <N> begin [confirmed [extended]]
    commit thandle <N> comment <comment>
    commit thandle <N> label <label>
    commit thandle <N> <path> created
    commit thandle <N> <path> deleted
    commit thandle <N> <path> moved first
    commit thandle <N> <path> moved after {<keys>}
    commit thandle <N> <path> set to \*(Aq<value>\*(Aq
    commit thandle <N> <path> default set (<value>) (*)
    commit thandle <N> <path> attribute \*(Aq<name>\*(Aq set to \*(Aq<value>\*(Aq
    commit thandle <N> <path> attribute \*(Aq<name>\*(Aq deleted
    commit thandle <N> end
    commit confirmed completed
    commit confirmed canceled

.fi
.if n \{\
.RE
.\}
(*) The presence of these entries are controlled by the parameter auditLogCommitDefaults\&.
.sp
The \*(Aqcommit thandle <N> begin\*(Aq entry indicates the start of a commit for the transaction with handle N\&. This is followed by a \*(Aqcommit thandle <N> comment <comment>\*(Aq entry and/or a \*(Aqcommit thandle <N> label <label>\*(Aq entry if a commit comment and/or label was given, then a number of \*(Aqcommit thandle <N> <path> \&.\&.\&.\*(Aq entries detailing the changes, and finally a \*(Aqcommit thandle <N> end\*(Aq entry\&.
.sp
If \*(Aqbegin\*(Aq is followed by \*(Aqconfirmed\*(Aq, it means that the changes are part of a confirmed commit that will not be permanent until a \*(Aqcommit confirmed completed\*(Aq entry is logged \- if \*(Aqcommit confirmed canceled\*(Aq is logged instead, the changes have been reverted\&. If \*(Aqbegin confirmed\*(Aq is followed by \*(Aqextended\*(Aq, it means that the changes are part of a confirmed commit that extends a confirmed commit that is already in progress\&.
.RE
.PP
/confdConfig/logs/auditLogCommitDefaults (boolean) [false]
.RS 4
If this leaf is set to \*(Aqtrue\*(Aq, then the auditCommitLog will contain entries on the form:
.sp
.if n \{\
.RS 4
.\}
.nf
    commit thandle <N> <path> default set (<value>)

.fi
.if n \{\
.RE
.\}
Adding these entries can have a performance impact\&.
.RE
.PP
/confdConfig/logs/netconfLog
.RS 4
netconfLog is a log for troubleshooting NETCONF operations, such as checking why e\&.g\&. a filter operation didn\*(Aqt return the data requested\&. This log can be configured as /confdConfig/logs/confdLog\&. The log configuration takes effect for both existing and new sessions\&. The log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/netconfLog/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the log is enabled\&.
.RE
.PP
/confdConfig/logs/netconfLog/file/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, file logging is enabled\&.
.RE
.PP
/confdConfig/logs/netconfLog/file/name (string)
.RS 4
This parameter is mandatory\&.
.sp
name is the full path to the actual log file\&.
.RE
.PP
/confdConfig/logs/netconfLog/syslog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, syslog messages are sent\&.
.RE
.PP
/confdConfig/logs/netconfLog/syslog/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType)
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqauthpriv\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&. This optional value overrides the /confdConfig/logs/syslogConfig/facility for this particular log\&.
.RE
.PP
/confdConfig/logs/netconfLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/netconfLog/logReplyStatus (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ConfD extends netconf log with rpc\-reply status (\*(Aqok\*(Aq or \*(Aqerror\*(Aq)\&.
.RE
.PP
/confdConfig/logs/jsonrpcLog
.RS 4
jsonrpcLog is a log of JSON\-RPC traffic\&. This log can be configured as /confdConfig/logs/confdLog\&. The log configuration takes effect for both existing and new sessions\&. The log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/jsonrpcLog/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the log is enabled\&.
.RE
.PP
/confdConfig/logs/jsonrpcLog/file/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, file logging is enabled\&.
.RE
.PP
/confdConfig/logs/jsonrpcLog/file/name (string)
.RS 4
This parameter is mandatory\&.
.sp
name is the full path to the actual log file\&.
.RE
.PP
/confdConfig/logs/jsonrpcLog/syslog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, syslog messages are sent\&.
.RE
.PP
/confdConfig/logs/jsonrpcLog/syslog/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType)
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqauthpriv\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&. This optional value overrides the /confdConfig/logs/syslogConfig/facility for this particular log\&.
.RE
.PP
/confdConfig/logs/jsonrpcLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/snmpLog
.RS 4
snmpLog is a log for tracing SNMP requests and responses\&. This log can be configured as /confdConfig/logs/confdLog\&. The log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/snmpLog/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the log is enabled\&.
.RE
.PP
/confdConfig/logs/snmpLog/file/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, file logging is enabled\&.
.RE
.PP
/confdConfig/logs/snmpLog/file/name (string)
.RS 4
This parameter is mandatory\&.
.sp
name is the full path to the actual log file\&.
.RE
.PP
/confdConfig/logs/snmpLog/syslog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, syslog messages are sent\&.
.RE
.PP
/confdConfig/logs/snmpLog/syslog/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType)
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqauthpriv\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&. This optional value overrides the /confdConfig/logs/syslogConfig/facility for this particular log\&.
.RE
.PP
/confdConfig/logs/snmpLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/snmpLogLevel (error | info) [info]
.RS 4
Controls which level of SNMP pdus are printed in the SNMP log\&. The value \*(Aqerror\*(Aq means that only PDUs with error\-status not equal to \*(AqnoError\*(Aq are printed\&.
.RE
.PP
/confdConfig/logs/snmpGatewayLog
.RS 4
snmpGatewayLog is a log for tracing SNMP Gateway requests and responses\&. The log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/snmpGatewayLog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the SNMP Gateway log is used\&.
.RE
.PP
/confdConfig/logs/snmpGatewayLog/northbound (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, all requests towards the snmp gateway are logged\&.
.RE
.PP
/confdConfig/logs/snmpGatewayLog/southbound (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, all requests done by the snmp gateway are logged\&.
.RE
.PP
/confdConfig/logs/snmpGatewayLog/filename (string)
.RS 4
The name of the file where the snmp gateway log is written\&. If \&.\&./external/enabled is \*(Aqtrue\*(Aq this can be omitted\&.
.RE
.PP
/confdConfig/logs/snmpGatewayLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/webuiBrowserLog
.RS 4
Deprecated\&. Should not be used\&.
.sp
.RE
.PP
/confdConfig/logs/webuiBrowserLog/enabled (boolean) [false]
.RS 4
Deprecated\&. Should not be used\&.
.RE
.PP
/confdConfig/logs/webuiBrowserLog/filename (string)
.RS 4
This parameter is mandatory\&.
.sp
Deprecated\&. Should not be used\&.
.RE
.PP
/confdConfig/logs/webuiAccessLog
.RS 4
webuiAccessLog is an access log for the embedded ConfD Web server\&. This file adheres to the Common Log Format, as defined by Apache and others\&. This log is not enabled by default and is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/webuiAccessLog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the access log is used\&.
.RE
.PP
/confdConfig/logs/webuiAccessLog/trafficLog (boolean) [false]
.RS 4
Is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, all HTTP(S) traffic towards the embedded Web server is logged in a log file named \*(Aqtraffic\&.trace\*(Aq\&. The log file can be used to debugging JSON\-RPC/REST/RESTCONF\&. Beware: Do not use this log in a production setting\&. This log is not enabled by default and is not rotated, i\&.e\&. use logrotate(8)\&.
.RE
.PP
/confdConfig/logs/webuiAccessLog/dir (string)
.RS 4
This parameter is mandatory\&.
.sp
The path to the directory whereas the access log should be written to\&.
.RE
.PP
/confdConfig/logs/webuiAccessLog/syslog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, syslog messages are sent\&.
.RE
.PP
/confdConfig/logs/webuiAccessLog/syslog/facility (daemon | authpriv | local0 | local1 | local2 | local3 | local4 | local5 | local6 | local7 | intFacilityType)
.RS 4
facility is either \*(Aqdaemon\*(Aq, \*(Aqauthpriv\*(Aq, \*(Aqlocal0\*(Aq, \&.\&.\&., \*(Aqlocal7\*(Aq or an unsigned integer\&. This optional value overrides the /confdConfig/logs/syslogConfig/facility for this particular log\&.
.RE
.PP
/confdConfig/logs/netconfTraceLog
.RS 4
netconfTraceLog is a log for understanding and troubleshooting NETCONF protocol interactions\&. When this log is enabled, all NETCONF traffic to and from ConfD is stored to a file\&. By default, all XML is pretty\-printed\&. This will slow down the NETCONF server, so be careful when enabling this log\&. This log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
Please note that this means that everything, including potentially sensitive data, is logged\&. No filtering is done\&.
.sp
.RE
.PP
/confdConfig/logs/netconfTraceLog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, all NETCONF traffic is logged\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/logs/netconfTraceLog/filename (string)
.RS 4
The name of the file where the NETCONF traffic trace log is written\&. If \&.\&./external/enabled is \*(Aqtrue\*(Aq this can be omitted\&.
.RE
.PP
/confdConfig/logs/netconfTraceLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/netconfTraceLog/format (pretty | raw) [pretty]
.RS 4
The value \*(Aqpretty\*(Aq means that the XML data is pretty\-printed\&. The value \*(Aqraw\*(Aq means that it is not\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/logs/xpathTraceLog
.RS 4
xpathTraceLog is a log for understanding and troubleshooting XPath evaluations\&. When this log is enabled, the execution of all XPath queries evaluated by ConfD is logged to a file\&.
.sp
This will slow down ConfD, so be careful when enabling this log\&. This log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/xpathTraceLog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, all XPath execution is logged\&.
.RE
.PP
/confdConfig/logs/xpathTraceLog/filename (string)
.RS 4
The name of the file where the XPath trace log is written\&.
.RE
.PP
/confdConfig/logs/xpathTraceLog/external/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, send log data to external command for processing\&.
.RE
.PP
/confdConfig/logs/extLog
.RS 4
extLog is a log for logging events related to external log processing such as process execution, unexpected termination etc\&.
.sp
This log is not rotated, i\&.e\&. use logrotate(8)\&.
.sp
.RE
.PP
/confdConfig/logs/extLog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, external log processing events is logged\&.
.RE
.PP
/confdConfig/logs/extLog/filename (string)
.RS 4
This parameter is mandatory\&.
.sp
The name of the file where the log for external log processing is written\&.
.RE
.PP
/confdConfig/logs/extLog/level (uint8) [2]
.RS 4
The log level of extLog\&. 0 is the most critical, 7 is trace logging\&.
.RE
.PP
/confdConfig/logs/errorLog
.RS 4
errorLog is an error log used for internal logging from the ConfD daemon\&. It is used for troubleshooting the ConfD daemon itself, and it is recommended that it is enabled, in order to capture information about problems that are difficult to reproduce\&. This log is rotated by the ConfD daemon (see below)\&.
.sp
.RE
.PP
/confdConfig/logs/errorLog/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, error logging is performed\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/logs/errorLog/filename (string)
.RS 4
This parameter is mandatory\&.
.sp
filename is the full path to the actual log file\&. This parameter must be set if the errorLog is enabled\&.
.RE
.PP
/confdConfig/logs/errorLog/maxSize (tailf:size) [S1M]
.RS 4
maxSize is the maximum size of an individual log file before it is rotated\&. Log filenames are reused when five logs have been exhausted\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/logs/errorLog/debug/enabled (boolean) [false]
.RS 4
.RE
.PP
/confdConfig/logs/errorLog/debug/level (uint16) [2]
.RS 4
.RE
.PP
/confdConfig/logs/errorLog/debug/tag (string)
.RS 4
This parameter may be given multiple times\&.
.sp
.RE
.PP
/confdConfig/logs/progressTrace
.RS 4
progressTrace is used for tracing progress events emitted by transactions and actions in ConfD\&. It provides useful information for debugging, diagnostics and profiling\&. Enabling this setting allows progress trace files to be written to the configured directory\&. What data to be emitted are configured in /progress/trace\&.
.sp
.RE
.PP
/confdConfig/logs/progressTrace/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, progress trace files are written to the configured directory\&.
.RE
.PP
/confdConfig/logs/progressTrace/dir (string)
.RS 4
This parameter is mandatory\&.
.sp
The directory path to the location of the progress trace files\&.
.RE
.PP
/confdConfig/logs/external/enabled (boolean) [false]
.RS 4
.RE
.PP
/confdConfig/logs/external/command (string)
.RS 4
This parameter is mandatory\&.
.sp
Path to command executed to process log data from stdin\&.
.RE
.PP
/confdConfig/logs/external/restart/maxAttempts (uint8) [3]
.RS 4
Max restart attempts within period, includes time used by delay\&. If more than \*(AqmaxAttempts\*(Aq restarts have been done within \*(Aqperiod\*(Aq of time external processing will be disabled until a reload is issued or the configuration is changed\&.
.RE
.PP
/confdConfig/logs/external/restart/delay (xs:duration | infinity) [PT1S]
.RS 4
Delay between start attempts if the command failed to start or stopped unexpectedly\&.
.RE
.PP
/confdConfig/logs/external/restart/period (xs:duration | infinity) [PT30S]
.RS 4
Period of time start attempts are counted in\&.
.RE
.PP
/confdConfig/logs/traceId (boolean) [false]
.RS 4
Enable a per request unique trace id, included in headers and entries for relevant logs\&.
.RE
.PP
/confdConfig/datastores
.RS 4
datastores defines which datastores the ConfD daemon should be setup to handle\&.
.sp
.RE
.PP
/confdConfig/datastores/startup
.RS 4
ConfD may keep separate running and startup configuration databases\&. When the system reboots for whatever reason, the running config database is lost, and the startup is read\&.
.RE
.PP
/confdConfig/datastores/startup/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, a startup database is managed\&. Enable this only if our system uses a separate startup and running database\&.
.RE
.PP
/confdConfig/datastores/candidate
.RS 4
ConfD may keep a shared, named alternative configuration database which can be modified without impacting the running configuration\&. Changes in the candidate can be commit to running, or discarded\&.
.RE
.PP
/confdConfig/datastores/candidate/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, a candidate database is managed\&. Enable this if we want our users to use this feature from NETCONF, CLI or Webui, or other agents\&.
.RE
.PP
/confdConfig/datastores/candidate/implementation (confd | external) [confd]
.RS 4
implementation is either \*(Aqconfd\*(Aq or \*(Aqexternal\*(Aq\&. By default, ConfD implements the candidate configuration without impacting the application\&. But if our system already implements the candidate itself, set \*(Aqimplementation\*(Aq to \*(Aqexternal\*(Aq\&. This implies that the \*(Aqexternal\*(Aq candidate implementation must implement 5 C function callbacks for candidate manipulation\&. (See confd_lib_dp(3) and the example \*(Aqmisc/extern_candidate\*(Aq\&.
.sp
If subagents are used, \*(Aqimplementation\*(Aq must be set to \*(Aqexternal\*(Aq\&.
.RE
.PP
/confdConfig/datastores/candidate/storage (disk | ram | auto) [auto]
.RS 4
storage is either \*(Aqdisk\*(Aq, \*(Aqram\*(Aq, or \*(Aqauto\*(Aq\&.
.sp
\*(Aqdisk\*(Aq ConfD always stores the candidate on disk\&. \*(Aqfilename\*(Aq must also be set (see below)\&.
.sp
\*(Aqram\*(Aq ConfD always stores the candidate in ram\&. NOTE: If this alternative is used the implementation is not fully NETCONF compliant if confirmed\-commit is enabled\&. The reason is that when confirmed\-commit is used, the system must rollback to the previous configuration if it reboots but RAM data are lost\&.
.sp
\*(Aqauto\*(Aq ConfD stores the candidate on disk if absolutely necessary for proper operation; otherwise it is stored in ram\&. \*(Aqfilename\*(Aq must also be set (see below)\&.
.RE
.PP
/confdConfig/datastores/candidate/filename (string)
.RS 4
filename is the name of the file where the candidate will be stored, if implementation is \*(Aqconfd\*(Aq and \*(Aqstorage\*(Aq is \*(Aqdisk\*(Aq or \*(Aqauto\*(Aq\&.
.RE
.PP
/confdConfig/datastores/candidate/confirmedCommit
.RS 4
ConfD may use confirmed commits while using a candidate database\&.
.sp
.RE
.PP
/confdConfig/datastores/candidate/confirmedCommit/revertByCommit (boolean) [false]
.RS 4
while using confirmed commits with the candidate datastore it is possible to revert the confirmed commit using normal reversed commit(s) instead of activating a previously stored checkpoint\&. This is decided by setting the revertByCommit config parameter to \*(Aqtrue\*(Aq\&. RevertByCommit will only have effect if the candidate datastore is implemented in ConfD, i\&.e\&. /confdConfig/datastores/candidate/implementation is set to confd\&.
.sp
Setting revertByCommit to \*(Aqtrue\*(Aq will have severe impact on performance upon failing confirmed commits\&. Hence, it is not recommended to use revertByCommit \*(Aqtrue\*(Aq unless you absolutely can\*(Aqt support the highly optimized checkpoint scenario\&.
.RE
.PP
/confdConfig/datastores/running
.RS 4
By default, the running configuration is writable\&. This means that the application must be prepared to handle dynamic changes to the configuration\&.
.sp
.RE
.PP
/confdConfig/datastores/running/access (read\-write | writable\-through\-candidate) [read\-write]
.RS 4
access is either \*(Aqread\-write\*(Aq or \*(Aqwritable\-through\-candidate\*(Aq\&. If \*(Aqwritable\-through\-candidate\*(Aq, the candidate datastore must be enabled\&.
.sp
NOTE: The default value of read\-write here is somewhat unfortunate\&. If the candidate is enabled it is better to set the value writable\-through\-candidate\&. When a NETCONF manager reconfigures a node that has the candidate and also read\-write running, the manager can never know that running is up to date with the candidate and must thus always (logically) copy running to the candidate prior to modifying the candidate\&.
.RE
.PP
/confdConfig/scripts
.RS 4
It is possible to add scripts to control various things in ConfD, such as post\-commit callbacks\&. New CLI commands can also be added\&. The scripts must be stored under /confdConfig/scripts/dir where there is a sub\-directory for each script category\&. For some script categories it suffices to just add a script in the correct the sub\-directory in order to enable the script\&. For others some configuration needs to be done\&.
.sp
.RE
.PP
/confdConfig/scripts/dir (string)
.RS 4
This parameter may be given multiple times\&.
.sp
The directory path to the location of plug\-and\-play scripts\&. The scripts directory must have the following sub\-directories:
.sp
.if n \{\
.RS 4
.\}
.nf
   scripts/command/
           policy/
           post\-commit/

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/defaultHandlingMode (explicit | trim | report\-all) [explicit]
.RS 4
defaultHandlingModeType is either \*(Aqexplicit\*(Aq, \*(Aqtrim\*(Aq, or \*(Aqreport\-all\*(Aq\&. This parameter controls how default values for leafs are handled in the northbound interfaces\&.
.sp
\*(Aqexplicit\*(Aq If a value is set over a northbound interface, it is not considered default\&.
.sp
Default values are not displayed in northbound interfaces, unless asked for by the user\&.
.sp
\*(Aqtrim\*(Aq If a value is set over a northbound interface, it is considered default if it is equal to the data model\*(Aqs default value\&.
.sp
Values equal to the data model\*(Aqs default value are not displayed in northbound interfaces, unless asked for by the user\&.
.sp
\*(Aqreport\-all\*(Aq All values are logically stored in the data store, and displayed in northbound interfaces\&.
.sp
If the data store has the capability to handle default values, which for example CDB has, it will work with all values for this parameter\&. In this case, default values are never actually stored in the data store\&. The value of this parameter should be chosen to give the end\-user the best experience\&.
.sp
If the data store does not have the capability to handle default values, this parameter should be set to \*(Aqreport\-all\*(Aq\&.
.RE
.PP
/confdConfig/defaultHandlingModeAlsoSupported (explicit | trim | report\-all)
.RS 4
This parameter controls whether ConfD should allow overriding the default handling mode set in \*(AqconfdConfig/defaultHandlingMode\*(Aq with another default handling mode in NETCONF\*(Aqs \*(Aqget\*(Aq, \*(Aqget\-config\*(Aq and \*(Aqcopy\-config\*(Aq\&.
.sp
For now, it is only possible to override \*(Aqreport\-all\*(Aq with \*(Aqexplicit\*(Aq\&.
.RE
.PP
/confdConfig/sortTransactions (boolean) [true]
.RS 4
This parameter controls how ConfD lists newly created, not yet committed list entries\&. If this value is set to \*(Aqfalse\*(Aq, ConfD will list all new entries before listing existing data\&.
.sp
If this value is set to \*(Aqtrue\*(Aq, ConfD will merge new and existing entries, and provide one sorted view of the data\&. This behavior works well when CDB is used to store configuration data, but if an external data provider is used, ConfD does not know the sort order, and can thus not merge the new entries correctly\&. If an external data provider is used for configuration data, and the sort order differs from CDB\*(Aqs sort order, this parameter should be set to \*(Aqfalse\*(Aq\&.
.RE
.PP
/confdConfig/enableAttributes (boolean) [false]
.RS 4
This parameter controls if ConfD\*(Aqs attribute feature should be enabled or not\&. Currently there are four attributes; \*(Aqannotation\*(Aq, \*(Aqtags\*(Aq, \*(Aqinactive\*(Aq and \*(Aqorigin\*(Aq\&. These are available in northbound interfaces (e\&.g\&. the annotate command in the CLI, and annotation XML attribute in NETCONF), but in order to be useful they need support from the underlying configuration data provider\&. CDB supports attributes, but if an external data provider is used for configuration data, and it does not support the attribute callbacks, this parameter should be set to \*(Aqfalse\*(Aq\&.
.RE
.PP
/confdConfig/enableInactive (boolean) [false]
.RS 4
This parameter controls if ConfD\*(Aqs inactive feature should be enabled or not\&. This feature also requires enableAttributes to be enabled\&.
.RE
.PP
/confdConfig/enableOrigin (boolean) [false]
.RS 4
This parameter controls if ConfD\*(Aqs NMDA origin feature should be enabled or not\&. This feature also requires enableAttributes to be enabled\&.
.RE
.PP
/confdConfig/newlinesInBinaryBase64 (boolean) [true]
.RS 4
When doing the base64 encoding for the lexical representation of the YANG type \*(Aqbinary\*(Aq, ConfD will by default insert a newline (ascii 10) character every 72 characters of the encoding\&. This useful e\&.g\&. when debugging NETCONF sessions or editing XML documents with large \*(Aqbinary\*(Aq values, and robust base64 decoders will typically ignore all whitespace\&. However strict compliance with the YANG specification does not permit this insertion of newlines, and it can thus be turned off by setting this parameter to \*(Aqfalse\*(Aq\&.
.RE
.PP
/confdConfig/sessionLimits
.RS 4
Parameters for limiting concurrent access to ConfD\&.
.sp
.RE
.PP
/confdConfig/sessionLimits/maxSessions (uint32 | unbounded) [unbounded]
.RS 4
Puts a limit to the total number of concurrent sessions to ConfD\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/sessionLimits/sessionLimit
.RS 4
Parameters for limiting concurrent access for a specific context to ConfD\&. There can be multiple instances of this container element, each one specifying parameters for a specific context\&.
.RE
.PP
/confdConfig/sessionLimits/sessionLimit/context (string)
.RS 4
The context is either one of cli, netconf, webui, snmp, rest, or it can be any other context string defined through the use of MAAPI\&. As an example, if we use MAAPI to implement a CORBA interface to ConfD, our MAAPI program could send the string \*(Aqcorba\*(Aq as context\&.
.RE
.PP
/confdConfig/sessionLimits/sessionLimit/maxSessions (uint32 | unbounded)
.RS 4
This parameter is mandatory\&.
.sp
Puts a limit to the total number of concurrent sessions to ConfD\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/sessionLimits/maxConfigSessions (uint32 | unbounded) [unbounded]
.RS 4
Puts a limit to the total number of concurrent configuration sessions to ConfD\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/sessionLimits/configSessionLimit
.RS 4
Parameters for limiting concurrent read\-write transactions for a specific context to ConfD\&. There can be multiple instances of this container element, each one specifying parameters for a specific context\&.
.RE
.PP
/confdConfig/sessionLimits/configSessionLimit/context (string)
.RS 4
The context is either one of cli, netconf, webui, snmp, rest, or it can be any other context string defined through the use of MAAPI\&. As an example, if we use MAAPI to implement a CORBA interface to ConfD, our MAAPI program could send the string \*(Aqcorba\*(Aq as context\&.
.RE
.PP
/confdConfig/sessionLimits/configSessionLimit/maxSessions (uint32 | unbounded)
.RS 4
This parameter is mandatory\&.
.sp
Puts a limit to the total number of concurrent configuration sessions to ConfD for the corresponding context\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/parserLimits
.RS 4
Parameters for limiting parsing of XML data in ConfD\&.
.sp
.RE
.PP
/confdConfig/parserLimits/maxProcessingInstructionLength (uint32 | unbounded | model) [32768]
.RS 4
Maximum number of bytes for processing instructions\&.
.RE
.PP
/confdConfig/parserLimits/maxTagLength (uint32 | unbounded | model) [1024]
.RS 4
Maximum number of bytes for tag names including namespace prefix\&.
.RE
.PP
/confdConfig/parserLimits/maxAttributeLength (uint32 | unbounded | model) [1024]
.RS 4
Maximum number of bytes for attribute names including namespace prefix\&.
.RE
.PP
/confdConfig/parserLimits/maxAttributeValueLength (uint32 | unbounded) [16384]
.RS 4
Maximum number of bytes for attribute values in escaped form\&.
.RE
.PP
/confdConfig/parserLimits/maxAttributeCount (uint32 | unbounded | model) [64]
.RS 4
Maximum number of attributes on a single tag\&.
.RE
.PP
/confdConfig/parserLimits/maxXmlnsPrefixLength (uint32 | unbounded) [1024]
.RS 4
Maximum number of bytes for xmlns prefix\&.
.RE
.PP
/confdConfig/parserLimits/maxXmlnsValueLength (uint32 | unbounded | model) [1024]
.RS 4
Maximum number of bytes for a namespace value in escaped form\&.
.RE
.PP
/confdConfig/parserLimits/maxXmlnsCount (uint32 | unbounded) [1024]
.RS 4
Maximum number of xmlns declarations on a single tag\&.
.RE
.PP
/confdConfig/parserLimits/maxDataLength (uint32 | unbounded) [unbounded]
.RS 4
Maximum number of bytes of continuous data\&.
.RE
.PP
/confdConfig/aaa
.RS 4
The login procedure to ConfD is fully described in the ConfD User Guide\&.
.sp
.RE
.PP
/confdConfig/aaa/sshServerKeyDir (string)
.RS 4
sshServerKeyDir is the directory file path where the keys used by the ConfD SSH daemon are found\&. This parameter must be set if SSH is enabled for NETCONF or the CLI\&. If SSH is enabled, the server keys used by ConfD are of the same format as the server keys used by openssh, i\&.e\&. the same format as generated by \*(Aqssh\-keygen\*(Aq\&.
.sp
Only DSA\- and RSA\-type keys can be used with the ConfD SSH daemon, as generated by \*(Aqssh\-keygen\*(Aq with the \*(Aq\-t dsa\*(Aq and \*(Aq\-t rsa\*(Aq switches, respectively\&.
.sp
The key must be stored with an empty passphrase, and with the name \*(Aqssh_host_dsa_key\*(Aq if it is a DSA\-type key, and with the name \*(Aqssh_host_rsa_key\*(Aq if it is an RSA\-type key\&.
.sp
The SSH server will advertise support for those key types for which there is a key file available and for which the required algorithm is enabled, see the /confdConfig/ssh/algorithms/serverHostKey directive\&.
.RE
.PP
/confdConfig/aaa/sshPubkeyAuthentication (none | local | system) [system]
.RS 4
Controls how the ConfD SSH daemon locates the user keys for public key authentication\&.
.sp
If set to \*(Aqnone\*(Aq, public key authentication is disabled\&.
.sp
If set to \*(Aqlocal\*(Aq, and the user exists in /aaa/authentication/users, the keys in the user\*(Aqs \*(Aqssh_keydir\*(Aq directory are used\&.
.sp
If set to \*(Aqsystem\*(Aq, the user is first looked up in /aaa/authentication/users, but only if /confdConfig/aaa/localAuthentication/enabled is set to \*(Aqtrue\*(Aq \- if localAuthentication is disabled, or the user does not exist in /aaa/authentication/users, but the user does exist in the OS password database, the keys in the user\*(Aqs $HOME/\&.ssh directory are used\&.
.RE
.PP
/confdConfig/aaa/sshLoginGraceTime (xs:duration) [PT10M]
.RS 4
ConfD closes ssh connections after this time if the client has not successfully authenticated itself by then\&. If the value is 0, there is no time limit for client authentication\&.
.sp
This is a global value for all ssh servers in ConfD\&.
.sp
Modification of this value will only affect ssh connections that are established after the modification has been done\&.
.RE
.PP
/confdConfig/aaa/sshMaxAuthTries (uint32 | unbounded) [unbounded]
.RS 4
ConfD closes ssh connections when the client has made this number of unsuccessful authentication attempts\&.
.sp
This is a global value for all ssh servers in ConfD\&.
.sp
Modification of this value will only affect ssh connections that are established after the modification has been done\&.
.RE
.PP
/confdConfig/aaa/aaaBridge
.RS 4
aaaBridge specifies if the aaa_bridge, as described in confd_aaa_bridge(1), will be used to access external AAA info\&.
.sp
.RE
.PP
/confdConfig/aaa/aaaBridge/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the confd_aaa_bridge program is automatically started by ConfD
.RE
.PP
/confdConfig/aaa/aaaBridge/file (string)
.RS 4
file specifies the location of the AAA data file needed by the confd_aaa_bridge program\&.
.RE
.PP
/confdConfig/aaa/defaultGroup (string)
.RS 4
If the group of a user cannot be found in the AAA sub\-system, a logged in user will end up as a member of the default group (if specified)\&. If a user logs in and the group membership cannot be established, the user will have zero access rights\&.
.RE
.PP
/confdConfig/aaa/authOrder (string)
.RS 4
By default the AAA system will try to authenticate a user in the following order\&. (1) localAuthentication i\&.e\&. the user is found inside /aaa/authentication/users\&. (2) pam \- i\&.e PAM authentication \- if enabled \- is tried\&. (3) externalAuthentication i\&.e\&. an external program is invoked to authenticate the user\&.
.sp
The default is thus:
.sp
.if n \{\
.RS 4
.\}
.nf
\*(AqlocalAuthentication pam externalAuthentication\*(Aq

.fi
.if n \{\
.RE
.\}
To change the order \- change this string\&. For example in order to always try pam authentication before local auth set it to: \*(Aqpam localAuthentication\*(Aq
.RE
.PP
/confdConfig/aaa/validationOrder (string)
.RS 4
By default the AAA system will try token validation for a user by the externalValidation configurables, as that is the only one currently available \- i\&.e\&. an external program is invoked to validate the token\&.
.sp
The default is thus:
.sp
.if n \{\
.RS 4
.\}
.nf
\*(AqexternalValidation\*(Aq

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/aaa/challengeOrder (string)
.RS 4
By default the AAA system will try challenge replies for a user by the externalChallenge configurables, as that is the only one currently available \- i\&.e\&. an external program is invoked to reply to the challenge\&.
.sp
The default is thus:
.sp
.if n \{\
.RS 4
.\}
.nf
\*(AqexternalChallenge\*(Aq

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/aaa/expirationWarning (ignore | display | prompt) [ignore]
.RS 4
When PAM or external authentication is used, the authentication mechanism may give a warning that the user\*(Aqs password is about to expire\&. This parameter controls how ConfD processes that warning message\&.
.sp
If set to \*(Aqignore\*(Aq, the warning is ignored\&.
.sp
If set to \*(Aqdisplay\*(Aq, interactive user interfaces will display the warning message at login time\&.
.sp
If set to \*(Aqprompt\*(Aq, interactive user interfaces will display the warning message at login time, and require that the user acknowledges the message before proceeding\&.
.RE
.PP
/confdConfig/aaa/auditUserName (known | never) [known]
.RS 4
Controls the logging of the user name when a failed authentication attempt is logged to the audit log\&.
.sp
If set to \*(Aqknown\*(Aq, the user name is only logged when it is known to be valid (i\&.e\&. when attempting localAuthentication and the user exists in /aaa/authentication/users), otherwise it is logged as \*(Aq[withheld]\*(Aq\&.
.sp
If set to \*(Aqnever\*(Aq, the user name is always logged as \*(Aq[withheld]\*(Aq\&.
.RE
.PP
/confdConfig/aaa/maxPasswordLength (uint16) [1024]
.RS 4
The maximum length of the cleartext password for all forms of password authentication\&. Authentication attempts using a longer password are rejected without attempting verification\&.
.sp
The hashing algorithms used for password verification, in particular those based on sha\-256 and sha\-512, require extremely high amounts of CPU usage when verification of very long passwords is attempted\&.
.RE
.PP
/confdConfig/aaa/pam
.RS 4
If PAM is to be used for login the ConfD daemon typically must run as root\&.
.sp
.RE
.PP
/confdConfig/aaa/pam/enabled (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ConfD uses PAM for authentication\&.
.RE
.PP
/confdConfig/aaa/pam/service (string) [common\-auth]
.RS 4
The PAM service to be used for the authentication\&. This can be any service we have installed in the /etc/pam\&.d directory\&. Different unices have different services installed under /etc/pam\&.d, and some use a file /etc/pam\&.conf instead \- choose a service which makes sense or create a new one\&.
.RE
.PP
/confdConfig/aaa/pam/timeout (xs:duration) [PT10S]
.RS 4
The maximum time that authentication will wait for a reply from PAM\&. If the timeout is reached, the PAM authentication will fail, but authentication attempts may still be done with other mechanisms as configured for /confdConfig/aaa/authOrder\&. Default is PT10S, i\&.e\&. 10 seconds\&.
.RE
.PP
/confdConfig/aaa/restconf/authCacheTTL (xs:duration) [PT10S]
.RS 4
The amount of time that RESTCONF locally caches authentication credentials before querying the AAA server\&. Default is PT10S, i\&.e\&. 10 seconds\&. Setting to PT0S, i\&.e\&. 0 seconds, effectively disables the authentication cache\&.
.RE
.PP
/confdConfig/aaa/restconf/enableAuthCacheClientIp (boolean) [false]
.RS 4
If enabled, a clients source IP address will also be stored in the RESTCONF authentication cache\&.
.RE
.PP
/confdConfig/aaa/externalAuthentication/enabled (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, external authentication is used\&.
.RE
.PP
/confdConfig/aaa/externalAuthentication/executable (string)
.RS 4
If we enable external authentication, an executable on the local host can be launched to authenticate a user\&. The executable will receive the username and the cleartext password on its standard input\&. The format is \*(Aq[${USER};${PASS};]\en\*(Aq\&. For example if user is \*(Aqbob\*(Aq and password is \*(Aqsecret\*(Aq, the executable will receive the string \*(Aq[bob;secret;]\*(Aq followed by a newline on its standard input\&. The program must parse this line\&.
.sp
The task of the external program, which for example could be a RADIUS client, is to authenticate the user and also provide the user to groups mapping\&. Refer to the External authentication section of the AAA chapter in the User Guide for the details of how the program should report the result back to ConfD\&.
.RE
.PP
/confdConfig/aaa/externalAuthentication/useBase64 (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ${USER} and ${PASS} in the data passed to the executable will be base64\-encoded, allowing e\&.g\&. for the password to contain \*(Aq;\*(Aq characters\&. For example if user is \*(Aqbob\*(Aq and password is \*(Aqsecret\*(Aq, the executable will receive the string \*(Aq[Ym9i;c2VjcmV0;]\*(Aq followed by a newline\&.
.RE
.PP
/confdConfig/aaa/externalAuthentication/includeExtra (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, additional information items will be provided to the executable: source IP address and port, context, and protocol\&. I\&.e\&. the complete format will be \*(Aq[${USER};${PASS};${IP};${PORT};${CONTEXT};${PROTO};]\en\*(Aq\&. Example: \*(Aq[bob;secret;192\&.168\&.1\&.1;12345;cli;ssh;]\en\*(Aq\&.
.RE
.PP
/confdConfig/aaa/localAuthentication/enabled (boolean) [true]
.RS 4
When set to \*(Aqtrue\*(Aq, ConfD uses local authentication\&. That means that the user data kept in the aaa namespace is used to authenticate users\&. When set to \*(Aqfalse\*(Aq some other authentication mechanism such as PAM or external authentication must be used\&.
.RE
.PP
/confdConfig/aaa/authenticationCallback/enabled (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ConfD will invoke an application callback when authentication has succeeded or failed\&. The callback may reject an otherwise successful authentication\&. If the callback has not been registered, all authentication attempts will fail\&. See confd_lib_dp(3) for the callback details\&.
.RE
.PP
/confdConfig/aaa/externalValidation/enabled (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, external token validation is used\&.
.RE
.PP
/confdConfig/aaa/externalValidation/executable (string)
.RS 4
If we enable external token validation, an executable on the local host can be launched to validate a user\&. The executable will receive a cleartext token on its standard input\&. The format is \*(Aq[${TOKEN};]\en\*(Aq\&. For example if the token is \*(Aq7ea345123\*(Aq, the executable will receive the string \*(Aq[7ea345123;]\*(Aq followed by a newline on its standard input\&. The program must parse this line\&.
.sp
The task of the external program, which for example could be a FUSION client, is to validate the token and also provide the token to user and groups mappings\&. Refer to the External validation section of the AAA chapter in the User Guide for the details of how the program should report the result back to ConfD\&.
.RE
.PP
/confdConfig/aaa/externalValidation/useBase64 (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ${TOKEN} in the data passed to the executable will be base64\-encoded, allowing e\&.g\&. for the token to contain \*(Aq;\*(Aq characters\&.
.RE
.PP
/confdConfig/aaa/externalValidation/includeExtra (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, additional information items will be provided to the executable: source IP address and port, context, and protocol\&. I\&.e\&. the complete format will be \*(Aq[${TOKEN};${IP};${PORT};${CONTEXT};${PROTO};]\en\*(Aq\&. Example: \*(Aq[7ea345123;192\&.168\&.1\&.1;12345;cli;ssh;]\en\*(Aq\&.
.RE
.PP
/confdConfig/aaa/validationCallback/enabled (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ConfD will invoke an application callback when validation has succeeded or failed\&. The callback may reject an otherwise successful validation\&. If the callback has not been registered, all validation attempts will fail\&. See confd_lib_dp(3) for the callback details\&.
.RE
.PP
/confdConfig/aaa/externalChallenge/enabled (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, the external challenge mechanism is used\&.
.RE
.PP
/confdConfig/aaa/externalChallenge/executable (string)
.RS 4
If we enable the external challenge mechanism, an executable on the local host is launched to potentially login a user\&. The executable will receive a cleartext challenge id and corresponding response on its standard input\&. The format is \*(Aq[${CH_ID};${RESPONSE};]\en\*(Aq\&. For example if the challenge id is \*(Aqer54y1\*(Aq, and the response is \*(Aqa9u1337\*(Aq the executable will receive the string \*(Aq[er54y1;a9u1337;]\*(Aq followed by a newline on its standard input\&. The program must parse this line\&.
.sp
The task of the external program, which for example could be a RADIUS client, is to authenticate the user and also provide the user to groups mapping\&. Refer to the External authentication section of the AAA chapter in the User Guide for the details of how the program should report the result back to ConfD\&.
.RE
.PP
/confdConfig/aaa/externalChallenge/useBase64 (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ${CH_ID} and ${RESPONSE} in the data passed to the executable will be base64\-encoded, allowing e\&.g\&. for the token to contain \*(Aq;\*(Aq characters\&.
.RE
.PP
/confdConfig/aaa/externalChallenge/includeExtra (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, additional information items will be provided to the executable: source IP address and port, context, and protocol\&. I\&.e\&. the complete format will be \*(Aq[${CH_ID};${RESPONSE};${IP};${PORT};${CONTEXT};${PROTO};]\en\*(Aq\&. Example: \*(Aq[er54y1;a9u1337;192\&.168\&.1\&.1;12345;cli;ssh;]\en\*(Aq\&.
.RE
.PP
/confdConfig/aaa/challengeCallback/enabled (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ConfD will invoke an application callback when the challenge mechanism has succeeded or failed\&. The callback may reject an otherwise successful challenge response\&. If the callback has not been registered, all validation attempts will fail\&. See confd_lib_dp(3) for the callback details\&.
.RE
.PP
/confdConfig/aaa/authorization/enabled (boolean) [true]
.RS 4
When set to \*(Aqfalse\*(Aq, all authorization checks are turned off, similar to the \-noaaa flag in confd_cli\&.
.RE
.PP
/confdConfig/aaa/authorization/callback/enabled (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq, ConfD will invoke application callbacks for authorization\&. If the callbacks have not been registered, all authorization checks will be rejected\&. See confd_lib_dp(3) for the callback details\&.
.RE
.PP
/confdConfig/aaa/authorization/nacmCompliant (boolean) [true]
.RS 4
In earlier versions, ConfD did not fully comply with the NACM specification: the \*(Aqmodule\-name\*(Aq leaf was required to match toplevel nodes, but it was not considered for the node being accessed\&. If this leaf is set to \*(Aqfalse\*(Aq, this non\-compliant behavior remains \- this setting is only provided for backward compatibility with existing rule sets, and is not recommended\&.
.RE
.PP
/confdConfig/aaa/namespace (inet:uri) [http://tail\-f\&.com/ns/aaa/1\&.1]
.RS 4
If we want to move the AAA data into another user\-defined namespace, we indicate that here\&.
.RE
.PP
/confdConfig/aaa/prefix (string) [/]
.RS 4
If we want to move the AAA data into another user\-defined namespace, we indicate the prefix path in that namespace where the ConfD AAA namespace has been mounted\&.
.RE
.PP
/confdConfig/rollback
.RS 4
Settings controlling if and where rollback files are created\&. A rollback file contains a copy of the system configuration\&. The current running configuration is always stored in rollback0, the previous version in rollback1 etc\&. The oldest saved configuration has the highest suffix\&.
.sp
.RE
.PP
/confdConfig/rollback/enabled (boolean) [false]
.RS 4
If \*(Aqtrue\*(Aq, then a rollback file will be created whenever the running configuration is modified\&. If /confdConfig/ha/enabled is set to \*(Aqtrue\*(Aq then rollback files are replicated from primary to secondary nodes\&. The rollback feature must be enabled on all HA nodes (although is possible to have a secondary with rollbacks disabled, that secondary will then not replicate the rollback files)\&.
.RE
.PP
/confdConfig/rollback/directory (string)
.RS 4
This parameter is mandatory\&.
.sp
Location where rollback files will be created\&.
.RE
.PP
/confdConfig/rollback/historySize (uint32) [35]
.RS 4
Number of old configurations to save\&.
.RE
.PP
/confdConfig/rollback/type (full | delta) [delta]
.RS 4
Type of rollback file to use\&. If \*(Aqfull\*(Aq is specified, then a full configuration dump is stored in each rollback file\&. Rollback file 0 will always contain the running configuration\&. If \*(Aqdelta\*(Aq is used, then only the changes are stored in the rollback file\&. Rollback file 0 will contain the changes from the last configuration\&.
.sp
Using deltas is more space and time efficient for large configurations\&. Full rollback files are more robust when multiple external databases are used\&. If the external databases becomes inconsistent a previous configuration can always be restored using a full rollback file\&.
.RE
.PP
/confdConfig/rollback/rollbackNumbering (fixed | rolling) [rolling]
.RS 4
rollbackNumbering is either \*(Aqfixed\*(Aq or \*(Aqrolling\*(Aq\&. If set to \*(Aqrolling\*(Aq then rollback file \*(Aq0\*(Aq will always contain the last commit\&. When using \*(Aqfixed\*(Aq each rollback will get a unique increasing number\&.
.RE
.PP
/confdConfig/ssh
.RS 4
This section defines settings which affect the behavior of the built in SSH implementation\&.
.sp
.RE
.PP
/confdConfig/ssh/idleConnectionTimeout (xs:duration) [PT10M]
.RS 4
The maximum time that an authenticated connection to the SSH server is allowed to exist without open channels\&. If the timeout is reached, the SSH server closes the connection\&. Default is PT10M, i\&.e\&. 10 minutes\&. If the value is 0, there is no timeout\&.
.RE
.PP
/confdConfig/ssh/algorithms
.RS 4
This section defines custom lists of algorithms to be usable with the built\-in SSH implementation\&.
.sp
For each type of algorithm, an empty value means that all supported algorithms should be usable, and a non\-empty value (a comma\-separated list of algorithm names) means that the intersection of the supported algorithms and the configured algorithms should be usable\&.
.sp
.RE
.PP
/confdConfig/ssh/algorithms/serverHostKey (string) [ssh\-ed25519,ssh\-rsa]
.RS 4
The supported serverHostKey algorithms (if implemented in libcrypto) are \*(Aqssh\-dss\*(Aq, \*(Aqssh\-rsa\*(Aq, \*(Aqssh\-ed25519\*(Aq, \*(Aqecdsa\-sha2\-nistp256\*(Aq, \*(Aqecdsa\-sha2\-nistp384\*(Aq, \*(Aqecdsa\-sha2\-nistp521\*(Aq, but for any SSH server, it is limited to those algorithms for which there is a host key installed in the directory given by /confdConfig/aaa/sshServerKeyDir\&.
.sp
To limit the usable serverHostKey algorithms to \*(Aqssh\-ed25519\*(Aq, set this value to \*(Aqssh\-ed25519\*(Aq or avoid installing a key of any other type than ssh\-ed25519 in the sshServerKeyDir\&.
.RE
.PP
/confdConfig/ssh/algorithms/kex (string) [curve25519\-sha256,ecdh\-sha2\-nistp256,diffie\-hellman\-group14\-sha256,diffie\-hellman\-group\-exchange\-sha256]
.RS 4
The supported key exchange algorithms (as long as their hash functions are implemented in libcrypto) are \*(Aqecdh\-sha2\-nistp256\*(Aq, \*(Aqecdh\-sha2\-nistp384\*(Aq, \*(Aqecdh\-sha2\-nistp512\*(Aq, \*(Aqcurve25519\-sha256\*(Aq, \*(Aqdiffie\-hellman\-group14\-sha256\*(Aq, \*(Aqdiffie\-hellman\-group\-exchange\-sha256\*(Aq, \*(Aqdiffie\-hellman\-group\-exchange\-sha1\*(Aq, \*(Aqdiffie\-hellman\-group14\-sha1\*(Aq\&.
.sp
To limit the usable key exchange algorithms to \*(Aqdiffie\-hellman\-group14\-sha256\*(Aq and \*(Aqdiffie\-hellman\-group\-exchange\-sha256\*(Aq (in that order) set this value to \*(Aqdiffie\-hellman\-group14\-sha256, diffie\-hellman\-group\-exchange\-sha256\*(Aq\&.
.RE
.PP
/confdConfig/ssh/algorithms/dhGroup
.RS 4
Range of allowed group size, the SSH server responds to the client during a \*(Aqdiffie\-hellman\-group\-exchange\*(Aq\&. The range will be the intersection of what the client requests, if there is none the key exchange will be aborted\&.
.sp
.RE
.PP
/confdConfig/ssh/algorithms/dhGroup/minSize (dhGroupSizeType) [2048]
.RS 4
Minimal size of p in bits\&.
.RE
.PP
/confdConfig/ssh/algorithms/dhGroup/maxSize (dhGroupSizeType) [4096]
.RS 4
Maximal size of p in bits\&.
.RE
.PP
/confdConfig/ssh/algorithms/mac (string) [hmac\-sha2\-512,hmac\-sha2\-256,hmac\-sha1]
.RS 4
The supported mac algorithms (if implemented in libcrypto) are \*(Aqhmac\-md5\*(Aq, \*(Aqhmac\-sha1\*(Aq, \*(Aqhmac\-sha2\-256\*(Aq, \*(Aqhmac\-sha2\-512\*(Aq, \*(Aqhmac\-sha1\-96\*(Aq and \*(Aqhmac\-md5\-96\*(Aq\&.
.RE
.PP
/confdConfig/ssh/algorithms/encryption (string) [aes128\-gcm@openssh\&.com,chacha20\-poly1305@openssh\&.com,aes128\-ctr,aes192\-ctr,aes256\-ctr]
.RS 4
The supported encryption algorithms (if implemented in libcrypto) are \*(Aqaes128\-gcm@openssh\&.com\*(Aq, \*(Aqchacha20\-poly1305@openssh\&.com\*(Aq, \*(Aqaes128\-ctr\*(Aq, \*(Aqaes192\-ctr\*(Aq, \*(Aqaes256\-ctr\*(Aq, \*(Aqaes128\-cbc\*(Aq, \*(Aqaes256\-cbc\*(Aq and \*(Aq3des\-cbc\*(Aq\&.
.RE
.PP
/confdConfig/ssh/clientAliveInterval (xs:duration | infinity) [infinity]
.RS 4
If no data has been received from a connected client for this long, a request that requires a response from the client, will be sent over the SSH transport\&.
.RE
.PP
/confdConfig/ssh/clientAliveCountMax (uint32) [3]
.RS 4
If no data has been received from the client, after this many consecutive clientAliveInterval has passed, the connection will be dropped\&.
.RE
.PP
/confdConfig/ssh/parallelLogin (boolean) [false]
.RS 4
By default parallel logins are disabled and will block more than one password authenticated session from seeing the password prompt\&. If enabled, then up to maxSessions minus active authenticated sessions will be shown password prompts\&.
.RE
.PP
/confdConfig/ssh/rekeyLimit
.RS 4
This section defines when the local peer will initiate the SSH rekeying procedure\&. Setting both values to 0 will disable rekeying from local side entirely\&. Note, that rekeying initiated by the other peer will still be performed
.RE
.PP
/confdConfig/ssh/rekeyLimit/bytes (uint64) [10737418240]
.RS 4
The limit of transferred data, after which the rekeying is to be initiated\&. The limit check occurs every minute\&. A positive value in bytes, default is 10737418240 for 1 GB\&. Value 0 means rekeying will not trigger after any amount of transferred data\&.
.RE
.PP
/confdConfig/ssh/rekeyLimit/minutes (uint32) [60]
.RS 4
The limit of time, after which the rekeying is to be initiated\&. A positive value greater than 0, default is 60 for 1 hour\&. Value 0 means rekeying will not trigger after any time duration\&.
.RE
.PP
/confdConfig/cli
.RS 4
CLI parameters\&.
.sp
.RE
.PP
/confdConfig/cli/enabled (boolean) [true]
.RS 4
When set to \*(Aqtrue\*(Aq, the CLI server is started\&.
.RE
.PP
/confdConfig/cli/maxLineLength (uint32) [0]
.RS 4
When set to a number larger than zero, this number will be the maximum line length which can be entered into the CLI\&. This allows ConfD to reject extremely large lines that can otherwise potentially consume all memory\&. Note that this option does not take effect in the J\-style load command\&.
.RE
.PP
/confdConfig/cli/allowImplicitWildcard (boolean) [true]
.RS 4
When set to \*(Aqtrue\*(Aq, users do not need to explicitly type * in the place of keys in lists, in order to see all list instances\&. When set to \*(Aqfalse\*(Aq, users have to explicitly type * to see all list instances\&. This option can be set to \*(Aqfalse\*(Aq, to help in the case where tab completion in the CLI takes long time when performed on lists with many instances\&.
.RE
.PP
/confdConfig/cli/enableLastLoginBanner (boolean) [true]
.RS 4
When set to \*(Aqtrue\*(Aq, the last\-login\-counter is enabled and displayed in the CLI during login\&.
.RE
.PP
/confdConfig/cli/startupScriptNonInteractive (boolean) [false]
.RS 4
startupScriptNonInteractive is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then a CLI startup script will be evaluated also for non\-interactive sessions\&.
.RE
.PP
/confdConfig/cli/modeNameStyle (short | two | full) [short]
.RS 4
modeNameStyle is either \*(Aqshort\*(Aq, \*(Aqtwo\*(Aq, or \*(Aqfull\*(Aq\&. If \*(Aqshort\*(Aq, then the mode name of submodes in the Cisco style CLIs will be constructed from the last element in the path and the instance key\&. If set to \*(Aqtwo\*(Aq then the two last modes will be used for the mode name\&. If set to \*(Aqfull\*(Aq then all components in the path will be used in the mode name\&.
.RE
.PP
/confdConfig/cli/allowOverwriteOnCopy (boolean) [false]
.RS 4
allowOverwriteOnCopy is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the copy command in the CLI will overwrite the target if it exists\&. If set to \*(Aqfalse\*(Aq then an error will be displayed if the target exists\&.
.RE
.PP
/confdConfig/cli/inheritPaginate (boolean) [true]
.RS 4
inheritPaginate is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the paginate setting of a pipe command will be determined by the paginate setting of the main command\&. If set to \*(Aqfalse\*(Aq, then the output from a pipe command will not be paginated unless pagination for that pipe command has been overridden in a clispec file\&.
.RE
.PP
/confdConfig/cli/safeScriptExecution (boolean) [true]
.RS 4
safeScriptExecution is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then \*(Aqexit\*(Aq, \*(Aqabort\*(Aq, \*(Aqend\*(Aq, and \*(Aqcommit\*(Aq are not allowed inside a script loaded through maapi with maapi_load_config()\&.
.RE
.PP
/confdConfig/cli/exitConfigModeOnCtrlC (boolean) [true]
.RS 4
exitConfigModeOnCtrlC is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqfalse\*(Aq the user will not be thrown out of config mode when ctrl\-c is pressed on an empty command line\&.
.RE
.PP
/confdConfig/cli/execNavigationCmds (boolean) [false]
.RS 4
execNavigationCmds is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then it is possible to enter a submode also in exec mode in C\- and I\-style CLI\&.
.RE
.PP
/confdConfig/cli/allowOldStyleModeCmds (boolean) [false]
.RS 4
allowOldStyleModeCmds is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then CLI commands in I and C\-style are interpreted as mode commands if the path coincides with a list in the data\-model\&. The recommended way to mount commands in a submode is instead to use the \*(Aqmount\*(Aq attribute\&.
.RE
.PP
/confdConfig/cli/continueOnErrorCmdStack (boolean) [false]
.RS 4
continueOnErrorCmdStack is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then command stack execution will continue even if an earlier command in the stack failed with an error, ie show xx ; show zz will execute both \*(Aqshow xx\*(Aq and \*(Aqshow zz\*(Aq even if \*(Aqshow xx\*(Aq failed with an error\&. If set to \*(Aqfalse\*(Aq then command execution will be aborted as soon as a command fails\&.
.RE
.PP
/confdConfig/cli/topLevelCmdsInSubMode (boolean) [false]
.RS 4
topLevelCmdsInSubMode is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq all top level commands in I and C\-style CLI are available in sub modes\&.
.RE
.PP
/confdConfig/cli/mixedMode (boolean) [false]
.RS 4
mixedMode is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq all oper mode commands are available in config mode\&.
.RE
.PP
/confdConfig/cli/completionShowOldVal (boolean) [true]
.RS 4
completionShowOldVal is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq a leaf\*(Aqs old value will be displayed inside brackets during command line completion\&. If set to \*(Aqfalse\*(Aq it will not be shown\&.
.RE
.PP
/confdConfig/cli/completionMetaInfo (false | alt1 | alt2) [false]
.RS 4
completionMetaInfo is either \*(Aqfalse\*(Aq, \*(Aqalt1\*(Aq or \*(Aqalt2\*(Aq\&. This option only applies to the J\-style CLI\&. If set to \*(Aqalt1\*(Aq then the alternatives shown for possible completions will be prefixed as follows:
.sp
.if n \{\
.RS 4
.\}
.nf
 containers with >
 lists with +
 leaf\-lists with +

.fi
.if n \{\
.RE
.\}
For example:
.sp
.if n \{\
.RS 4
.\}
.nf
 Possible completions:
 \&.\&.\&.
 > applications
 + apply\-groups
 \&.\&.\&.
 + dns\-servers
 \&.\&.\&.

.fi
.if n \{\
.RE
.\}
If set to \*(Aqalt2\*(Aq, then possible comopletions will be prefixed as follows:
.sp
.if n \{\
.RS 4
.\}
.nf
 containers with >
 lists with children with +>
 lists without children with +

.fi
.if n \{\
.RE
.\}
For example:
.sp
.if n \{\
.RS 4
.\}
.nf
 Possible completions:
 \&.\&.\&.
 > applications
 +>apply\-groups
 \&.\&.\&.
 + dns\-servers
 \&.\&.\&.

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/cli/reportInvalidCompletionInput (boolean) [true]
.RS 4
reportInvalidCompletionInput is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq the CLI will display an error message during completion when the user press \*(Aq?\*(Aq to indicate if an invalid token has been entered on the command line\&.
.RE
.PP
/confdConfig/cli/useShortEnabled (boolean) [true]
.RS 4
useShortEnabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the CLI will display \*(Aqenabled\*(Aq or \*(Aqdisabled\*(Aq in place of \*(Aqenabled true\*(Aq and \*(Aqenabled false\*(Aq\&.
.RE
.PP
/confdConfig/cli/smartRenameFiltering (boolean) [true]
.RS 4
smartRenameFiltering is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then only paths that leads to existing instances will be presented when doing completion\&. This will lead to some extra calls to get_next() in order to determine if a path has instances or not\&. When set to \*(Aqfalse\*(Aq all paths with potential instances are presented\&.
.RE
.PP
/confdConfig/cli/allowParenQuotes (boolean) [false]
.RS 4
allowParenQuotes is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then parentheses are treated as quotes, ie the string (xx yy) will be equivalent to \*(Aqxx yy\*(Aq and xx\e yy on the CLI command line\&.
.RE
.PP
/confdConfig/cli/singleElemPattern (boolean) [true]
.RS 4
singleElemPattern is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then filters/patterns to show commands can be used to specify that you want to see a specific leaf element of all lists\&. Only that leaf element will be shown for each list entry\&. This works for both tables and row based rendering\&.
.RE
.PP
/confdConfig/cli/multiPatternOperation (any | all) [any]
.RS 4
multiPatternOperation is one of \*(Aqany\*(Aq, and \*(Aqall\*(Aq\&. When set to \*(Aqany\*(Aq a pattern is true if at least one match is found, if set to \*(Aqall\*(Aq, all patterns needs to be found for the pattern expression to be considered true\&.
.RE
.PP
/confdConfig/cli/sortSubmodeCmds (boolean) [true]
.RS 4
sortSubmodeCmds is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then local submode commands are listed before global commands when the user enters ? in a submode in C and I\-style\&.
.RE
.PP
/confdConfig/cli/sortLocalCmds (boolean) [true]
.RS 4
sortLocalCms is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq and sortSubmodeCmds are also set to \*(Aqtrue\*(Aq, then local submode commands are listed before global commands when the user enters ? in a submode in C and I\-style, and the order of the commands is alphabetically ordered\&. If set to \*(Aqfalse\*(Aq then the order of the local submode commands are the same as in the data model\&.
.RE
.PP
/confdConfig/cli/displayEmptyConfigContainers (boolean) [true]
.RS 4
displayEmptyConfigContainers is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then \*(Aqshow status\*(Aq in the J\-style CLI will display empty lists that are \*(Aqconfig true\*(Aq even when there is no data to display\&. If set to \*(Aqfalse\*(Aq the those containers will not be shown\&.
.RE
.PP
/confdConfig/cli/displayNonPresenceAttributes (boolean) [false]
.RS 4
displayNonPresenceAttributes is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then all non presence containers will display their attributes even if the container is empty similar to how presence containers displays its attributes\&. If set to \*(Aqfalse\*(Aq (default behaviour) those attributes will not be shown automatically\&.
.RE
.PP
/confdConfig/cli/showEditors (boolean) [true]
.RS 4
showEditors is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then a list of current editors will be displayed when a user enters configure mode\&.
.RE
.PP
/confdConfig/cli/whoShowMode (boolean) [true]
.RS 4
whoShowMode is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then an \*(AqConfig Mode\*(Aq column will be added to the table shown when issuing the \*(Aqwho\*(Aq command in C\- and I\-mode\&.
.RE
.PP
/confdConfig/cli/whoHistoryDateTimeFormat (long | short) [short]
.RS 4
whoHistoryDateTimeFormat decides if the date should always include the date (long), or only include the date when different from today (short)\&.
.RE
.PP
/confdConfig/cli/resetScreenAfterMore (boolean) [true]
.RS 4
resetScreenAfterMore is used to control if a terminal reset sequence should be sent if control characters have been printed\&. This is to restore the terminal after showing potentially terminal controlling sequences\&.
.RE
.PP
/confdConfig/cli/editWrapMode (wrap | newline | vt100) [wrap]
.RS 4
editWrapMode is either \*(Aqwrap\*(Aq, \*(Aqnewline\*(Aq or \*(Aqvt100\*(Aq\&. If \*(Aqwrap\*(Aq or \*(Aqvt100\*(Aq is used then cut\-and\-paste will work in xterms (and other terminal emulators) but the CLI may behave oddly if the screen width is manually configured to something other than the true screen width\&. If \*(Aqvt100\*(Aq is used then no >space<>backspace< sequence is used to force line wrapping\&. This makes it easier for scripts that rely on command line echoing but the cursor will disappear at the end of the line temporarily\&.
.RE
.PP
/confdConfig/cli/supportQuotedEOL (boolean) [true]
.RS 4
supportQuotedEOL is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then a final backslash (\e) on a line means that the next line will be concatenated with the previous line, similarly to a Linux Shell\&.
.RE
.PP
/confdConfig/cli/allowWildcard (boolean) [true]
.RS 4
allowWildcard is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then wildcard expressions are allowed in show commands\&.
.RE
.PP
/confdConfig/cli/allowAllAsWildcard (boolean) [false]
.RS 4
Wildcard is normally written as \*(Aq*\*(Aq but with \*(AqallowAllAsWildcard\*(Aq set to \*(Aqtrue\*(Aq the string \*(Aqall\*(Aq will also be accepted in place of \*(Aq*\*(Aq\&.
.RE
.PP
/confdConfig/cli/allowRangeExpression (boolean) [true]
.RS 4
allowRangeExpression is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then range expressions are allowed for all key values of type basic type integer\&. An alternative is to specify hasRange for each path in the clispec\&.
.RE
.PP
/confdConfig/cli/allowRangeExpressionAllTypes (boolean) [true]
.RS 4
allowRangeExpressionAllTypes is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then range expressions are allowed for all key values regardless of type\&. An alternative is to specify hasRange for each element in the yang files\&.
.RE
.PP
/confdConfig/cli/useDoubleDotRanges (boolean) [false]
.RS 4
useDoubleDotRanges is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then range expressions are types as 1\&.\&.3, if set to \*(Aqfalse\*(Aq then ranges are given as 1\-3\&.
.RE
.PP
/confdConfig/cli/addExtraTableSpacing (boolean) [false]
.RS 4
addExtraTableSpacing is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then an additional newline will be added on each side of the table\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/suppressRangeKeyword (boolean) [false]
.RS 4
suppressRangeKeyword is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then \*(Aqrange\*(Aq keyword is not allowed in C\- and I\-style for range expressions\&.
.RE
.PP
/confdConfig/cli/exitModeOnEmptyRange (boolean) [false]
.RS 4
exitModeOnEmptyRange is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq and if standing in a range submode, the CLI will exit to the parent submode if all instances in the range has been deleted by the user\&.
.RE
.PP
/confdConfig/cli/tableLabel (boolean) [false]
.RS 4
tableLabel is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then tables displayed in C and I style CLI will have a relative location label to make it possible to know which table is displayed\&.
.RE
.PP
/confdConfig/cli/tableLookAhead (uint64) [50]
.RS 4
The tableLookAhead element tells confd how many rows to pre\-fetch when displaying a table\&. The prefetched rows are used for calculating the required column widths for the table\&. If set to a small number it is recommended to explicitly configure the column widths in the clispec file\&.
.RE
.PP
/confdConfig/cli/moreBufferLines (uint32 | unbounded) [5000]
.RS 4
moreBufferLines is used to limit the buffering done by the more process\&. It can be \*(Aqunbounded\*(Aq or a positive integer describing the maximum number of lines to buffer\&.
.RE
.PP
/confdConfig/cli/showTableLabelsIfMultiple (boolean) [false]
.RS 4
showTableLabelsIfMultiple is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then table labels will only be displayed if multiple tables, or a table and additional data is displayed\&. If set to \*(Aqfalse\*(Aq then table labels are always shown if they exists and tableLabel is enabled\&.
.RE
.PP
/confdConfig/cli/defaultTableBehavior (dynamic | suppress | enforce) [dynamic]
.RS 4
defaultTableBehavior is either \*(Aqdynamic\*(Aq, \*(Aqsuppress\*(Aq, or \*(Aqenforce\*(Aq\&. If set to \*(Aqdynamic\*(Aq then list nodes will be displayed as tables if the resulting table will fit on the screen\&. If set to suppress, then list nodes will not be displayed as tables unless a table has been specified by some other means (ie through a setting in the clispec\-file or through a command line parameter), if set to \*(Aqenforce\*(Aq then list nodes will always be displayed as tables unless otherwise specified in the clispec\-file or on the command line\&.
.RE
.PP
/confdConfig/cli/allowTableOverflow (boolean) [false]
.RS 4
allowTableOverflow is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then tables displayed in a Cisco style CLI will be allowed to overflow\&. If \*(Aqfalse\*(Aq a too wide table will be displayed as a \*(Aqsetting \- value\*(Aq list instead\&.
.RE
.PP
/confdConfig/cli/tableOverflowTruncate (boolean) [false]
.RS 4
tableOverflowTruncate is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then overflowing tables will be truncated instead of wrapped\&.
.RE
.PP
/confdConfig/cli/allowTableCellWrap (boolean) [true]
.RS 4
allowTableCellWrap is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then tables displayed in a Cisco style CLI will be allowed to wrap if the initial cell\-width estimate proves to be too narrow\&. If \*(Aqfalse\*(Aq a too wide table cell will overflow instead, pushing the rest of the line to the right\&.
.RE
.PP
/confdConfig/cli/showAllNs (boolean) [false]
.RS 4
showAllNs is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then all element names will be shown with their namespace prefix in the CLI\&. This is visible when displaying the running configuration and when modifying the configuration\&.
.RE
.PP
/confdConfig/cli/useExposeNsPrefix (boolean) [false]
.RS 4
useExposeNsPrefix is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then all nodes annotated with the tailf:cli\-expose\-ns\-prefix will result in the namespace prefix being shown/required\&. If set to \*(Aqfalse\*(Aq then the tailf:cli\-expose\-ns\-prefix annotation will be ignored\&.
.RE
.PP
/confdConfig/cli/orderedShowConfig (boolean) [true]
.RS 4
orderedShowConfig is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the commands displayed when running the \*(Aqshow configuration\*(Aq command in C\-mode will take leafrefs and cli\-diff\-dependency into account\&.
.RE
.PP
/confdConfig/cli/suppressFastShow (boolean) [false]
.RS 4
suppressFastShow is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then an internal API is used to determine if a configuration subtree contains any configuration\&. This avoids exploring the subtree when displaying the configuration\&.
.RE
.PP
/confdConfig/cli/leafPrompting (boolean) [true]
.RS 4
leafPrompting is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will prompt the user for leaf values if they are not provided on the command line\&. If \*(Aqfalse\*(Aq then an error message will be displayed if the user does not provide a value for a leaf\&.
.RE
.PP
/confdConfig/cli/modeInfoInAudit (true | false | path) [false]
.RS 4
modeInfoInAudit is either \*(Aqtrue\*(Aq, \*(Aqfalse\*(Aq or \*(Aqpath\*(Aq\&. If \*(Aqtrue\*(Aq, then all commands will be prefixed with major and minor mode name when logged as audit messages\&. This means that it is possible to differentiate between commands with the same name in different modes\&. Major mode is \*(Aqoperational\*(Aq or \*(Aqconfigure\*(Aq and minor mode is \*(Aqtop\*(Aq in J\-style and the name of the submode in C\- and I\-mode\&. On the top\-level in C\- and I\-mode it is also \*(Aqtop\*(Aq\&. If set to \*(Aqpath\*(Aq the major mode will be followed by the full command path to the submode\&.
.RE
.PP
/confdConfig/cli/auditLogMode (all | none | denied | allowed) [all]
.RS 4
auditLogMode is either \*(Aqall\*(Aq, \*(Aqallowed\*(Aq, or \*(Aqdenied\*(Aq\&. If \*(Aqall\*(Aq, then all commands that the user tries to execute will be logged in the audit trail log\&. If \*(Aqallowed\*(Aq, only allowed commands will be logged, ie commands that are actually run by the user\&. If \*(Aqdenied\*(Aq, only commands that the user were not allowed to execute will be logged, prefixed with \*(Aqdenied\*(Aq\&.
.RE
.PP
/confdConfig/cli/transactions (boolean) [true]
.RS 4
Control whether commit should be supported in the CLI or not\&. When set to \*(Aqfalse\*(Aq all commands will be automatically committed when the user presses ENTER in the CLI\&.
.RE
.PP
/confdConfig/cli/transactionCtrlCmds (boolean) [false]
.RS 4
transactionCtrlCmds is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, then the CLI will have commands for enabling and disabling transactions in configure mode, ie \*(Aqenable transactions\*(Aq and \*(Aqdisable transactions\*(Aq\&. If set to \*(Aqfalse\*(Aq no such commands will be present\&.
.RE
.PP
/confdConfig/cli/actionCallNoListInstance (create\-instance | deny\-call) [deny\-call]
.RS 4
actionCallNoListInstance can be set to either \*(Aqdeny\-call\*(Aq, or \*(Aqcreate\-instance\*(Aq\&. If attempting to call an action placed in a non existing list instance, \*(Aqdeny\-call\*(Aq will give an error\&. \*(Aqcreate\-instance\*(Aq will create the missing list instance and subsequently call the action\&. This is effective in configuration mode in C\- and I\-style CLIs\&.
.RE
.PP
/confdConfig/cli/style (j | c | i) [j]
.RS 4
style is either \*(Aqj\*(Aq, \*(Aqc\*(Aq, or \*(Aqi\*(Aq\&. If \*(Aqj\*(Aq, then the CLI will be presented as a Juniper style CLI\&. If \*(Aqc\*(Aq then the CLI will appear as Cisco XR style, and if \*(Aqi\*(Aq then a Cisco IOS style CLI will be rendered\&.
.RE
.PP
/confdConfig/cli/completionShowMax (cliMax) [100]
.RS 4
Maximum number of possible alternatives for the CLI to present when doing completion\&.
.RE
.PP
/confdConfig/cli/rollbackAAA (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq then AAA rules will be applied when a rollback file is loaded\&. This means that rollback may not be possible if some other user have made changes that the current user does not have access privileges to\&.
.RE
.PP
/confdConfig/cli/rollbackMax (rollMax) [1000]
.RS 4
Maximum number of rollback changes to allow through the CLI\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/rollbackNumbering (fixed | rolling) [rolling]
.RS 4
rollbackNumbering is either \*(Aqfixed\*(Aq or \*(Aqrolling\*(Aq\&. If set to \*(Aqrolling\*(Aq then rollback file \*(Aq0\*(Aq will always contain the last commit\&. When using \*(Aqfixed\*(Aq each rollback will get a unique increasing number\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/rollbackNumberingInitial (int64) [10000]
.RS 4
rollbackNumberingInitial is the starting point of the rollback numbering when the \*(Aqincreasing\*(Aq rollback numbering scheme is used\&. This configuration parameter takes effect when ConfD initially starts\&.
.RE
.PP
/confdConfig/cli/inconsistentDatabaseSuffix (string) []
.RS 4
The inconsistentDatabaseSuffix is a message that is appended to the warning message that the CLI displays when it detects that the running database have got inconsistent\&.
.RE
.PP
/confdConfig/cli/showDefaults (boolean) [false]
.RS 4
showDefaults is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then default values will be shown when displaying the configuration\&. The default value is shown inside a comment on the same line as the value\&. Showing default values can also be enabled in the CLI per session using the operational mode command \*(Aqset show defaults true\*(Aq\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/cli/reallocateOperTrans (boolean) [false]
.RS 4
reallocateOperTrans is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then a new read transaction will be allocated for each oper\-mode command\&. When set to \*(Aqfalse\*(Aq a single oper transaction will be used for the entire CLI session\&.
.RE
.PP
/confdConfig/cli/quickSshTeardown (boolean) [false]
.RS 4
quickSshTeardown controls if CLI sessions initiated through an SSH sessions should be torn down directly when the socket is closed, or not\&. When set to \*(Aqtrue\*(Aq the socket will be closed as soon as the CLI receives a tcp shutdown, if set to \*(Aqfalse\*(Aq it will wait until all pending data has been written\&.
.RE
.PP
/confdConfig/cli/cAlignLeafValues (boolean) [true]
.RS 4
cAlignLeafValues is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the leaf values of all siblings in a container or list will be aligned\&.
.RE
.PP
/confdConfig/cli/cConfigAlignLeafValues (boolean) [true]
.RS 4
cConfigAlignLeafValues is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the leaf values of all siblings in a container or list will be aligned when displaying configuration\&.
.RE
.PP
/confdConfig/cli/jAlignLeafValues (boolean) [true]
.RS 4
jAlignLeafValues is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the leaf values of all siblings in a container or list will be aligned\&.
.RE
.PP
/confdConfig/cli/defaultPrefix (string) []
.RS 4
defaultPrefix is a string that is placed in front of the default value when a configuration is shown with default values as comments\&.
.RE
.PP
/confdConfig/cli/jWarningPrefix (string) [Warning: ]
.RS 4
jWarningPrefix is a string that is placed in front of warnings when they are displayed in the CLI\&. J\-style CLI\&.
.RE
.PP
/confdConfig/cli/jAbortedPrefix (string) [Aborted: ]
.RS 4
jAbortedPrefix is a string that is placed in front of aborted messages when they are displayed in the CLI\&. J\-style CLI\&.
.RE
.PP
/confdConfig/cli/jErrorPrefix (string) [Error: ]
.RS 4
jErrorPrefix is a string that is placed in front of error messages when they are displayed in the CLI\&. J\-style CLI\&.
.RE
.PP
/confdConfig/cli/cWarningPrefix (string) [Warning: ]
.RS 4
cWarningPrefix is a string that is placed in front of warnings when they are displayed in the CLI\&. I\- and C\-style CLI\&.
.RE
.PP
/confdConfig/cli/cAbortedPrefix (string) [Aborted: ]
.RS 4
cAbortedPrefix is a string that is placed in front of aborted messages when they are displayed in the CLI\&. I\- and C\-style CLI\&.
.RE
.PP
/confdConfig/cli/cErrorPrefix (string) [Error: ]
.RS 4
cErrorPrefix is a string that is placed in front of error messages when they are displayed in the CLI\&. I\- and C\-style CLI\&.
.RE
.PP
/confdConfig/cli/invalidDataString (string) [\-\-ERROR\-\-]
.RS 4
invalidDataString is a string that is displayed instead of the real value whenever a data provider returns an invalid data element\&.
.RE
.PP
/confdConfig/cli/noEmbeddedComments (boolean) [false]
.RS 4
Do not allow embedded comments in the CLI, only comments that are preceeded by whitespace are allowed\&. All other uses of the comment character is considered valid input\&.
.RE
.PP
/confdConfig/cli/showKeyName (boolean) [true]
.RS 4
showKeyName controls if the name of the key should be shown in the type string during completion\&.
.RE
.PP
/confdConfig/cli/timezone (utc | local) [local]
.RS 4
Used to specify which timezone should be used when displaying the time in the CLI\&. If \*(Aqlocal\*(Aq is specified then the timezone that is configured on the device will be used\&.
.RE
.PP
/confdConfig/cli/utcOffset (int64) [0]
.RS 4
If the timezone is set to UTC this can be set to specify the UTC offset measured in minutes\&.
.RE
.PP
/confdConfig/cli/oldDetailsArg (boolean) [false]
.RS 4
oldDetailsArg is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then commands that display the configuration will not have a \*(Aqdetails\*(Aq argument but instead have a pipe flag called \*(Aqdetails\*(Aq\&. The setting is present for backwards compatibility, the recommended setting for future use is \*(Aqfalse\*(Aq\&.
.RE
.PP
/confdConfig/cli/withDefaults (boolean) [false]
.RS 4
DEPRECATED \- use /confdConfig/defaultHandlingMode instead to control this behavior consistently for all northbound interfaces\&. Set /confdConfig/defaultHandlingMode to report\-all to display default values\&.
.sp
withDefaults is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then leaf nodes that have their default values will not be shown when the user displays the configuration, unless the user gives the \*(Aqdetails\*(Aq option to the \*(Aqshow\*(Aq command\&.
.sp
This is useful when there are many settings which are seldom used\&. When set to \*(Aqfalse\*(Aq only the values actually modified by the user will be shown\&.
.RE
.PP
/confdConfig/cli/ignoreShowWithDefaultOnDiff (boolean) [false]
.RS 4
When set to \*(Aqtrue\*(Aq ConfD will ignore the annotation tailf:cli\-show\-with\-default when displaying the configuration changes in the C\-style CLI\&.
.RE
.PP
/confdConfig/cli/trimDefaultShow (boolean) [false]
.RS 4
trimDefaultShow is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then leaf nodes that have the same value as the default value will not be displayed even when explicitly configured to have that value\&. When set to \*(Aqfalse\*(Aq such leaves will be displayed if explicitly configured to have the value\&. This setting applies to show commands, ie show running\-config and show config\&.
.sp
If this behavior is wanted, it is recommended to set /confdConfig/defaultHandlingMode to trim instead of using this parameter, in order to get a consistent behavior for all northbound interfaces\&.
.sp
If the default handling mode is trim, explicitly configured values that are the same as the default value are never stored in the data store\&. This means that if the default handling mode is trim, this parameter has no effect\&.
.sp
This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/trimDefaultSave (boolean) [false]
.RS 4
trimDefaultSave is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then leaf nodes that have the same value as the default value will not be displayed even when explicitly configured to have that value\&. When set to \*(Aqfalse\*(Aq such leaves will be displayed if explicitly configured to have the value\&. This setting applies to the save command\&.
.sp
If this behavior is wanted, it is recommended to set /confdConfig/defaultHandlingMode to trim instead of using this parameter, in order to get a consistent behavior for all northbound interfaces\&.
.sp
If the default handling mode is trim, explicitly configured values that are the same as the default value are never stored in the data store\&. This means that if the default handling mode is trim, this parameter has no effect\&.
.sp
This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/banner (string) []
.RS 4
Banner shown to the user when the CLI is started\&. Default is empty\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/cli/bannerFile (string) []
.RS 4
Name of a file whose contents are shown to the user when the CLI is started\&. If empty, the message, if any, set via /confdConfig/cli/banner is shown\&. Default is empty\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/cli/prompt1 (string) [\eu@\eh\eM> ]
.RS 4
Prompt used in operational mode\&.
.sp
This string is not validated to be legal UTF\-8, for details see /confdConfig/validateUtf8\&.
.sp
The string may contain a number of backslash\-escaped special characters which are decoded as follows:
.sp
.if n \{\
.RS 4
.\}
.nf
\e[ and \e]
    Enclosing sections of the prompt in \e[ and \e] makes
    that part not count when calculating the width of the
    prompt\&. This makes sense, for example, when including
    non\-printable characters, or control codes that are
    consumed by the terminal\&. The common control codes for
    setting text properties for vt100/xterm are ignored
    automatically, so are control characters\&. Updating the
    xterm title can be done using a control sequence that
    may look like this:
        <prompt1>\e[&#x1b;]0;\eu@\eh&#x07;\e]\eu@\eh&gt; </prompt1>
\ed
   the date in \*(AqYYYY\-MM\-DD\*(Aq format (e\&.g\&., \*(Aq2006\-01\-18\*(Aq)
\eh
   the hostname up to the first \*(Aq\&.\*(Aq (or delimiter as defined
   by promptHostnameDelimiter)
\eH
   the hostname
\es
   the client source ip
\eS
   the name provided by the \-H argument to confd_cli
\et
   the current time in 24\-hour HH:MM:SS format
\eT
   the current time in 12\-hour HH:MM:SS format
\e@
   the current time in 12\-hour am/pm format
\eA
   the current time in 24\-hour HH:MM format
\eu
   the username of the current user
\em
   the mode name (only used in XR style)
\em{N}
   same as \em, but the number of trailing components in
   the displayed path is limited to be max N (an integer)\&.
   Characters removed are replaced with an ellipsis (\&.\&.\&.)\&.
\eM
   the mode name inside parenthesis if in a mode
\eM{N}
   same as \eM, but the number of trailing components in
   the displayed path is limited to be max N (an integer)\&.
   Characters removed are replaced with an ellipsis (\&.\&.\&.)\&.

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/cli/prompt2 (string) [\eu@\eh\eM% ]
.RS 4
Prompt used in configuration mode\&.
.sp
This string is not validated to be legal UTF\-8, for details see /confdConfig/validateUtf8\&.
.sp
The string may contain a number of backslash\-escaped special characters which are decoded as described for prompt1\&.
.RE
.PP
/confdConfig/cli/cPrompt1 (string) [\eh\eM# ]
.RS 4
Prompt used in operational mode in C style\&.
.sp
This string is not validated to be legal UTF\-8, for details see /confdConfig/validateUtf8\&.
.sp
The string may contain a number of backslash\-escaped special characters which are decoded as described above\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/cPrompt2 (string) [\eh(\em)# ]
.RS 4
Prompt used in configuration mode in C style\&.
.sp
This string is not validated to be legal UTF\-8, for details see /confdConfig/validateUtf8\&.
.sp
The string may contain a number of backslash\-escaped special characters which are decoded as described above\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/cStylePromptInJStyle (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq then the \em and \eM will be expanded just as in C\- and I\-style
.RE
.PP
/confdConfig/cli/waitLockedConfigMode (boolean) [true]
.RS 4
waitLockedConfigMode is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. This setting controls the behaviour when trying to enter configure mode while another entity is locking the database, e\&.g\&. some other commit is in progress or some managed object is locking the database\&. If set to \*(Aqtrue\*(Aq then the CLI will wait with entering configure mode, rendering the CLI unusable until the database is unlocked\&. If set to \*(Aqfalse\*(Aq the CLI will not wait but instead display an error message\&.
.RE
.PP
/confdConfig/cli/promptHostnameDelimiter (string) [\&.]
.RS 4
When the \eh token is used in a prompt the first part of the hostname up until the first occurrence of the promptHostnameDelimiter is used\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/asyncPromptRefresh (boolean) [true]
.RS 4
asyncPromptRefresh is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq the CLI prompt will be refreshed when asynchronous tasks prints messages in the CLI, such as messages from other users\&.
.RE
.PP
/confdConfig/cli/idleTimeout (xs:duration) [PT30M]
.RS 4
Maximum idle time before terminating a CLI session\&. Default is PT30M, ie 30 minutes\&. PT0M means no timeout\&. Maximum value is equivalent of 4294967 seconds (approximately 49 days 17 hours)\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/cli/promptSessionsCLI (boolean) [false]
.RS 4
promptSessionsCLI is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then only the current CLI sessions will be displayed when the user tries to start a new CLI session and the maximum number of sessions has been reached\&. Note that MAAPI sessions with their context set to \*(Aqcli\*(Aq would be regarded as CLI sessions and would be listed as such\&.
.RE
.PP
/confdConfig/cli/disableIdleTimeoutOnCmd (boolean) [true]
.RS 4
disableIdleTimeoutOnCmd is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqfalse\*(Aq then the idle timeout will trigger even when a command is running in the CLI\&. If set to \*(Aqtrue\*(Aq the idle timeout will only trigger if the user is idling at the CLI prompt\&.
.RE
.PP
/confdConfig/cli/commandTimeout (xs:duration | infinity) [infinity]
.RS 4
Global command timeout\&. Terminate command unless the command has completed within the timeout\&. It is generally a bad idea to use this feature since it may have undesirable effects in a loaded system where normal commands take longer to complete than usual\&.
.sp
This timeout can be overridden by a command specific timeout specified in the confd\&.cli file\&.
.RE
.PP
/confdConfig/cli/spaceCompletion
.RS 4
Default value for space completion in the CLI\&. The user can always enable or disable completion on space, this only controls the initial session value\&.
.sp
.RE
.PP
/confdConfig/cli/spaceCompletion/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq command and argument completion will be performed when <space> is entered\&.
.RE
.PP
/confdConfig/cli/timestamp
.RS 4
Default value for the timestamps in the CLI\&. The user can always enable or disable the display of timestamps, this only controls the initial session value\&.
.sp
.RE
.PP
/confdConfig/cli/timestamp/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will print a timestamp before the output of each command\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/cli/timestamp/clock24 (boolean) [true]
.RS 4
clock24 is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the 24\-hour time notation will be used when displaying hours\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/timestamp/format (string) [\ed{l,4}\em{l,5}\eD{l,3}\eH{r,2,0}:\et{r,2,0}:\es{r,2,0}\&.\ec{l,3,0} UTC\eu{l,1}\eo{r,2,0}:\ek{r,2,0}]
.RS 4
Specifies the format of the timestamp\&. The string may contain a number of backslash\-escaped special characters which are decoded as follows:
.sp
.if n \{\
.RS 4
.\}
.nf
\eY
   the current year (YYYY)
\eM
   the current month (1\-12)
\eD
   the current day of month (1\-31)
\em
   the name of the current month (Jan, Feb, \&.\&.\&.)
\ed
   the name of the current day of week (Mon, Tue, \&.\&.\&.)
\eH
   the current hour (0\-23 or 1\-12)
\et
   the current minute (0\-59)
\ea
   am/pm (available only in 12\-hour notation)
\eA
   AM/PM (available only in 12\-hour notation)
\es
   the current second (0\-59)
\ec
   the current microsecond (0+)
\eu
   UTC offset sign (\-/+)
\eo
   UTC offset hour (0\-23 or 1\-12)
\ek
   UTC offset minute (0\-59)

.fi
.if n \{\
.RE
.\}
NOTE: the UTC offset characters \eu, \eo and \ek can still be used even if the timezone (/confdConfig/cli/timezone) is set to \*(Aqlocal\*(Aq\&. The characters \ea (am/pm) and \eA (AM/PM) should only be used when clock24 (/confdConfig/cli/timestamp/clock24) is set to \*(Aqfalse\*(Aq\&.
.sp
After each special character another character sequence can be specified in order to control the field width, alignment and padding character\&. The sequence can be either {A, W, P} or {A,W} where A is the alignment and can be either \*(Aql\*(Aq or \*(Aqr\*(Aq, W is the field width and P is the padding character\&. If P is not specified, \*(Aq \*(Aq will be used as the padding character\&. Example, the format \*(Aq\ed{l,4}\em{l,5}\eD{l,3}\eH{r,2,0}:\et{r,2,0}\*(Aq would translate into \*(AqWed Jun 3 08:35\*(Aq\&.
.sp
This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/autoWizard
.RS 4
Default value for autowizard in the CLI\&. The user can always enable or disable the auto wizard in each session, this controls the initial session value\&. This configuration parameter takes effect only for new sessions\&.
.sp
.RE
.PP
/confdConfig/cli/autoWizard/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will prompt the user for required attributes when a new identifier is created\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/cli/ssh/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq ConfD will will use the built in SSH server\&.
.RE
.PP
/confdConfig/cli/ssh/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
ip is an IP address which the ConfD CLI should listen to for SSH sessions\&. 0\&.0\&.0\&.0 means that it listens to the port (/confdConfig/cli/ssh/port) for all IPv4 addresses on the machine\&.
.RE
.PP
/confdConfig/cli/ssh/port (inet:port\-number) [2024]
.RS 4
The port number for CLI SSH
.RE
.PP
/confdConfig/cli/ssh/netns (string)
.RS 4
The network namespace name where the listening socket should belong to\&.
.RE
.PP
/confdConfig/cli/ssh/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/cli/ssh/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, network namespace names, and VRF interface names; which the CLI also listens to for SSH connections\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/cli/ssh/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/cli/ssh/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/cli/ssh/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>10\&.45\&.22\&.11:4777|netns=clins0|vrf=vrf0</extraIpPorts>
<extraIpPorts>127\&.0\&.0\&.1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=clins1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/cli/ssh/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from the CLI for SSH connections\&.
.RE
.PP
/confdConfig/cli/ssh/useKeyboardInteractive (boolean) [false]
.RS 4
Need to be set to true if using challenge/response authentication for CLI/SSH\&.
.RE
.PP
/confdConfig/cli/ssh/banner (string) []
.RS 4
banner is a string that will be presented to the client before authenticating when logging in to the CLI via the built\-in SSH server\&.
.RE
.PP
/confdConfig/cli/ssh/bannerFile (string) []
.RS 4
Name of file whose contents will be presented to the client before authenticating when logging in to the CLI via the built\-in SSH server\&. If \&.\&./banner is non\-empty, the contents of the file will be appended to the value of \&.\&./banner\&.
.RE
.PP
/confdConfig/cli/commitMessage (boolean) [true]
.RS 4
commitMessage is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then a message will be displayed in the CLI whenever a commit operation is performed in the system\&. This is always disabled in I\-style, and in transactionless mode\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/cli/commitMessageFormat (string) [\enSystem message at $(time)\&.\&.\&.\enCommit performed by $(user) via $(proto) using $(ctx)\&.\en]
.RS 4
commitMessageFormat controls how commit messages are displayed in the CLI\&. The format string may contain the variables $(user), $(time), $(ctx), $(date), $(time12), $(time12ampm), $(time12hm), $(host), $(hostname), and $(proto)\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/suppressCommitMessages/context (string)
.RS 4
This parameter may be given multiple times\&.
.sp
Suppress commit messages from certain contexts\&. The values of \*(Aqcontext\*(Aq should be the name of a context\&. For example \*(Aqsystem\*(Aq
.RE
.PP
/confdConfig/cli/jShowCR (boolean) [false]
.RS 4
jShowCR is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the J\-style CLI will show >cr< in the completion list whenever it is legal to press cr\&.
.RE
.PP
/confdConfig/cli/showPipe (boolean) [true]
.RS 4
showPipe is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq the completion list will contain | in operational mode if it is legal to enter |\&. In J\-style the jShowCR must also be set to enable this\&. If disablePipe is set to \*(Aqtrue\*(Aq, it will override the setting of showPipe and imply the same behavior as if showPipe is \*(Aqfalse\*(Aq\&.
.RE
.PP
/confdConfig/cli/showPipeConfig (boolean) [false]
.RS 4
showPipeConfig is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq the completion list will contain | in configure mode if it is legal to enter |\&. In J\-style the jShowCR must also be set to enable this\&. If disablePipeConfig is set to \*(Aqtrue\*(Aq, it will override the setting of showPipeConfig and imply the same behavior as if showPipeConfig is \*(Aqfalse\*(Aq\&.
.RE
.PP
/confdConfig/cli/disablePipe (boolean) [false]
.RS 4
disablePipe is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the pipe commands are disabled in operational mode\&.
.RE
.PP
/confdConfig/cli/disablePipeConfig (boolean) [false]
.RS 4
disablePipeConfig is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the pipe commands are disabled in configure mode\&.
.RE
.PP
/confdConfig/cli/pipeHelpMode (always | auto | never) [auto]
.RS 4
If showPipe is set to \*(Aqtrue\*(Aq, then pipeHelpMode determines how the pipe option will be displayed to the user\&. If set to \*(Aqauto\*(Aq, then the description text \*(AqOutput modifiers\*(Aq will only be displayed if there are any other options with help texts, otherwise it will not be shown\&. If set to \*(Aqalways\*(Aq then the help text will always be displayed, if set to \*(Aqnever\*(Aq then it will never be displayed\&.
.RE
.PP
/confdConfig/cli/jAllowDeleteAll (boolean) [true]
.RS 4
jAllowDeleteAll is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the J\-style CLI will show the command \*(Aqdelete\*(Aq without arguments, if set to \*(Aqfalse\*(Aq then an argument is required\&.
.RE
.PP
/confdConfig/cli/cSilentNo (boolean) [true]
.RS 4
Silently ignore deletes of non\-existing instances\&.
.RE
.PP
/confdConfig/cli/noFollowIncompleteCommand (boolean) [false]
.RS 4
noFollowIncompleteCommand is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the \*(Aqno\*(Aq command will take incomplete\-command declarations into account\&. If set to \*(Aqfalse\*(Aq it will not\&.
.RE
.PP
/confdConfig/cli/cRestrictiveNo (boolean) [false]
.RS 4
If a leaf value is given when an optional leaf is deleted, the given value is normally ignored and the node is deleted regardless of the value\&. When cRestrictiveNo is set to \*(Aqtrue\*(Aq, the given value is required to be equal to the old value in order to the delete operation to be allowed\&. For example the Cisco style command \*(Aqno interface eth0 mtu 1500\*(Aq will only succeed if the mtu has the value 1500\&.
.RE
.PP
/confdConfig/cli/prioritizeSubmodeCmds (boolean) [true]
.RS 4
prioritizeSubmodeCmds is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then local submode commands are prioritized before commands in parent (and grand\-parent) modes in C and I\-style\&. This means that if a command in local submode is ambiguous with a command in parent (or grand\-parent) mode the local submode command is executed\&. See also cExtendedCmdSearch\&.
.RE
.PP
/confdConfig/cli/cExtendedCmdSearch (boolean) [true]
.RS 4
Extend the available submode commands to all commands in parent (and grand\-parent) modes\&. These commands are not visible during completion but will be executed if entered\&. If set to \*(Aqfalse\*(Aq then only commands for entering other submodes are available in parent and grand\-parent modes, if set to \*(Aqtrue\*(Aq all commands in parent and grand\-parent modes are available\&.
.RE
.PP
/confdConfig/cli/cSuppressCmdSearch (boolean) [false]
.RS 4
Prevent non\-local commands from being executed\&. This negates the effect of cExtendedCmdSearch above\&. It is recommended to also set cModeExitFormat to \*(Aqexit\*(Aq when this option is set to \*(Aqtrue\*(Aq\&.
.RE
.PP
/confdConfig/cli/enterSubmodeOnLeaf (boolean) [true]
.RS 4
enterSubmodeOnLeaf is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq (the default) then setting a leaf in a submode from a parent mode results in entering the submode after the command has completed\&. If set to \*(Aqfalse\*(Aq then an explicit command for entering the submode is needed\&. For example, if running the command
.sp
interface FastEthernet 1/1/1 mtu 1400
.sp
from the top level in config mode\&. If enterSubmodeOnLeaf is \*(Aqtrue\*(Aq the CLI will end up in the \*(Aqinterface FastEthernet 1/1/1\*(Aq submode after the command execution\&. If set to \*(Aqfalse\*(Aq then the CLI will remain at the top level\&. To enter the submode when set to \*(Aqfalse\*(Aq the command
.sp
interface FastEthernet 1/1/1
.sp
is needed\&. Applied to the C\- and I\- style CLI\&.
.RE
.PP
/confdConfig/cli/jExtendedShow (boolean) [true]
.RS 4
jExtendedShow is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the J\-style CLI will have auto\-rendered show commands in the same style as the C and I\-style CLIs\&. The \*(Aqshow status\*(Aq command can still be used for viewing config=\*(Aqfalse\*(Aq data\&.
.RE
.PP
/confdConfig/cli/jShowUnset (boolean) [false]
.RS 4
jShowUnset is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the J\-style CLI will show unset leaves with the value of jShowUnsetText when doing \*(Aqshow configuration\*(Aq\&.
.RE
.PP
/confdConfig/cli/jShowUnsetText (string) [UNSET]
.RS 4
jShowUnsetText is the text printed for unset values if jShowUnset has been set to \*(Aqtrue\*(Aq\&.
.RE
.PP
/confdConfig/cli/jStatusFormat (string) [[$(status)][$(time)]\en]
.RS 4
jStatusFormat controls which status message is displayed after executing a CLI command in the J\-style CLI\&. The format string may contain the variables $(status), $(time), $(date), $(time12), $(time12ampm), $(time12hm), $(host), $(hostname), and $(proto)\&.
.RE
.PP
/confdConfig/cli/cModeExitFormat (string) [!]
.RS 4
cModeExitFormat is the string used in the CLI when displaying the running configuration to indicate exit from a submode\&.
.RE
.PP
/confdConfig/cli/forcedExitFormat (string) [\enYou are forced out of configure mode by $(sender)\&.\en]
.RS 4
forceExitFormat controls which message to display when a user is forced out of configure mode by another user\&. The format string may contain the variables $(user), $(time), $(date), $(time12), $(time12ampm), $(time12hm), $(host) and $(hostname)\&.
.RE
.PP
/confdConfig/cli/showSubsystemMessages (boolean) [true]
.RS 4
showSubsystemMessages is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will display a system message whenever a connected daemon is started or stopped\&.
.RE
.PP
/confdConfig/cli/ignoreSubsystemFailures (boolean) [false]
.RS 4
ignoreSubsystemFailures is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will make a best effort to display data even if a data provider is unavailable\&.
.RE
.PP
/confdConfig/cli/showEmptyContainers (boolean) [false]
.RS 4
showEmptyContainers is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will display empty container nodes when displaying the configuration\&. If \*(Aqfalse\*(Aq then empty static containers will not be shown\&.
.RE
.PP
/confdConfig/cli/showTags (boolean) [true]
.RS 4
showTags is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will display configuration tags if they are present\&. If set to \*(Aqfalse\*(Aq then the tags will not be displayed by default\&.
.RE
.PP
/confdConfig/cli/showAnnotations (boolean) [true]
.RS 4
showAnnotations is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will display configuration annotations if they are present\&. If set to \*(Aqfalse\*(Aq then the annotations will not be displayed by default\&.
.RE
.PP
/confdConfig/cli/showServiceMetaData (boolean) [false]
.RS 4
.RE
.PP
/confdConfig/cli/suppressNedErrors (boolean) [false]
.RS 4
.RE
.PP
/confdConfig/cli/jShowTableRecursive (boolean) [false]
.RS 4
jShowTableRecursive is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the J\-style CLI will attempt to display the result of the command \*(Aqshow table\*(Aq as a table even when a list is not directly specified\&. If set to \*(Aqfalse\*(Aq then a table will only be produced if a list node is specified as argument to \*(Aqshow table\*(Aq\&.
.RE
.PP
/confdConfig/cli/cPrivate (boolean) [false]
.RS 4
cPrivate is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the term \*(Aqprivate\*(Aq will be used in place of \*(Aqterminal\*(Aq for denoting the private/terminal configuration mode\&. When set to \*(Aqfalse\*(Aq the term \*(Aqterminal\*(Aq will be used instead\&.
.RE
.PP
/confdConfig/cli/cTab (boolean) [false]
.RS 4
cTab is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the Cisco style CLI will not display any help text when the user enters TAB\&. If \*(Aqfalse\*(Aq then help text will be shown when entering TAB, similarly to the Juniper\-style CLI\&.
.RE
.PP
/confdConfig/cli/cTabInfo (boolean) [false]
.RS 4
cTabInfo is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq the Cisco style CLI will not display any info text when the user enters TAB\&. If \*(Aqtrue\*(Aq then info text will be shown when entering TAB, similarly to the Juniper\-style CLI\&.
.RE
.PP
/confdConfig/cli/tabExtend (boolean) [true]
.RS 4
tabExtend is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will extend the current token to the next longer alternative\&.
.RE
.PP
/confdConfig/cli/cHelp (boolean) [true]
.RS 4
cHelp is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the Cisco style CLI will not display any desc text when the user enters \*(Aq?\*(Aq\&. If \*(Aqfalse\*(Aq then desc text will be shown when entering \*(Aq?\*(Aq, similarly to the Juniper\-style CLI\&.
.RE
.PP
/confdConfig/cli/jHideHelp (boolean) [false]
.RS 4
jHideHelp is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the Juniper style CLI will not display any desc text when the user enters \*(Aq?\*(Aq\&. If \*(Aqfalse\*(Aq then desc text will be shown when entering \*(Aq?\*(Aq\&.
.RE
.PP
/confdConfig/cli/restrictedFileAccess (boolean) [false]
.RS 4
restrictedFileAccess is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If this is set to \*(Aqtrue\*(Aq, then the user only has access to the home directory (or the directory where confd_cli is started), or if a directory is specified in a cli command parameter (params/param/type/directory{wd} or params/param/type/file{wd}) to that directory\&. Symlinks are resolved to real paths, see also User Guide for more information about symlinks handling\&.
.RE
.PP
/confdConfig/cli/hideDotFiles (boolean) [false]
.RS 4
hideDotFile is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then files starting with a \*(Aq\&.\*(Aq will not be visible in the CLI\&.
.RE
.PP
/confdConfig/cli/restrictedFileRegexp (string) []
.RS 4
restrictedFileRegexp is either an empty string or an regular expression (AWK style)\&. If not empty then all files and directories created or accessed must match the regular expression\&. This can be used to ensure that certain symbols do not occur in created file names\&.
.RE
.PP
/confdConfig/cli/historySave (boolean) [true]
.RS 4
If set to \*(Aqtrue\*(Aq then the CLI history will be saved between CLI sessions\&. The history is stored in the state directory\&.
.RE
.PP
/confdConfig/cli/historyRemoveDuplicates (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq then repeated commands in the CLI will only be stored once in the history\&. Each invocation of the command will only update the date of the last entry\&. If set to \*(Aqfalse\*(Aq duplicates will be stored in the history\&.
.RE
.PP
/confdConfig/cli/historyMaxSize (int64) [1000]
.RS 4
Sets maximum configurable history size\&.
.RE
.PP
/confdConfig/cli/messageMaxSize (int64) [10000]
.RS 4
Maximum size of user message\&.
.RE
.PP
/confdConfig/cli/mapActions (both | config | oper) [both]
.RS 4
mapActions is either \*(Aqboth\*(Aq, \*(Aqconfig\*(Aq, or \*(Aqoper\*(Aq\&. If \*(Aqboth\*(Aq, then actions are available both in operational mode and in configure mode\&. If \*(Aqoper\*(Aq then they are only available in operational mode, and if \*(Aqconfig\*(Aq then they are only available in configure mode\&.
.RE
.PP
/confdConfig/cli/compactTable (boolean) [true]
.RS 4
compactTable is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then tables with multiple dynamic levels will be displayed more compactly\&. The first instance of the sub\-element will appear on the same row as the parent instance\&. When set to \*(Aqfalse\*(Aq all new instances will appear on a new row\&. This configuration parameter takes effect only for new sessions\&.
.RE
.PP
/confdConfig/cli/compactShow (boolean) [false]
.RS 4
Use compact representation when showing the configuration in C and I style CLIs\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/compactStatsShow (boolean) [false]
.RS 4
Use compact representation when showing the operational data in C and I style CLIs\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/prettifyStatsName (boolean) [false]
.RS 4
Default setting for prettifying, ie changing _ and \- to space in element names when displaying config=\*(Aqfalse\*(Aq data in key\-value listings\&.
.RE
.PP
/confdConfig/cli/showCommitProgress (boolean) [false]
.RS 4
showCommitProgress can be either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the commit operation in the CLI will provide some progress information when the output is piped to the \*(Aqdetails\*(Aq target\&.
.RE
.PP
/confdConfig/cli/commitActivityClock (boolean) [false]
.RS 4
commitActivityClock can be either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then a |/\-\e| style animation will be displayed if the commit operation takes more than 200 ms to complete\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/confirmUncommitedOnExit (prompt | discard | commit) [prompt]
.RS 4
If set to \*(Aqprompt\*(Aq then the user will be prompted whether to discard uncommitted changes or not\&. If set to \*(Aqdiscard\*(Aq then uncommitted changes will be discarded without prompting the user\&. If set to \*(Aqcommit\*(Aq then uncommitted changes will be automatically committed without asking the user\&.
.RE
.PP
/confdConfig/cli/reconfirmHidden (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq the user will have to re\-confirm non\-echoing values in the CLI\&. Ie, when the CLI prompts the user for a value that is not echoed the user will be asked to enter it twice\&.
.RE
.PP
/confdConfig/cli/dequoteHidden (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq the value that the user entered will be dequoted, ie if the user enters \en it will be interpreted as a newline\&. This is the default behavior for all other leaf types\&. If set to \*(Aqfalse\*(Aq then no unquoting will be performed for hidden (non\-echoing) data types when the CLI explicitly prompts for their values\&. Dequoting will still be performed for values entered directly on the command line\&.
.RE
.PP
/confdConfig/cli/enumKeyInfo (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq the CLI will add the text <keyname:enumeration> whenever it is displaying a completion list for entering a key value that is an enumeration\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
io(config)# vqe dsp channel 1
Possible completions:
<b\-id:enumeration>  10  11  12  13  14  5  6  9

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/cli/columnStats (boolean) [false]
.RS 4
columnStats is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the container element is repeated on each line when displaying config=\*(Aqfalse\*(Aq data in the C and I style CLIs using the \*(Aqshow\*(Aq command\&. If set to \*(Aqtrue\*(Aq then the name of the container will not be repeated, instead all leaves will be indented\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/allowAbbrevCmds (boolean) [true]
.RS 4
allowAbbrevCmds is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then commands are not allowed to be abbreviated in the CLI\&.
.RE
.PP
/confdConfig/cli/allowAbbrevCmdsOnLoad (boolean) [true]
.RS 4
allowAbbrevCmdsOnLoad is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then commands are not allowed to be abbreviated in the CLI in non interactive mode, ie when loading configurations from file\&.
.RE
.PP
/confdConfig/cli/allowAbbrevKeys (boolean) [false]
.RS 4
allowAbbrevKeys is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then key elements are not allowed to be abbreviated in the CLI\&. This is relevant in the J\-style CLI when using the commands \*(Aqdelete\*(Aq and \*(Aqedit\*(Aq\&. In the C/I\-style CLIs when using the commands \*(Aqno\*(Aq, \*(Aqshow configuration\*(Aq and for commands to enter submodes\&.
.RE
.PP
/confdConfig/cli/allowAbbrevParamNames (boolean) [false]
.RS 4
allowAbbrevParamNames is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then cli command parameter names, ie <name>xx</name>, cannot be abbreviated\&.
.RE
.PP
/confdConfig/cli/allowAbbrevEnums (boolean) [true]
.RS 4
allowAbbrevEnums is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then enums entered in the cli cannot be abbreviated\&.
.RE
.PP
/confdConfig/cli/allowCaseInsensitiveEnums (boolean) [true]
.RS 4
allowCaseInsensitiveEnums is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then enums entered in the cli must match in case, ie you cannot enter FALSE if the cli asks for \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&.
.RE
.PP
/confdConfig/cli/strictRefsOnLoad (boolean) [false]
.RS 4
strictRefsOnLoad is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then keyref/leafref targets does not have to exist when loading a config from a file\&. If set to \*(Aqtrue\*(Aq then the target creation must appear earlier in the loaded file than the reference to the target\&. Note that there is a rather heavy performance penalty for loading files with many keyrefs when this is set to \*(Aqtrue\*(Aq, or for piping CLI commands into confd_cli\&.
.RE
.PP
/confdConfig/cli/stopLoadOnError (boolean) [true]
.RS 4
stopLoadOnError is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the \*(Aqload\*(Aq command in the C and I\-style CLIs will not terminate on the first error but continue to process commands form the file\&.
.RE
.PP
/confdConfig/cli/suppressBurstErrors (boolean) [true]
.RS 4
suppressBurstErrors is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then only the first error in a series of consecutive load errors will be reported\&. If set to \*(Aqfalse\*(Aq then all errors will be reported\&.
.RE
.PP
/confdConfig/cli/allOrNothingLoad (boolean) [false]
.RS 4
allOrNothingLoad is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the transaction will be reset and all changes discarded if an error is encountered when loading a file\&. This behavior will not happen when the \*(Aqbest effort\*(Aq pipe target is used, nor when stopLoadOnError is set to \*(Aqfalse\*(Aq, nor when autocommitLoad is set to \*(Aqtrue\*(Aq\&.
.RE
.PP
/confdConfig/cli/autocommitLoad (boolean) [false]
.RS 4
autocommitLoad is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then when executing the \*(Aqload\*(Aq command each line will be committed as soon as it has been read\&. Note that this is normally not a good idea\&. Only applies when transactions are disabled\&.
.RE
.PP
/confdConfig/cli/autocommitLoadChunkSize (uint64) [1]
.RS 4
autocommitLoadChunkSize is used to avoid auto commit:ing after each line but instead commit after a chunk of lines have been read\&.
.RE
.PP
/confdConfig/cli/enableLoadMerge (boolean) [true]
.RS 4
enableLoadMerge is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the \*(Aqload\*(Aq command in the C and I\-style CLIs will not have an option for how to load a config file\&. If set to \*(Aqtrue\*(Aq then the \*(Aqload\*(Aq command will have an additional option for loading the file either in \*(Aqoverride\*(Aq mode or in \*(Aqmerge\*(Aq mode\&. \*(Aqoverride\*(Aq is the mode used if enableLoadMerge is set to \*(Aqfalse\*(Aq\&.
.RE
.PP
/confdConfig/cli/loadActivityClock (boolean) [false]
.RS 4
loadActivityClock can be either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then a |/\-\e| style animation will be displayed if the load operation takes more than 200 ms to complete\&.
.RE
.PP
/confdConfig/cli/instanceDescription (boolean) [true]
.RS 4
instanceDescription is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the CLI will look for description elems and add their values as info texts when displaying possible completions in the CLI\&. This makes it easier to identify the different instances\&.
.RE
.PP
/confdConfig/cli/addErrorPrefixSuffix (boolean) [true]
.RS 4
addErrorPrefixSuffix is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the CLI will add \*(AqError: \*(Aq or \*(AqAborted: \*(Aq and when operations fail in the CLI\&. If set to \*(Aqfalse\*(Aq then the prefix will not be added for errors generated by some callback\&.
.RE
.PP
/confdConfig/cli/compListCompact (boolean) [false]
.RS 4
compListCompact is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the CLI will display items with an associated info text one per line, and all the rest in compact format\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/completionListLine (boolean) [false]
.RS 4
completionListLine is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the CLI will display completion lists one item per line\&. If set to \*(Aqfalse\*(Aq one\-line presentation will be used for items with info texts and compact for the rest (if compListCompact above is set to \*(Aqtrue\*(Aq there may be a mix of the two formats in the same listing)\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/infoOnMatch (boolean) [true]
.RS 4
infoOnMatch is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the CLI will add info texts when displaying possible match completions\&. If set to \*(Aqfalse\*(Aq then the info text will not be shown\&.
.RE
.PP
/confdConfig/cli/externalActionErrorMsg (string)
.RS 4
The externalActionErrorMsg value is displayed whenever an external error occurs when executing an action in the CLI\&.
.RE
.PP
/confdConfig/cli/enableDisplayLevel (true | false | pipe) [pipe]
.RS 4
enableDisplayLevel is either \*(Aqtrue\*(Aq, \*(Aqfalse\*(Aq or \*(Aqpipe\*(Aq\&. If \*(Aqfalse\*(Aq then the \*(Aqdisplaylevel\*(Aq option to the show command will not be available in the CLIs\&. If set to \*(Aqpipe\*(Aq then a special pipe target called \*(Aqdisplay\-level\*(Aq will be available\&.
.sp
The displaylevel option can be used to limit how many levels will be displayed by the show command\&. If a display level of 1 is specified then only the direct children of an element will be shown\&. If a display level of 3 is specified then only elements at depth 3 below a given element will be displayed, etc\&.
.sp
A user can also modify the default display level for a given CLI\- session using the display\-level setting in the CLI, similarly to the screen\-width, or idle\-timeout settings\&.
.RE
.PP
/confdConfig/cli/defaultDisplayLevel (int64) [99999999]
.RS 4
If enableDisplayLevel is set to \*(Aqtrue\*(Aq then this settings controls the default display level used if no explicit display level is specified\&. It is also used as the initial value of the (set) \*(Aqdisplay\-level\*(Aq command in the CLI\&.
.RE
.PP
/confdConfig/cli/enableDisplayGroups (boolean) [true]
.RS 4
enableDisplayGroups is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the user will not be able to provide a set of display groups when issuing the show command\&.
.RE
.PP
/confdConfig/cli/unifiedHistory (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq then the \*(Aqshow history\*(Aq command will display the unified command history, ie the command history from all modes\&. If set to \*(Aqfalse\*(Aq then only the command history from the current mode will be shown\&. Also, if set to \*(Aqtrue\*(Aq then the \*(Aqclear history\*(Aq command will adopt the same behaviour as described above\&.
.RE
.PP
/confdConfig/cli/modeInfoInAAA (true | false | path) [false]
.RS 4
modeInfoInAAA is either \*(Aqtrue\*(Aq, \*(Aqfalse\*(Aq or \*(Aqpath\*(Aq, If \*(Aqtrue\*(Aq, then all commands will be prefixed with major and minor mode name when processed by the AAA\-rules\&. This means that it is possible to differentiate between commands with the same name in different modes\&. Major mode is \*(Aqoperational\*(Aq or \*(Aqconfigure\*(Aq and minor mode is \*(Aqtop\*(Aq in J\-style and the name of the submode in C\- and I\-mode\&. On the top\-level in C\- and I\-mode it is also \*(Aqtop\*(Aq\&. If set to \*(Aqpath\*(Aq and if the command operation is \*(Aqread\*(Aq the major mode will be followed by the path to the submode which will be followed by the command\&. If set to \*(Aqpath\*(Aq and if the command operation is \*(Aqexecute\*(Aq the major mode will instead be followed by the command and the path to the submode will be prepended to any path arguments of the command\&.
.RE
.PP
/confdConfig/cli/cmdAAAForAutowizard (boolean) [false]
.RS 4
cmdAAAForAutowizard is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the CLI will generate synthetic commands, and perform AAA command rule checks for, for all paths and values requested by the autowizard functionality\&.
.RE
.PP
/confdConfig/cli/cStrictAAA (boolean) [false]
.RS 4
cStrictAAA is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the CLI will match all auto\-rendered C\-style commands (eg\&. C\-style config commands and C\-style actions) against AAA data\-rules and all other C\-Style commands will be matched against AAA command\-rules\&. If set to \*(Aqfalse\*(Aq, the CLI will match all commands against both AAA data\-rules and AAA command\-rules\&.
.RE
.PP
/confdConfig/cli/quoteStyle (quote | backslash) [backslash]
.RS 4
quoteStyle is either \*(Aqquote\*(Aq or \*(Aqbackslash\*(Aq\&. If set to \*(Aqquote\*(Aq then the quote characters will be used on the CLI command line for quoting strings with troublesome characters\&. If set to \*(Aqbackslash\*(Aq then a backslash will be used\&. For example
.sp
Using quote:
.sp
.if n \{\
.RS 4
.\}
.nf
io(config)# description \*(Aqdescription with spaces\*(Aq

.fi
.if n \{\
.RE
.\}
Using backslash:
.sp
.if n \{\
.RS 4
.\}
.nf
io(config)# description description\e with\e spaces

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/cli/laxBarQuoting (boolean) [false]
.RS 4
laxBarQuoting is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then | and ; are only quoted if they appear by them selves\&. A consequence of this is that the user must have whitespace on both sides of | and ; on the command line when these characters are used as pipe (|) or concatenator (;)\&.
.RE
.PP
/confdConfig/cli/expandAliasOnCompletion (boolean) [true]
.RS 4
expandAliasOnCompletion is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then aliases will be expanded before invoking the completion code\&.
.RE
.PP
/confdConfig/cli/expandAliasEscape (false | charType) [false]
.RS 4
expandAliasEscape is either \*(Aqfalse\*(Aq or a character\&. If set to a character then expanding an alias can be prevented by putting the character in front of the alias\&.
.RE
.PP
/confdConfig/cli/docWrap (boolean) [true]
.RS 4
docWrap is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then certain documentation texts will not be enclosed in \*(Aq<\*(Aq and \*(Aq>\*(Aq, if set to \*(Aqtrue\*(Aq they will be\&.
.RE
.PP
/confdConfig/cli/infoOnTab (boolean) [true]
.RS 4
infoOnTab is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then no info strings will be displayed in the tab completion list when the user enters TAB\&.
.RE
.PP
/confdConfig/cli/infoOnSpace (boolean) [true]
.RS 4
infoOnSpace is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then no info strings will be displayed in the tab completion list when the user enters SPACE\&.
.RE
.PP
/confdConfig/cli/newLogout (boolean) [true]
.RS 4
newLogout is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the I and C modes will have a single \*(Aqlogout\*(Aq command for logging out a user and a specific session\&. If set to \*(Aqtrue\*(Aq then there will be two different commands \- \*(Aqlogout user <name>\*(Aq and \*(Aqlogout session <id>\*(Aq
.RE
.PP
/confdConfig/cli/newInsert (boolean) [true]
.RS 4
newInsert is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the old insert command will be used\&. If set to \*(Aqtrue\*(Aq then the new insert command, capable of inserting ordered\-by\-user list elements, will be used\&.
.RE
.PP
/confdConfig/cli/messageFormat (string) [\enMessage from $(sender) at $(time)\&.\&.\&.\en$(message)\enEOF\en]
.RS 4
messageFormat controls how messages between users and from the system should be presented to the user\&. The format string may contain the variables $(sender), $(time), $(message), $(date), $(time12), $(time12ampm), $(time12hm), $(host), $(hostname), and $(user)\&.
.RE
.PP
/confdConfig/cli/messageWordWrap (boolean) [false]
.RS 4
messageWordWrap is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then all system/user/prio messages in the CLI will be word\-wrapped to the current terminal width\&.
.RE
.PP
/confdConfig/cli/messageQueueSize (int64) [10]
.RS 4
Some messages are not displayed in the CLI when a command executed, but are delayed until the current command execution has finished\&. The size of the queue of pending messages is configured in messageQueueSize\&. This configuration parameter takes effect for both existing and new sessions\&.
.RE
.PP
/confdConfig/cli/promptEnumLimit (uint64) [4]
.RS 4
promptEnumLimit controls how many enumerations should be included in the prompt when prompting the user for a value where there are a number of alternatives\&. If the number of alternatives exceeds the above configured limit then the list will be truncated and the string \*(Aq\&.\&.\&.\*(Aq will be added\&.
.RE
.PP
/confdConfig/cli/caseInsensitive (boolean) [false]
.RS 4
caseInsensitive is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then all CLI commands must have the correct case\&. If set to \*(Aqtrue\*(Aq then case is mostly ignored\&. Note that if set to \*(Aqtrue\*(Aq then all data model files and clispec\-files must be written with this in mind\&. You cannot have two elems that conflict in case\&.
.RE
.PP
/confdConfig/cli/caseInsensitiveKeys (boolean) [false]
.RS 4
caseInsensitiveKeys is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then all user defined instance names must have correct case\&. If set to \*(Aqtrue\*(Aq then case is mostly ignored\&. Note that if set to \*(Aqtrue\*(Aq then all data model files and clispec\-files must be written with this in mind\&. You cannot have two elems that conflict in case\&.
.RE
.PP
/confdConfig/cli/ignoreLeadingWhitespace (boolean) [false]
.RS 4
ignoreLeadingWhitespace is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the CLI will show completion help when the user enters TAB or SPACE as the first characters on a row\&. If set to \*(Aqtrue\*(Aq then leading SPACE and TAB are ignored\&. The user can enter \*(Aq?\*(Aq to get a list of possible alternatives\&. Setting the value to \*(Aqtrue\*(Aq makes it easier to paste scripts into the CLI\&.
.RE
.PP
/confdConfig/cli/indentTemplates (boolean) [false]
.RS 4
indentTemplates is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the text resulting from a show template will be indented to the same level as the surrounding auto\-rendered show text\&. If set to \*(Aqfalse\*(Aq then no automatic indentation will occur\&. The automatic variable \*(Aq\&.indent\*(Aq may be used in the templates to do manual indentation\&.
.RE
.PP
/confdConfig/cli/wrapInfo (boolean) [true]
.RS 4
wrapInfo is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the CLI will not automatically wrap the info field in \*(AqPossible completion:\*(Aq listings\&. If set to \*(Aqtrue\*(Aq then the info text will be word\-wrapped and indented\&.
.RE
.PP
/confdConfig/cli/wrapPrompt (boolean) [false]
.RS 4
wrapPrompt is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the CLI will not automatically word wrap the prompt when prompting the user for some input\&. If set to \*(Aqtrue\*(Aq then the prompt will be word\-wrapped according to the current terminal width\&.
.RE
.PP
/confdConfig/cli/sortShowElems (boolean) [true]
.RS 4
sortShowElems is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqfalse\*(Aq then the show commands will display the elements in the order they appear in the data model\&. If set to \*(Aqtrue\*(Aq then all non\-lists will appear before the lists\&. This setting only applies to the C\- and I\-style CLIs\&.
.RE
.PP
/confdConfig/cli/showMatchBeforePossible (boolean) [false]
.RS 4
showMatchBeforePossible is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the match completions will be displayed before the other possible completions, if set to \*(Aqfalse\*(Aq then the match completions will be displayed after\&.
.RE
.PP
/confdConfig/cli/possibleCompletionsFormat (string) [Possible completions:]
.RS 4
possibleCompletionsFormat is the string displayed before the displaying the actual completion possibilities\&.
.RE
.PP
/confdConfig/cli/showActionCompletions (boolean) [false]
.RS 4
If set to \*(Aqtrue\*(Aq then the action completions will be displayed separated\&.
.RE
.PP
/confdConfig/cli/actionCompletionsFormat (string) [Action completions:]
.RS 4
actionCompletionsFormat is the string displayed before the displaying the action completion possibilities\&.
.RE
.PP
/confdConfig/cli/matchCompletionsFormat (string) [Possible match completions:]
.RS 4
matchCompletionsFormat is the string displayed before the displaying the actual match completion possibilities\&.
.RE
.PP
/confdConfig/cli/noMatchCompletionsFormat (string) []
.RS 4
noMatchCompletionsFormat is the string displayed when there are no matching completion possibilities\&. The string is empty by default\&.
.RE
.PP
/confdConfig/cli/matchCompletionsSearchLimit (uint32 | unbounded) [50]
.RS 4
matchCompletionsSearchLimit is either unbounded or an integer value\&. It determines how many list instances should be looked at in order to determine if a leaf should be included in the match completions list\&. It can be very expensive to explore all instances if the configuration contains many list instances\&.
.RE
.PP
/confdConfig/cli/showDescription (boolean) [true]
.RS 4
showDescription is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqfalse\*(Aq then the Description: xx text will not be displayed\&.
.RE
.PP
/confdConfig/cli/explicitSetCreate (boolean) [false]
.RS 4
explicitSetCreate is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then the \*(Aqset\*(Aq command in J\-style CLI cannot be used to create instances\&. Instead a new command called \*(Aqcreate\*(Aq becomes available for creating instances\&. Note that this deviates from a typical Juniper style CLI where instance creation is performed by the \*(Aqset\*(Aq command\&.
.RE
.PP
/confdConfig/cli/templateFilter
.RS 4
User defined template filters must be listed here\&. They can be used in show templates in the same manner as the builtin ones\&. A template filter takes a string as input in \*(Aqargv[1]\*(Aq and returns a modified version of it by invoking \*(Aqconfd_action_reply_command\*(Aq\&. It can also take extra arguments\&. For example \*(Aq|a_filter:foo:42\*(Aq implies \*(Aqargv[2]=\*(Aqfoo\*(Aq\*(Aq and \*(Aqargv[3]=\*(Aq42\*(Aq\&.
.RE
.PP
/confdConfig/cli/templateFilter/name (string)
.RS 4
Name of template filter\&.
.RE
.PP
/confdConfig/cli/templateFilter/callback (string)
.RS 4
Name of callback\&. The callback receives a string as first argument, optionally followed by the list of arguments given to the filter in the show template\&.
.RE
.PP
/confdConfig/cli/escapeBackslash (boolean) [false]
.RS 4
escapeBackslash is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq then backslash is escaped in the CLI\&.
.RE
.PP
/confdConfig/cli/preserveSemicolon (boolean) [false]
.RS 4
preserveSemicolon is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If set to \*(Aqtrue\*(Aq the semicolon is preserved as an ordinary char instead of using the semicolon as a keyword to separate CLI statements in the I and C\-style CLI\&.
.RE
.PP
/confdConfig/cli/defaultLeafListStyle (flat\-list | range\-list)
.RS 4
Make all plain leaf\-lists behave as they were decorated with either \*(Aqtailf:cli\-flat\-list\-syntax\*(Aq or \*(Aqtailf:cli\-range\-list\-syntax\*(Aq
.RE
.PP
/confdConfig/cli/bypassAllowAbbrevKeys (boolean) [false]
.RS 4
bypassAllowAbbrevKeys is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then /confdConfig/cli/allowAbbrevKeys setting does not take any effect\&. It means that no matter what is set for /confdConfig/cli/allowAbbrevKeys, the key elements are not allowed to be abbreviated in the CLI\&. This is relevant in the J\-style CLI when using the commands \*(Aqdelete\*(Aq and \*(Aqedit\*(Aq\&. In the C/I\-style CLIs when using the commands \*(Aqno\*(Aq, \*(Aqshow configuration\*(Aq and for commands to enter submodes\&.
.RE
.PP
/confdConfig/cli/jEnableLoadMergeLeafList (boolean) [false]
.RS 4
DEPRECATED \- use enableLoadMergeLeafList instead\&.
.sp
jEnableLoadMergeLeafList is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the \*(Aqload merge\*(Aq command in the J\-style CLI will merge the leaf\-list elements in a config file with the existing leaf\-list elements\&. If set to \*(Aqfalse\*(Aq then the \*(Aqload merge\*(Aq will have same effect as \*(Aqload replace\*(Aq for leaf\-list when loading the config file\&.
.RE
.PP
/confdConfig/cli/enableLoadMergeLeafList (boolean) [false]
.RS 4
enableLoadMergeLeafList is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq then the \*(Aqload merge\*(Aq command will merge the leaf\-list elements in a config file with the existing leaf\-list elements\&. If set to \*(Aqfalse\*(Aq then the \*(Aqload merge\*(Aq will have same effect as \*(Aqload replace\*(Aq for leaf\-list when loading the config file\&.
.RE
.PP
/confdConfig/cli/enableCliCache (boolean) [true]
.RS 4
enableCliCache is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq the CLI will operate with a builtin caching mechanism to speed up some of its operations\&. This is the default and preferred method\&. Only turn this off for very special cases\&.
.RE
.PP
/confdConfig/cli/nmda
.RS 4
CLI settings for NMDA\&.
.sp
.RE
.PP
/confdConfig/cli/nmda/showOperationalState (boolean) [false]
.RS 4
show\-operational\-state is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the \*(Aqoperational\-state\*(Aq option to the show command will be available in the CLI\&.
.sp
The operational\-state option is to display the content of the operational datastore\&.
.RE
.PP
/confdConfig/cli/turboParser
.RS 4
CLI settings for the Cisco style Turbo Parser\&.
.RE
.PP
/confdConfig/cli/turboParser/reportNoExists (boolean) [true]
.RS 4
DEPRECATED \- in order to harmonize the embedded ConfD turbo parser with the ConfD CLI, this can no longer be set\&. Now, reportNoExists is always on\&.
.RE
.PP
/confdConfig/fipsMode
.RS 4
To be able to enable FIPS mode, crypto\&.so needs to be rebuilt and replaced\&. This can be done by using the libconfd/crypto source package confd\-<vsn>\&.libconfd\&.tar\&.gz that is delivered with the ConfD release\&.
.sp
.RE
.PP
/confdConfig/fipsMode/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, FIPS mode is enabled\&.
.RE
.PP
/confdConfig/webui
.RS 4
This section defines settings which decide how the embedded ConfD Web server should behave, with respect to TCP and SSL etc\&.
.sp
.RE
.PP
/confdConfig/webui/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the Web server is started\&.
.RE
.PP
/confdConfig/webui/serverName (string) [localhost]
.RS 4
The hostname the Web server serves\&.
.RE
.PP
/confdConfig/webui/matchHostName (boolean) [false]
.RS 4
This setting specifies if the Web server only should serve URLs adhering to the serverName defined above\&. By default the serverName is \*(Aqlocalhost\*(Aq and matchHostName is \*(Aqfalse\*(Aq, i\&.e\&. any server name can be given in the URL\&. If you want the server to only accept URLs adhering to the serverName, enable this setting\&.
.RE
.PP
/confdConfig/webui/cacheRefreshSecs (uint64) [0]
.RS 4
The ConfD Web server uses a RAM cache for static content\&. An entry sits in the cache for a number of seconds before it is reread from disk (on access)\&. The default is 0\&.
.RE
.PP
/confdConfig/webui/maxRefEntries (uint64) [100]
.RS 4
Leafref and keyref entries are represented as drop\-down menues in the automatically generated Web UI\&. By default no more than 100 entries are fetched\&. This element makes this number configurable\&.
.RE
.PP
/confdConfig/webui/docroot (string)
.RS 4
The location of the document root on disk\&. If this configurable is omitted the docroot points to the next generation docroot in the ConfD distribution instead\&.
.RE
.PP
/confdConfig/webui/webuiIndexUrl (string) [/index\&.html]
.RS 4
Where to redirect after successful login, which by default is \*(Aq/index\&.html\*(Aq\&.
.RE
.PP
/confdConfig/webui/loginDir (string)
.RS 4
loginDir may be used if a custom login directory is to be used instead of the builtin ditto\&.
.RE
.PP
/confdConfig/webui/customDir (string)
.RS 4
customDir should be used if the Web UI is to be customized as described in the User Guide\&.
.RE
.PP
/confdConfig/webui/customHeaders/header
.RS 4
The customHeaders element contains any number of header elements, with a valid header\-field as defined in RFC 7230 3\&.2\&.
.sp
The headers will be part of all HTTP responses\&.
.RE
.PP
/confdConfig/webui/customHeaders/header/name (string)
.RS 4
RFC 7230 field\-name, e\&.g\&. Accept\-Control\-Allow\-Origin
.RE
.PP
/confdConfig/webui/customHeaders/header/value (string)
.RS 4
This parameter is mandatory\&.
.sp
RFC 7230 field\-value, e\&.g\&. http://www\&.cisco\&.com
.RE
.PP
/confdConfig/webui/xFrameOptions (DENY | SAMEORIGIN | ALLOW\-FROM) [DENY]
.RS 4
By default the X\-Frame\-Options header is set to DENY for the /login\&.html and /index\&.html pages\&. With this header it can be set to SAMEORIGIN or ALLOW\-FROM instead\&.
.RE
.PP
/confdConfig/webui/xContentTypeOptions (string) [nosniff]
.RS 4
The X\-Content\-Type\-Options response HTTP header is a marker used by the server to indicate that the MIME types advertised in the Content\-Type headers should not be changed and be followed\&. This allows opting\-out of MIME type sniffing\&.
.sp
This header is always sent in HTTP responses\&. By setting the value to the empty string will cause the header not to be sent\&.
.RE
.PP
/confdConfig/webui/xXssProtection (string) [1; mode=block]
.RS 4
The HTTP X\-XSS\-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops pages from loading when they detect reflected cross\-site scripting (XSS) attacks\&. Although these protections are largely unnecessary in modern browsers when sites implement a strong Content\-Security\-Policy that disables the use of inline JavaScript (\*(Aqunsafe\-inline\*(Aq), they can still provide protections for users of older web browsers that don\*(Aqt yet support CSP\&.
.sp
This header is always sent in HTTP responses\&. By setting the value to the empty string will cause the header not to be sent\&.
.RE
.PP
/confdConfig/webui/strictTransportSecurity (string) [max\-age=15552000; includeSubDomains]
.RS 4
The HTTP Strict\-Transport\-Security response header (often abbreviated as HSTS) lets a web site tell browsers that it should only be accessed using HTTPS, instead of using HTTP\&.
.sp
This header is always sent in HTTP responses\&. By setting the value to the empty string will cause the header not to be sent\&.
.RE
.PP
/confdConfig/webui/contentSecurityPolicy (string) [default\-src \*(Aqself\*(Aq; block\-all\-mixed\-content; base\-uri \*(Aqself\*(Aq; frame\-ancestors \*(Aqnone\*(Aq;]
.RS 4
The HTTP Content\-Security\-Policy response header allows web site administrators to control resources the user agent is allowed to load for a given page\&.
.sp
The default value means that: Resources like fonts, scripts, connections, images, and styles will all only load from the same origin as the protected resource\&. All mixed contents will be blocked and frame\-ancestors like iframes and applets is prohibited\&. See also:
.sp
.if n \{\
.RS 4
.\}
.nf
   https://www\&.w3\&.org/TR/CSP3/

.fi
.if n \{\
.RE
.\}
This header is always sent in HTTP responses\&. By setting the value to the empty string will cause the header not to be sent\&.
.RE
.PP
/confdConfig/webui/disableAuth/dir (string)
.RS 4
This parameter may be given multiple times\&.
.sp
The disableAuth element contains any number of \*(Aqdir\*(Aq elements\&. Each \*(Aqdir\*(Aq element points to a directory path in the docroot which should not be restricted by the AAA engine\&. If no \*(Aqdir\*(Aq elements are specifed the following directories and files will not be restricted by the AAA engine: \*(Aq/login\*(Aq and \*(Aq/login\&.html\*(Aq\&.
.RE
.PP
/confdConfig/webui/allowSymlinks (boolean) [true]
.RS 4
Allow symlinks in the docroot directory\&.
.RE
.PP
/confdConfig/webui/transport
.RS 4
Settings deciding which transport services the Web server should listen to, e\&.g\&. TCP and SSL\&.
.sp
.RE
.PP
/confdConfig/webui/transport/tcp
.RS 4
Settings deciding how the Web server TCP transport service should behave\&.
.sp
.RE
.PP
/confdConfig/webui/transport/tcp/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the Web server uses clear text TCP as a transport service\&.
.RE
.PP
/confdConfig/webui/transport/tcp/disableNonAuthRedirect (boolean) [false]
.RS 4
disableNonAuthRedirect is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq non\-authenticated HTTP requests (expect \*(Aq/\*(Aq and \*(Aq/index\&.html\*(Aq) result in a 404 HTTP reply\&. If \*(Aqfalse\*(Aq all non\-authenticated requests are redirected to \*(Aq/login\&.html\*(Aq\&.
.RE
.PP
/confdConfig/webui/transport/tcp/redirect (string)
.RS 4
If given the user will be redirected to the specified URL\&. Two macros can be specified, i\&.e\&. @HOST@ and @PORT@\&. For example https://@HOST@:443 or https://192\&.12\&.4\&.3:@PORT@
.RE
.PP
/confdConfig/webui/transport/tcp/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
The IP address which the Web server should listen to for TCP connections\&. 0\&.0\&.0\&.0 means that it listens to the port (/confdConfig/webui/transport/tcp/port) for all IPv4 addresses on the machine\&.
.RE
.PP
/confdConfig/webui/transport/tcp/port (inet:port\-number) [8008]
.RS 4
port is a valid port number to be used in combination with the address in /confdConfig/webui/transport/tcp/ip\&.
.RE
.PP
/confdConfig/webui/transport/tcp/keepalive (boolean) [false]
.RS 4
keepalive is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq (default)\&. When \*(Aqtrue\*(Aq periodic polling of the other end of the connection will be done for sockets that have not exchanged data during the OS defined interval\&. The server will also periodicly send messages (\*(Aq:keepalive test\*(Aq) over the connection to detect if it is alive\&. The first message may not detect that the connection is down, but the subsequent one will\&. The OS keepalive service will only clean the OS socket, this timeout will clean the server processes\&.
.RE
.PP
/confdConfig/webui/transport/tcp/keepaliveTimeout (uint64) [3600]
.RS 4
keepaliveTimeout defines the time (in seconds, default 3600) the server will wait before trying to send keepalive messages\&.
.RE
.PP
/confdConfig/webui/transport/tcp/netns (string)
.RS 4
The network namespace name where the listening socket will belong to\&.
.RE
.PP
/confdConfig/webui/transport/tcp/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/webui/transport/tcp/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, network namespace names, and VRF interface names; which the Web Server also listens to for TCP connections\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/webui/transport/tcp/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/webui/transport/tcp/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/webui/transport/tcp/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>
  10\&.45\&.22\&.11:4777|netns=ns0|vrf=vrf0
</extraIpPorts>
<extraIpPorts>127\&.0\&.0\&.1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=ns1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/webui/transport/tcp/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from the Web server for TCP connections\&.
.RE
.PP
/confdConfig/webui/transport/ssl
.RS 4
Settings deciding how the Web server SSL (Secure Sockets Layer) transport service should behave\&.
.sp
SSL is widely deployed on the Internet and virtually all bank transactions as well as all on\-line shopping today is done with SSL encryption\&. There are many good sources on describing SSL in detail, e\&.g\&. http://www\&.tldp\&.org/HOWTO/SSL\-Certificates\-HOWTO/ which describes how to manage certificates and keys\&.
.sp
.RE
.PP
/confdConfig/webui/transport/ssl/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the Web server uses SSL as a transport service\&.
.RE
.PP
/confdConfig/webui/transport/ssl/disableNonAuthRedirect (boolean) [false]
.RS 4
disableNonAuthRedirect is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq non\-authenticated HTTP requests (expect \*(Aq/\*(Aq and \*(Aq/index\&.html\*(Aq) result in a 404 HTTP reply\&. If \*(Aqfalse\*(Aq all non\-authenticated requests are redirected to \*(Aq/login\&.html\*(Aq\&.
.RE
.PP
/confdConfig/webui/transport/ssl/redirect (string)
.RS 4
If given the user will be redirected to the specified URL\&. Two macros can be specified, i\&.e\&. @HOST@ and @PORT@\&. For example http://@HOST@:80 or http://192\&.12\&.4\&.3:@PORT@
.RE
.PP
/confdConfig/webui/transport/ssl/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
The IP address which the Web server should listen to for incoming SSL connections\&. 0\&.0\&.0\&.0 means that it listens to the port (/confdConfig/webui/transport/ssl/port) for all IPv4 addresses on the machine\&.
.RE
.PP
/confdConfig/webui/transport/ssl/port (inet:port\-number) [8888]
.RS 4
port is a valid port number to be used in combination with the address in /confdConfig/webui/transport/ssl/ip\&.
.RE
.PP
/confdConfig/webui/transport/ssl/keepalive (boolean) [false]
.RS 4
keepalive is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq (default)\&. When \*(Aqtrue\*(Aq periodic polling of the other end of the connection will be done for sockets that have not exchanged data during the OS defined interval\&. The server will also periodicly send messages (\*(Aq:keepalive test\*(Aq) over the connection to detect if it is alive\&. The first message may not detect that the connection is down, but the subsequent one will\&. The OS keepalive service will only clean the OS socket, this timeout will clean the server processes\&.
.RE
.PP
/confdConfig/webui/transport/ssl/keepaliveTimeout (uint64) [3600]
.RS 4
keepaliveTimeout defines the time (in seconds, default 3600) the server will wait before trying to send keepalive messages\&.
.RE
.PP
/confdConfig/webui/transport/ssl/netns (string)
.RS 4
The network namespace name where the listening socket will belong to\&.
.RE
.PP
/confdConfig/webui/transport/ssl/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/webui/transport/ssl/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, network namespace names, and VRF interface names; which the Web Server also listens to for TCP connections\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/webui/transport/ssl/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/webui/transport/ssl/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/webui/transport/ssl/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>
  10\&.45\&.22\&.11:4777|netns=ns0|vrf=vrf0
</extraIpPorts>
<extraIpPorts>127\&.0\&.0\&.1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=ns1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/webui/transport/ssl/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from the Web server for SSL connections\&.
.RE
.PP
/confdConfig/webui/transport/ssl/readFromDb (boolean) [false]
.RS 4
If enabled, TLS data (certificate, private key, and CA certificates) is read from database\&. Corresponding configuration regarding reading TLS data (i\&.e\&. /confdConfig/webui/transport/ssl/keyFile, /confdConfig/webui/transport/ssl/certFile, /confdConfig/webui/transport/ssl/caCertFile) is ignored when enabled\&.
.sp
See tailf\-tls\&.yang and the ConfD User Guide for more information\&.
.RE
.PP
/confdConfig/webui/transport/ssl/keyFile (string)
.RS 4
Specifies which file that contains the private key for the certificate\&. Read more about certificates in /confdConfig/webui/transport/ssl/certFile\&.
.sp
During installation self signed certificates/keys are generated if the openssl binary is available on the host\&. Note: Only use these certificates/keys for test purposes\&.
.RE
.PP
/confdConfig/webui/transport/ssl/certFile (string)
.RS 4
Specifies which file that contains the server certificate\&. The certificate is either a self\-signed test certificate or a genuin and validated certificate bought from a CA (Certificate Authority)\&.
.sp
During installation self signed certificates/keys are generated if the openssl binary is available on the host\&. Note: Only use these certificates/keys for test purposes\&.
.sp
This server certificate has been generated using a local CA certificate:
.sp
.if n \{\
.RS 4
.\}
.nf
$ openssl
OpenSSL> genrsa \-out ca\&.key 4096
OpenSSL> req \-new \-x509 \-days 3650 \-key ca\&.key \-out ca\&.cert
OpenSSL> genrsa \-out host\&.key 4096
OpenSSL> req \-new \-key host\&.key \-out host\&.csr
OpenSSL> x509 \-req \-days 365 \-in host\&.csr \-CA ca\&.cert \e
  \-CAkey ca\&.key \-set_serial 01 \-out host\&.cert

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/webui/transport/ssl/caCertFile (string)
.RS 4
Specifies which file that contains the trusted certificates to use during client authentication and to use when attempting to build the server certificate chain\&. The list is also used in the list of acceptable CA certificates passed to the client when a certificate is requested\&.
.sp
During installation self signed certificates/keys are generated if the openssl binary is available on the host\&. Note: Only use these certificates/keys for test purposes\&.
.sp
This CA certificate has been generated as shown above\&.
.RE
.PP
/confdConfig/webui/transport/ssl/verify (verifyType) [1]
.RS 4
Specifies the level of verification the server does on client certificates\&. 1 means nothing, 2 means the server will ask the client for a certificate but not fail if the client does not supply a client certificate, 3 means that the server requires the client to supply a client certificate\&.
.sp
If caCertFile has been set to the ca\&.cert file generated above you can verify that it works correctly using, for example:
.sp
.if n \{\
.RS 4
.\}
.nf
$ openssl s_client \-connect 127\&.0\&.0\&.1:8888 \e
      \-cert client\&.cert \-key client\&.key

.fi
.if n \{\
.RE
.\}
For this to work client\&.cert must have been generated using the ca\&.cert from above:
.sp
.if n \{\
.RS 4
.\}
.nf
$ openssl
OpenSSL> genrsa \-out client\&.key 4096
OpenSSL> req \-new \-key client\&.key \-out client\&.csr
OpenSSL> x509 \-req \-days 3650 \-in client\&.csr \-CA ca\&.cert \e
  \-CAkey ca\&.key \-set_serial 01 \-out client\&.cert

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/webui/transport/ssl/depth (uint64) [1]
.RS 4
Specifies the depth of certificate chains the server is prepared to follow when verifying client certificates\&.
.RE
.PP
/confdConfig/webui/transport/ssl/ciphers (string) [DEFAULT]
.RS 4
Specifies the cipher suites to be used by the server as a colon\-separated list from the set
.sp
TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_AES_128_CCM_SHA256, ECDHE\-ECDSA\-AES256\-GCM\-SHA384, ECDHE\-RSA\-AES256\-GCM\-SHA384, ECDHE\-ECDSA\-AES256\-SHA384, ECDHE\-RSA\-AES256\-SHA384, ECDH\-ECDSA\-AES256\-GCM\-SHA384, ECDH\-RSA\-AES256\-GCM\-SHA384, ECDH\-ECDSA\-AES256\-SHA384, ECDH\-RSA\-AES256\-SHA384, DHE\-RSA\-AES256\-GCM\-SHA384, DHE\-DSS\-AES256\-GCM\-SHA384, DHE\-RSA\-AES256\-SHA256, DHE\-DSS\-AES256\-SHA256, AES256\-GCM\-SHA384, AES256\-SHA256, ECDHE\-ECDSA\-AES128\-GCM\-SHA256, ECDHE\-RSA\-AES128\-GCM\-SHA256, ECDHE\-ECDSA\-AES128\-SHA256, ECDHE\-RSA\-AES128\-SHA256, ECDH\-ECDSA\-AES128\-GCM\-SHA256, ECDH\-RSA\-AES128\-GCM\-SHA256, ECDH\-ECDSA\-AES128\-SHA256, ECDH\-RSA\-AES128\-SHA256, DHE\-RSA\-AES128\-GCM\-SHA256, DHE\-DSS\-AES128\-GCM\-SHA256, DHE\-RSA\-AES128\-SHA256, DHE\-DSS\-AES128\-SHA256, AES128\-GCM\-SHA256, AES128\-SHA256, ECDHE\-ECDSA\-AES256\-SHA, ECDHE\-RSA\-AES256\-SHA, DHE\-RSA\-AES256\-SHA, DHE\-DSS\-AES256\-SHA, ECDH\-ECDSA\-AES256\-SHA, ECDH\-RSA\-AES256\-SHA, AES256\-SHA, ECDHE\-ECDSA\-AES128\-SHA, ECDHE\-RSA\-AES128\-SHA, DHE\-RSA\-AES128\-SHA, DHE\-DSS\-AES128\-SHA, ECDH\-ECDSA\-AES128\-SHA, ECDH\-RSA\-AES128\-SHA, AES128\-SHA, ECDHE\-ECDSA\-DES\-CBC3\-SHA, ECDHE\-RSA\-DES\-CBC3\-SHA, EDH\-RSA\-DES\-CBC3\-SHA, EDH\-DSS\-DES\-CBC3\-SHA, ECDH\-ECDSA\-DES\-CBC3\-SHA, ECDH\-RSA\-DES\-CBC3\-SHA, and DES\-CBC3\-SHA,
.sp
or the word \*(AqDEFAULT\*(Aq (use all cipher suites in that list for which the required support is implemented in libcrypto)\&. See the OpenSSL manual page ciphers(1) for the definition of the cipher suites\&. NOTE: The general cipher list syntax described in ciphers(1) is not supported\&.
.RE
.PP
/confdConfig/webui/transport/ssl/protocols (string) [DEFAULT]
.RS 4
Specifies the SSL/TLS protocol versions to be used by the server as a whitespace\-separated list from the set tlsv1 tlsv1\&.1 tlsv1\&.2 tlsv1\&.3, or the word \*(AqDEFAULT\*(Aq (use all supported protocol versions except the set tlsv1 tlsv1\&.1)\&.
.RE
.PP
/confdConfig/webui/transport/ssl/ellipticCurves (string) [DEFAULT]
.RS 4
Specifies the curves for Elliptic Curve cipher suites to be used by the server as a whitespace\-separated list from the set
.sp
sect571r1, sect571k1, secp521r1, brainpoolP512r1, sect409k1, sect409r1, brainpoolP384r1, secp384r1, sect283k1, sect283r1, brainpoolP256r1, secp256k1, secp256r1, sect239k1, sect233k1, sect233r1, secp224k1, secp224r1, sect193r1, sect193r2, secp192k1, secp192r1, sect163k1, sect163r1, sect163r2, secp160k1, secp160r1, and secp160r2,
.sp
or the word \*(AqDEFAULT\*(Aq (use all supported curves)\&.
.RE
.PP
/confdConfig/webui/transport/unauthenticatedMessageLimit (uint32 | nolimit) [65536]
.RS 4
Limit the size of allowed unauthenticated messages\&. Limit is given in bytes or \*(Aqnolimit\*(Aq\&. The default is 64kB\&.
.RE
.PP
/confdConfig/webui/cgi
.RS 4
CGI\-script support
.sp
.RE
.PP
/confdConfig/webui/cgi/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, CGI\-script support is enabled\&.
.RE
.PP
/confdConfig/webui/cgi/dir (string) [cgi\-bin]
.RS 4
The directory path to the location of the CGI\-scripts\&.
.RE
.PP
/confdConfig/webui/cgi/requestFilter (string)
.RS 4
Specifies that characters not specified in the given regexp should be filtered out silently\&.
.RE
.PP
/confdConfig/webui/cgi/maxRequestLength (uint16)
.RS 4
Specifies the maximum amount of characters in a request\&. All characters exceeding this limit are silenty ignored\&.
.RE
.PP
/confdConfig/webui/cgi/php
.RS 4
PHP support
.sp
.RE
.PP
/confdConfig/webui/cgi/php/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, PHP support is enabled\&.
.RE
.PP
/confdConfig/webui/idleTimeout (xs:duration) [PT30M]
.RS 4
Maximum idle time before terminating a Web UI session\&. PT0M means no timeout\&. Default is PT30M, ie 30 minutes\&.
.RE
.PP
/confdConfig/webui/absoluteTimeout (xs:duration) [PT16H]
.RS 4
Maximum absolute time before terminating a Web UI session\&. PT0M means no timeout\&. Default is PT16H, ie 16 hours\&.
.RE
.PP
/confdConfig/webui/rateLimiting (uint64) [1000000]
.RS 4
Maximum number of allowed JSON\-RPC requests every hour\&. 0 means infinity\&. Default is 1 million\&.
.RE
.PP
/confdConfig/webui/namedCommands
.RS 4
Named commands are used to define a well defined set of executables which can be run on the target device from the browser using a call to Maapi\&.runCmd()\&.
.sp
.RE
.PP
/confdConfig/webui/namedCommands/exec
.RS 4
The \*(Aqexec\*(Aq directive specifies how a named command is mapped to an executable or a shell script\&. It contains (in order) one \*(Aqname\*(Aq directive, one \*(AqosCommand\*(Aq directive, zero or one \*(Aqargs\*(Aq directives and zero or one \*(Aqoptions\*(Aq directives\&.
.sp
An example:
.sp
.if n \{\
.RS 4
.\}
.nf
<namedCommands>
 <exec>
   <name>cli</name>
   <osCommand>confd_cli</osCommand>
   <args>\-u$(user) \-\-proto http</args>
 </exec>
<namedCommands>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/webui/namedCommands/exec/name (string)
.RS 4
This parameter is mandatory\&.
.sp
The command alias name to be used in Maapi\&.runCmd() calls\&.
.RE
.PP
/confdConfig/webui/namedCommands/exec/osCommand (string)
.RS 4
This parameter is mandatory\&.
.sp
The \*(AqosCommand\*(Aq directive specifies the path to the executable or shell script to be called\&. If the command is in the $PATH (as specified when we start the ConfD daemon) the path may just be the name of the command\&.
.sp
The command is invoked as if it had been executed by exec(3), i\&.e\&. not in a shell environment such as \*(Aq/bin/sh \-c \&.\&.\&.\*(Aq\&.
.RE
.PP
/confdConfig/webui/namedCommands/exec/args (string)
.RS 4
The \*(Aqargs\*(Aq directive specifies the arguments to use when executing the command specified by the \*(AqosCommand\*(Aq directive\&. args is a space\-separated list of argument strings\&.
.RE
.PP
/confdConfig/webui/namedCommands/exec/options
.RS 4
The \*(Aqoptions\*(Aq directive specifies how the command is be executed\&. It contains (in any order) zero or one \*(Aquid\*(Aq directives and zero or one \*(Aqwd\*(Aq directives\&.
.sp
.RE
.PP
/confdConfig/webui/namedCommands/exec/options/uid (uint64 | confd | user | root)
.RS 4
The \*(Aquid\*(Aq directive specifies which user id to use when executing the command\&. Possible values are:
.sp
.if n \{\
.RS 4
.\}
.nf
confd (default)
    The command is run as the same user id
    as the ConfD daemon\&.
user
    The command is run as the same user id as the user
    logged in to the CLI, i\&.e\&. we have to make sure
    that this user id exists as an actual user id on
    the device\&.
root
    The command is run as root\&.
<uid> (the numerical user <uid>)
    The command is run as the user id <uid>\&.

.fi
.if n \{\
.RE
.\}
NOTE: If uid is set to either \*(Aquser\*(Aq, \*(Aqroot\*(Aq or <uid> the ConfD daemon must have been started as root (or setuid), or the cmdptywrapper must have setuid root permissions\&.
.RE
.PP
/confdConfig/webui/namedCommands/exec/options/wd (string)
.RS 4
The \*(Aqwd\*(Aq directive specifies which working directory to use when executing the command\&. If not given, the command is executed from the location of the CLI\&.
.RE
.PP
/confdConfig/webui/namedCommands/exec/options/globalNoDuplicate (string)
.RS 4
.RE
.PP
/confdConfig/webui/audit (boolean) [false]
.RS 4
audit is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, then JSON\-RPC/CGI requests are logged to the audit log\&.
.RE
.PP
/confdConfig/webui/useForwardedClientIp
.RS 4
This section is created if a Client IP address should be looked for among HTTP headers such as \*(AqX\-Forwarded\-For\*(Aq or \*(AqX\-REAL\-IP\*(Aq, etc\&.
.sp
.RE
.PP
/confdConfig/webui/useForwardedClientIp/proxyHeaders (string)
.RS 4
This parameter is mandatory\&.
.sp
This parameter may be given multiple times\&.
.sp
Name of the HTTP headers that contain the true Client IP address\&.
.sp
Typically the de facto standard is to use the \*(AqX\-Forwarded\-For\*(Aq header, but other headers exists, e\&.g: \*(AqX\-REAL\-IP\*(Aq\&.
.sp
The first header in this list, found to contain an IP address will cause this IP address to be used as the Client IP address\&. In case of several elements, the first element, separated by a space or comma, will be used\&. The header name specified here is not case sensitive\&.
.sp
Example of HTTP headers containing a ClientIP:
.sp
.if n \{\
.RS 4
.\}
.nf
     X\-Forwarded\-For: ClientIP, ProxyIP1, ProxyIP2
     X\-REAL\-IP: ClientIP


.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/webui/useForwardedClientIp/allowedProxyIpPrefix (inet:ip\-prefix)
.RS 4
This parameter is mandatory\&.
.sp
This parameter may be given multiple times\&.
.sp
Only the source IP\-prefix addresses listed here will be trusted to contain a Client IP address in a HTTP header as specified in \*(AqproxyHeaders\*(Aq
.RE
.PP
/confdConfig/webui/resources
.RS 4
Settings for the /resources URL\&.
.sp
.RE
.PP
/confdConfig/webui/resources/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the /resources URL will be available\&.
.RE
.PP
/confdConfig/restconf
.RS 4
This section defines settings for the RESTCONF API\&.
.sp
.RE
.PP
/confdConfig/restconf/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the RESTCONF API is enabled\&.
.RE
.PP
/confdConfig/restconf/showHidden (boolean) [false]
.RS 4
showHidden is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq all hidden nodes will be reachable\&. If \*(Aqfalse\*(Aq query parameter ?unhide overrides\&.
.RE
.PP
/confdConfig/restconf/rootResource (string) [restconf]
.RS 4
The RESTCONF root resource path\&.
.RE
.PP
/confdConfig/restconf/schemaServerUrl (string)
.RS 4
Change the schema element in the ietf\-yang\-library:modules\-state resource response\&.
.sp
It is possible to use the placeholders @X_FORWARDED_HOST@ and @X_FORWARDED_PORT@ in order to set the schema URL with HTTP headers X\-Forwarded\-Host and X\-Forwarded_Port, e\&.g\&. https://@X_FORWARDED_HOST@:@X_FORWARDED_PORT@ \&.
.RE
.PP
/confdConfig/restconf/tokenResponse
.RS 4
When authenticating via AAA externalAuthentication or externalValidation and a token is returned, it is possible to include a header with the token in the response\&.
.sp
.RE
.PP
/confdConfig/restconf/tokenResponse/xAuthToken (boolean) [false]
.RS 4
Either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, a x\-auth\-token header is included in the response with any token returned from AAA\&.
.RE
.PP
/confdConfig/restconf/tokenResponse/tokenCookie
.RS 4
Configuration of RESTCONF token cookies\&.
.sp
.RE
.PP
/confdConfig/restconf/tokenResponse/tokenCookie/name (string) []
.RS 4
The cookie name, exactly as it is to be sent\&. If configured, a HTTP cookie of that name included in the response with any token returned from AAA as value\&.
.RE
.PP
/confdConfig/restconf/tokenResponse/tokenCookie/directives (string) []
.RS 4
An optional string with directives appended to the cookie, exactly as it is to be sent\&.
.RE
.PP
/confdConfig/restconf/customHeaders/header
.RS 4
The customHeaders element contains any number of header elements, with a valid header\-field as defined in RFC 7230 3\&.2\&.
.sp
The headers will be part of all HTTP responses\&.
.RE
.PP
/confdConfig/restconf/customHeaders/header/name (string)
.RS 4
RFC 7230 field\-name, e\&.g\&. Accept\-Control\-Allow\-Origin
.RE
.PP
/confdConfig/restconf/customHeaders/header/value (string)
.RS 4
This parameter is mandatory\&.
.sp
RFC 7230 field\-value, e\&.g\&. http://www\&.cisco\&.com
.RE
.PP
/confdConfig/restconf/xFrameOptions (DENY | SAMEORIGIN | ALLOW\-FROM) [DENY]
.RS 4
By default the X\-Frame\-Options header is set to DENY for the /login\&.html and /index\&.html pages\&. With this header it can be set to SAMEORIGIN or ALLOW\-FROM instead\&.
.RE
.PP
/confdConfig/restconf/xContentTypeOptions (string) [nosniff]
.RS 4
The X\-Content\-Type\-Options response HTTP header is a marker used by the server to indicate that the MIME types advertised in the Content\-Type headers should not be changed and be followed\&. This allows opting\-out of MIME type sniffing\&.
.sp
This header is always sent in HTTP responses\&. By setting the value to the empty string will cause the header not to be sent\&.
.RE
.PP
/confdConfig/restconf/xXssProtection (string) [1; mode=block]
.RS 4
The HTTP X\-XSS\-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops pages from loading when they detect reflected cross\-site scripting (XSS) attacks\&. Although these protections are largely unnecessary in modern browsers when sites implement a strong Content\-Security\-Policy that disables the use of inline JavaScript (\*(Aqunsafe\-inline\*(Aq), they can still provide protections for users of older web browsers that don\*(Aqt yet support CSP\&.
.sp
This header is always sent in HTTP responses\&. By setting the value to the empty string will cause the header not to be sent\&.
.RE
.PP
/confdConfig/restconf/strictTransportSecurity (string) [max\-age=15552000; includeSubDomains]
.RS 4
The HTTP Strict\-Transport\-Security response header (often abbreviated as HSTS) lets a web site tell browsers that it should only be accessed using HTTPS, instead of using HTTP\&.
.sp
This header is always sent in HTTP responses\&. By setting the value to the empty string will cause the header not to be sent\&.
.RE
.PP
/confdConfig/restconf/contentSecurityPolicy (string) [default\-src \*(Aqself\*(Aq; block\-all\-mixed\-content; base\-uri \*(Aqself\*(Aq; frame\-ancestors \*(Aqnone\*(Aq;]
.RS 4
The HTTP Content\-Security\-Policy response header allows web site administrators to control resources the user agent is allowed to load for a given page\&.
.sp
The default value means that: Resources like fonts, scripts, connections, images, and styles will all only load from the same origin as the protected resource\&. All mixed contents will be blocked and frame\-ancestors like iframes and applets is prohibited\&. See also:
.sp
.if n \{\
.RS 4
.\}
.nf
   https://www\&.w3\&.org/TR/CSP3/

.fi
.if n \{\
.RE
.\}
This header is always sent in HTTP responses\&. By setting the value to the empty string will cause the header not to be sent\&.
.RE
.PP
/confdConfig/restconf/requireModuleName/enabled (boolean) [true]
.RS 4
When set to \*(Aqtrue\*(Aq, the client must explicitly provide the module name of the node if it is defined in a module other than its parent node or its parent node is the datastore\&. When set to \*(Aqfalse\*(Aq, this configuration parameter allows the client to bypass above requirements\&. Refer to RFC 8040, section 3\&.5\&.3 for detailed information\&.
.RE
.PP
/confdConfig/restconf/transport
.RS 4
Settings deciding which transport services the RESTCONF server should listen to, e\&.g\&. TCP and SSL\&.
.sp
.RE
.PP
/confdConfig/restconf/transport/tcp
.RS 4
Settings deciding how the RESTCONF server TCP transport service should behave\&.
.sp
.RE
.PP
/confdConfig/restconf/transport/tcp/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the RESTCONF server uses clear text TCP as a transport service\&.
.RE
.PP
/confdConfig/restconf/transport/tcp/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
The IP address which the RESTCONF server should listen to for TCP connections\&. 0\&.0\&.0\&.0 means that it listens to the port for all IPv4 addresses on the machine\&.
.RE
.PP
/confdConfig/restconf/transport/tcp/port (inet:port\-number) [8009]
.RS 4
port is a valid port number to be used in combination with the address\&.
.RE
.PP
/confdConfig/restconf/transport/tcp/netns (string)
.RS 4
The network namespace name where the listening socket should belong to\&.
.RE
.PP
/confdConfig/restconf/transport/tcp/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/restconf/transport/tcp/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, network namespace names, and VRF interface names; which the RESTCONF server also listens to for TCP connections\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/restconf/tcp/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/restconf/tcp/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/restconf/tcp/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>
  10\&.45\&.22\&.11:4777|netns=ns0|vrf=vrf0
</extraIpPorts>
<extraIpPorts>127\&.0\&.0\&.1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=ns1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/restconf/transport/tcp/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from the RESTCONF server for TCP connections\&.
.RE
.PP
/confdConfig/restconf/transport/ssl
.RS 4
Settings deciding how the RESTCONF server SSL (Secure Sockets Layer) transport service should behave\&.
.sp
.RE
.PP
/confdConfig/restconf/transport/ssl/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the RESTCONF server uses SSL as a transport service\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
The IP address which the RESTCONF server should listen to for incoming SSL connections\&. 0\&.0\&.0\&.0 means that it listens to the port for all IPv4 addresses on the machine\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/port (inet:port\-number) [8889]
.RS 4
port is a valid port number\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/netns (string)
.RS 4
The network namespace name where the listening socket should belong to\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, network namespace names, and VRF interface names; which the RESTCONF server also listens to for SSL connections\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/transport/ssl/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/transport/ssl/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/transport/ssl/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>10\&.45\&.22\&.11:4777|netns=ns0|vrf=vrf0</extraIpPorts>
<extraIpPorts>127\&.0\&.0\&.1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=ns1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/restconf/transport/ssl/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from the RESTCONF server for SSL connections\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/keyFile (string)
.RS 4
Specifies which file that contains the private key for the certificate\&. Read more about certificates in /confdConfig/restconf/transport/ssl/certFile\&.
.sp
During installation self signed certificates/keys are generated if the openssl binary is available on the host\&. Note: Only use these certificates/keys for test purposes\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/certFile (string)
.RS 4
Specifies which file that contains the server certificate\&. The certificate is either a self\-signed test certificate or a genuin and validated certificate bought from a CA (Certificate Authority)\&.
.sp
During installation self signed certificates/keys are generated if the openssl binary is available on the host\&. Note: Only use these certificates/keys for test purposes\&.
.sp
This server certificate has been generated using a local CA certificate:
.sp
.if n \{\
.RS 4
.\}
.nf
$ openssl
OpenSSL> genrsa \-out ca\&.key 4096
OpenSSL> req \-new \-x509 \-days 3650 \-key ca\&.key \-out ca\&.cert
OpenSSL> genrsa \-out host\&.key 4096
OpenSSL> req \-new \-key host\&.key \-out host\&.csr
OpenSSL> x509 \-req \-days 365 \-in host\&.csr \-CA ca\&.cert \e
  \-CAkey ca\&.key \-set_serial 01 \-out host\&.cert

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/restconf/transport/ssl/caCertFile (string)
.RS 4
Specifies which file that contains the trusted certificates to use during client authentication and to use when attempting to build the server certificate chain\&. The list is also used in the list of acceptable CA certificates passed to the client when a certificate is requested\&.
.sp
During installation self signed certificates/keys are generated if the openssl binary is available on the host\&. Note: Only use these certificates/keys for test purposes\&.
.sp
This CA certificate has been generated as shown above\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/verify (verifyType) [1]
.RS 4
Specifies the level of verification the server does on client certificates\&. 1 means nothing, 2 means the server will ask the client for a certificate but not fail if the client does not supply a client certificate, 3 means that the server requires the client to supply a client certificate\&.
.sp
If caCertFile has been set to the ca\&.cert file generated above you can verify that it works correctly using, for example:
.sp
.if n \{\
.RS 4
.\}
.nf
$ openssl s_client \-connect 127\&.0\&.0\&.1:8888 \e
      \-cert client\&.cert \-key client\&.key

.fi
.if n \{\
.RE
.\}
For this to work client\&.cert must have been generated using the ca\&.cert from above:
.sp
.if n \{\
.RS 4
.\}
.nf
$ openssl
OpenSSL> genrsa \-out client\&.key 4096
OpenSSL> req \-new \-key client\&.key \-out client\&.csr
OpenSSL> x509 \-req \-days 3650 \-in client\&.csr \-CA ca\&.cert \e
  \-CAkey ca\&.key \-set_serial 01 \-out client\&.cert

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/restconf/transport/ssl/depth (uint64) [1]
.RS 4
Specifies the depth of certificate chains the server is prepared to follow when verifying client certificates\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/ciphers (string) [DEFAULT]
.RS 4
Specifies the cipher suites to be used by the server as a colon\-separated list from the set
.sp
TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_AES_128_CCM_SHA256, ECDHE\-ECDSA\-AES256\-GCM\-SHA384, ECDHE\-RSA\-AES256\-GCM\-SHA384, ECDHE\-ECDSA\-AES256\-SHA384, ECDHE\-RSA\-AES256\-SHA384, ECDH\-ECDSA\-AES256\-GCM\-SHA384, ECDH\-RSA\-AES256\-GCM\-SHA384, ECDH\-ECDSA\-AES256\-SHA384, ECDH\-RSA\-AES256\-SHA384, DHE\-RSA\-AES256\-GCM\-SHA384, DHE\-DSS\-AES256\-GCM\-SHA384, DHE\-RSA\-AES256\-SHA256, DHE\-DSS\-AES256\-SHA256, AES256\-GCM\-SHA384, AES256\-SHA256, ECDHE\-ECDSA\-AES128\-GCM\-SHA256, ECDHE\-RSA\-AES128\-GCM\-SHA256, ECDHE\-ECDSA\-AES128\-SHA256, ECDHE\-RSA\-AES128\-SHA256, ECDH\-ECDSA\-AES128\-GCM\-SHA256, ECDH\-RSA\-AES128\-GCM\-SHA256, ECDH\-ECDSA\-AES128\-SHA256, ECDH\-RSA\-AES128\-SHA256, DHE\-RSA\-AES128\-GCM\-SHA256, DHE\-DSS\-AES128\-GCM\-SHA256, DHE\-RSA\-AES128\-SHA256, DHE\-DSS\-AES128\-SHA256, AES128\-GCM\-SHA256, AES128\-SHA256, ECDHE\-ECDSA\-AES256\-SHA, ECDHE\-RSA\-AES256\-SHA, DHE\-RSA\-AES256\-SHA, DHE\-DSS\-AES256\-SHA, ECDH\-ECDSA\-AES256\-SHA, ECDH\-RSA\-AES256\-SHA, AES256\-SHA, ECDHE\-ECDSA\-AES128\-SHA, ECDHE\-RSA\-AES128\-SHA, DHE\-RSA\-AES128\-SHA, DHE\-DSS\-AES128\-SHA, ECDH\-ECDSA\-AES128\-SHA, ECDH\-RSA\-AES128\-SHA, AES128\-SHA, ECDHE\-ECDSA\-DES\-CBC3\-SHA, ECDHE\-RSA\-DES\-CBC3\-SHA, EDH\-RSA\-DES\-CBC3\-SHA, EDH\-DSS\-DES\-CBC3\-SHA, ECDH\-ECDSA\-DES\-CBC3\-SHA, ECDH\-RSA\-DES\-CBC3\-SHA, and DES\-CBC3\-SHA,
.sp
or the word \*(AqDEFAULT\*(Aq (use all cipher suites in that list for which the required support is implemented in libcrypto)\&. See the OpenSSL manual page ciphers(1) for the definition of the cipher suites\&. NOTE: The general cipher list syntax described in ciphers(1) is not supported\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/protocols (string) [DEFAULT]
.RS 4
Specifies the SSL/TLS protocol versions to be used by the server as a whitespace\-separated list from the set tlsv1 tlsv1\&.1 tlsv1\&.2 tlsv1\&.3, or the word \*(AqDEFAULT\*(Aq (use all supported protocol versions except the set tlsv1 tlsv1\&.1)\&.
.RE
.PP
/confdConfig/restconf/transport/ssl/ellipticCurves (string) [DEFAULT]
.RS 4
Specifies the curves for Elliptic Curve cipher suites to be used by the server as a whitespace\-separated list from the set
.sp
sect571r1, sect571k1, secp521r1, brainpoolP512r1, sect409k1, sect409r1, brainpoolP384r1, secp384r1, sect283k1, sect283r1, brainpoolP256r1, secp256k1, secp256r1, sect239k1, sect233k1, sect233r1, secp224k1, secp224r1, sect193r1, sect193r2, secp192k1, secp192r1, sect163k1, sect163r1, sect163r2, secp160k1, secp160r1, and secp160r2,
.sp
or the word \*(AqDEFAULT\*(Aq (use all supported curves)\&.
.RE
.PP
/confdConfig/capi
.RS 4
C\-API parameters\&.
.sp
.RE
.PP
/confdConfig/capi/newSessionTimeout (xs:duration) [PT30S]
.RS 4
Timeout for a daemon to respond to a control socket request, see confd_lib_dp(3)\&. If the daemon fails to respond within the given time, it will be disconnected\&.
.RE
.PP
/confdConfig/capi/queryTimeout (xs:duration) [PT120S]
.RS 4
Timeout for a daemon to respond to a worker socket query, see confd_lib_dp(3)\&. If the daemon fails to respond within the given time, it will be disconnected\&.
.RE
.PP
/confdConfig/capi/connectTimeout (xs:duration) [PT60S]
.RS 4
Timeout for a daemon to send initial message after connecting the socket to the confd server\&. If the daemon fails to initiate the connection within the given time, it will be disconnected\&.
.RE
.PP
/confdConfig/capi/objectCacheTimeout (xs:duration) [PT2S]
.RS 4
Timeout for the cache used by the get_object() and get_next_object() callback requests, see confd_lib_dp(3)\&. ConfD caches the result of these calls and serves get_elem requests from northbound agents from the cache\&. NOTE: Setting this timeout too low will effectively cause the callbacks to be non\-functional \- e\&.g\&. get_object() may be invoked for each get_elem request from a northbound agent\&.
.RE
.PP
/confdConfig/capi/eventReplyTimeout (xs:duration) [PT120S]
.RS 4
Timeout for the reply from an event notification subscriber for a notification that requires a reply, see confd_lib_events(3)\&. If the subscriber fails to reply within the given time, the notification socket will be closed\&.
.RE
.PP
/confdConfig/proxyForwarding
.RS 4
This section defines settings which affect the behavior of Proxy Forwarding\&.
.sp
.RE
.PP
/confdConfig/proxyForwarding/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, proxy forwarding is enabled\&.
.RE
.PP
/confdConfig/proxyForwarding/autoLogin (boolean) [false]
.RS 4
autoLogin is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, ConfD will try to login to the target system with the current session\*(Aqs credentials, if it has access to them\&. In order for ConfD to get access to the session credentials, the builtin SSH daemon must be used\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy
.RS 4
Parameters for a single proxy\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy/target (string)
.RS 4
The name of the proxy target\&. It is used as a unique identifier of the proxy target\&. This is the target name that users give when they want to connect to the target\&.
.sp
The name is included in the proxy events (see confd_lib_events(3)) generated by ConfD\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy/address (inet:host)
.RS 4
This parameter is mandatory\&.
.sp
The IP address of the proxy target system\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy/netconf
.RS 4
If present, the target is available for NETCONF proxy forwarding\&.
.sp
.RE
.PP
/confdConfig/proxyForwarding/proxy/netconf/ssh
.RS 4
If present, the proxy connections between ConfD and the proxy NETCONF target will be over SSH\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy/netconf/ssh/port (inet:port\-number) [2022]
.RS 4
The port where the proxy target listens for NETCONF SSH connections\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy/netconf/tcp
.RS 4
If present, the proxy connections between ConfD and the proxy NETCONF target will be over TCP\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy/netconf/tcp/port (inet:port\-number) [2023]
.RS 4
The port where the proxy target listens for NETCONF TCP connections\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy/cli
.RS 4
If present, the target is available for CLI proxy forwarding\&.
.sp
.RE
.PP
/confdConfig/proxyForwarding/proxy/cli/ssh
.RS 4
If present, the proxy connections between ConfD and the proxy CLI target will be over SSH\&.
.RE
.PP
/confdConfig/proxyForwarding/proxy/cli/ssh/port (inet:port\-number) [22]
.RS 4
The port where the proxy target listens for CLI SSH connections\&.
.RE
.PP
/confdConfig/snmpAgent
.RS 4
This section defines settings which affect the behavior of the SNMP agent\&.
.sp
.RE
.PP
/confdConfig/snmpAgent/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the SNMP agent is enabled\&.
.RE
.PP
/confdConfig/snmpAgent/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
ip is an IP address which the ConfD SNMP agent should listen to\&. 0\&.0\&.0\&.0 means that it listens to the port (/confdConfig/snmpAgent/port) for all IPv4 addresses on the machine\&.
.RE
.PP
/confdConfig/snmpAgent/port (inet:port\-number) [161]
.RS 4
port is a valid port number to be used in combination with /confdConfig/snmpAgent/ip\&.
.RE
.PP
/confdConfig/snmpAgent/netns (string)
.RS 4
The network namespace name where the listening socket will belong to\&.
.RE
.PP
/confdConfig/snmpAgent/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/snmpAgent/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, network namespace names, and VRF interface names; which the SNMP agent also listens to\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/snmpAgent/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/snmpAgent/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/snmpAgent/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>192\&.168\&.15\&.3:4477|netns=ns1|vrf=vrf0</extraIpPorts>
<extraIpPorts>127\&.0\&.0\&.1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=ns1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/snmpAgent/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from the SNMP agent\&.
.RE
.PP
/confdConfig/snmpAgent/mibs
.RS 4
A list of MIBs that should be loaded into the SNMP agent\&.
.sp
.RE
.PP
/confdConfig/snmpAgent/mibs/file (string)
.RS 4
This parameter may be given multiple times\&.
.sp
file is the location of a MIB file that should be loaded into the SNMP agent\&. For example: <file>\&./TAIL\-F\-TEST\-MIB\&.bin</file>\&. The MIB file must be in binary format (\&.bin) produced with the confdc compiler\&. For loading of a built\-in MIB no path must be given\&.
.sp
Example: <file>SNMP\-USER\-BASED\-SM\-MIB\&.bin</file>\&.
.sp
See the ConfD User Guide for more information about loading MIBs into the SNMP agent\&.
.RE
.PP
/confdConfig/snmpAgent/mibs/fromLoadPath (boolean) [false]
.RS 4
If \*(Aqtrue\*(Aq, any \*(Aq\&.bin\*(Aq file found in the /confdConfig/loadPath is loaded at startup\&. Bult\-in MIBs must still be listed explicitly using the \*(Aqfile\*(Aq element\&.
.RE
.PP
/confdConfig/snmpAgent/temporaryStorageTime (uint32) [300]
.RS 4
The time, in seconds, that the agent keeps temporary table entries before deleting them\&. A table entry is temporary if its RowStatus column is \*(AqnotReady\*(Aq or \*(AqnotInService\*(Aq\&.
.RE
.PP
/confdConfig/snmpAgent/snmpVersions
.RS 4
The list of SNMP versions that the SNMP agent will understand\&.
.sp
.RE
.PP
/confdConfig/snmpAgent/snmpVersions/v1 (boolean) [true]
.RS 4
Setting the value to \*(Aqtrue\*(Aq will enable SNMP v1 in the SNMP agent\&.
.RE
.PP
/confdConfig/snmpAgent/snmpVersions/v2c (boolean) [true]
.RS 4
Setting the value to \*(Aqtrue\*(Aq will enable SNMP v2c in the SNMP agent\&.
.RE
.PP
/confdConfig/snmpAgent/snmpVersions/v3 (boolean) [true]
.RS 4
Setting the value to \*(Aqtrue\*(Aq will enable SNMP v3 in the SNMP agent\&.
.RE
.PP
/confdConfig/snmpAgent/snmpEngine
.RS 4
Properties from the SNMP\-FRAMEWORK\-MIB (RFC 3411) for the SNMP agent\&.
.sp
.RE
.PP
/confdConfig/snmpAgent/snmpEngine/snmpEngineID (tailf:hex\-list)
.RS 4
This parameter is mandatory\&.
.sp
The name of the SNMP engine\&. snmpEngineID is defined in the SNMP\-FRAMEWORK\-MIB (RFC 3411)\&.
.RE
.PP
/confdConfig/snmpAgent/snmpEngine/snmpEngineMaxMessageSize (uint64) [50000]
.RS 4
The maximum size of SNMP messages that the agent can send or receive\&. The snmpEngineMaxMessageSize is defined in the SNMP\-FRAMEWORK\-MIB (RFC 3411)\&.
.RE
.PP
/confdConfig/snmpAgent/sessionIgnorePort (boolean) [false]
.RS 4
If \*(Aqtrue\*(Aq, the SNMP Agent will consider requests originating from one and the same IP Address, and using the same security name, as related, regardless of source port\&. Per default, the SNMP Agent will consider requests originating from one and the same IP Address and port, and using the same security name, as related\&. Related requests are handled in the same user session\&. This is absolutely necessary for achieving good performance when processing consecutive get\-next requests, as during SNMP walks\&.
.RE
.PP
/confdConfig/snmpAgent/authenticationFailureNotifyName (string) []
.RS 4
When the SNMP agent sends the standard authenticationFailure notification, it is delivered to the management targets defined for the snmpNotifyName in the snmpNotifyTable in SNMP\-NOTIFICATION\-MIB (RFC 3413)\&. If authenticationFailureNotifyName is the empty string (default), the notification is delivered to all management targets\&.
.RE
.PP
/confdConfig/snmpAgent/candidate
.RS 4
Directives for how to manage locks and changes to the candidate when processing SNMP set requests in systems where /confdConfig/datastores/running/access is writable\-through\-candidate\&. When running with this datastore setup, the SNMP Agent must lock the candidate before making changes to it and committing those to the running configuration\&.
.sp
.RE
.PP
/confdConfig/snmpAgent/candidate/maxLockWait (xs:duration) [PT0S]
.RS 4
If the candidate is locked by another user session, the SNMP Agent will send a resourceUnavailable response unless the candidate becomes available for locking within this time period\&. The default value is PT0S, which means the error response will be sent immediately\&.
.RE
.PP
/confdConfig/snmpAgent/candidate/pendingChangesAction (continue | fail) [continue]
.RS 4
If there are pending changes in the candidate when the SNMP Agent attempts to lock it, these will be discarded (continue) or the lock will not be taken and the SNMP request will fail with resourceUnavailable (fail)\&. The default value is continue\&.
.RE
.PP
/confdConfig/snmpAgent/dropWhenInUse (boolean) [false]
.RS 4
Whenever a set request cannot be completed, due to competing actions (typically CDB clients, or other transactions) preventing the SNMP Agent from taking the required locks on configuration stores and data providers affected by the request, the SNMP Agent will respond to the set request with an \*(Aqin use\*(Aq error\&. If dropWhenInUse is \*(Aqtrue\*(Aq, the SNMP Agent will silently drop the request instead\&.
.RE
.PP
/confdConfig/snmpAgent/contexts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
contexts is a leaf\-list of context names which this SNMP Agent, i\&.e\&. one or more external data providers recognize in addition to the empty context, \*(Aq\*(Aq\&.
.RE
.PP
/confdConfig/snmpAgent/system
.RS 4
The properties from the SNMPv2\-MIB (RFC 3418) for the SNMP agent\&.
.sp
.RE
.PP
/confdConfig/snmpAgent/system/sysDescr (string)
.RS 4
A textual description of the entity\&. This value should include the full name and version identification of the system\*(Aqs hardware type, software operating\-system, and networking software\&. The sysDescr is defined in the SNMPv2\-MIB (RFC 3418)\&.
.RE
.PP
/confdConfig/snmpAgent/system/sysObjectID (yang:object\-identifier)
.RS 4
The vendor\*(Aqs authoritative identification of the network management subsystem contained in the entity\&. The sysObjectID is defined in the SNMPv2\-MIB (RFC 3418)\&.
.RE
.PP
/confdConfig/snmpAgent/system/sysServices (uint64) [72]
.RS 4
A value which indicates the set of services that this entity may potentially offer\&. The sysServices is defined in the SNMPv2\-MIB (RFC 3418)\&.
.RE
.PP
/confdConfig/snmpAgent/system/sysORTable
.RS 4
Entries that will populate the sysORTable from SNMPv2\-MIB\&.
.sp
.RE
.PP
/confdConfig/snmpAgent/system/sysORTable/sysOREntry
.RS 4
Corresponds to one entry in the sysORTable from SNMPv2\-MIB\&.
.RE
.PP
/confdConfig/snmpAgent/system/sysORTable/sysOREntry/sysORIndex (uint64)
.RS 4
The index for this row in the table\&.
.RE
.PP
/confdConfig/snmpAgent/system/sysORTable/sysOREntry/sysORID (yang:object\-identifier)
.RS 4
This parameter is mandatory\&.
.sp
The OID of the AGENT\-CAPABILITIES invocation\&.
.RE
.PP
/confdConfig/snmpAgent/system/sysORTable/sysOREntry/sysORDescr (string)
.RS 4
This parameter is mandatory\&.
.sp
A textual description of capabilities defined in sysORID\&.
.RE
.PP
/confdConfig/netconf
.RS 4
This section defines settings which decide how the NETCONF server should behave, with respect to NETCONF and SSH\&.
.sp
.RE
.PP
/confdConfig/netconf/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the NETCONF server is started\&. If \*(Aqfalse\*(Aq the NETCONF server is stopped and any existing sessions are closed\&.
.RE
.PP
/confdConfig/netconf/versions
.RS 4
The list of NETCONF versions that the NETCONF server will understand and advertise\&.
.sp
.RE
.PP
/confdConfig/netconf/versions/v1\&.0 (boolean) [true]
.RS 4
Setting the value to \*(Aqtrue\*(Aq will enable NETCONF version 1\&.0, as defined in RFC 4741\&.
.RE
.PP
/confdConfig/netconf/versions/v1\&.1 (boolean) [true]
.RS 4
Setting the value to \*(Aqtrue\*(Aq will enable NETCONF version 1\&.1, as defined in RFC 6241\&.
.RE
.PP
/confdConfig/netconf/transport
.RS 4
Settings deciding which transport services the NETCONF server should listen to, e\&.g\&. TCP and SSH\&.
.sp
.RE
.PP
/confdConfig/netconf/transport/sshCallHomeExecutable (string)
.RS 4
The full path to an executable program that starts a NETCONF call home session over SSH\&. Must be used when the internal SSH stack in ConfD is not enabled\&.
.RE
.PP
/confdConfig/netconf/transport/sshCallHomeSourceAddress
.RS 4
This section provides the possibility to specify the source address to use for NETCONF call home connnections\&. In most cases the source address assignment is best left to the TCP/IP stack in the OS, since an incorrectly chosen address may result in connection failures\&. However in case there is more than one address that could be chosen by the stack, and we need to restrict the choice to one of them, these settings can be used\&. Currently only supported when the internal SSH stack is used\&.
.sp
.RE
.PP
/confdConfig/netconf/transport/sshCallHomeSourceAddress/ipv4 (inet:ipv4\-address)
.RS 4
The source address to use for call home IPv4 connections\&. If not set, the source address will be assigned by the OS\&.
.RE
.PP
/confdConfig/netconf/transport/sshCallHomeSourceAddress/ipv6 (inet:ipv6\-address)
.RS 4
The source address to use for call home IPv6 connections\&. If not set, the source address will be assigned by the OS\&.
.RE
.PP
/confdConfig/netconf/transport/ssh
.RS 4
Settings deciding how the NETCONF SSH transport service should behave\&.
.sp
.RE
.PP
/confdConfig/netconf/transport/ssh/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the NETCONF server uses SSH as a transport service\&.
.RE
.PP
/confdConfig/netconf/transport/ssh/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
ip is an IP address which the ConfD NETCONF server should listen to\&. 0\&.0\&.0\&.0 means that it listens to the port (/confdConfig/netconf/transport/ssh/port) for all IPv4 addresses on the machine\&.
.RE
.PP
/confdConfig/netconf/transport/ssh/port (inet:port\-number) [2022]
.RS 4
port is a valid port number to be used in combination with /confdConfig/netconf/transport/ssh/ip\&. Note that the standard port for NETCONF over SSH is 830\&.
.RE
.PP
/confdConfig/netconf/transport/ssh/netns (string)
.RS 4
The network namespace name where the listening socket should belong to\&.
.RE
.PP
/confdConfig/netconf/transport/ssh/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/netconf/transport/ssh/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, network namespace names, and VRF interface names; which the NETCONF server also listens to for SSH connections\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/netconf/transport/ssh/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/netconf/transport/ssh/netns is used\&. If the \*(Aqvrf\*(Aq is omitted, /confdConfig/netconf/transport/ssh/vrf is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>10\&.45\&.22\&.11:4777|netns=ncns|vrf=vrf0</extraIpPorts>
<extraIpPorts>127\&.0\&.0\&.1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=ncns1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/netconf/transport/ssh/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from the NETCONF server for SSH connections\&.
.RE
.PP
/confdConfig/netconf/transport/ssh/rcvPktSize (4 | 8 | 64) [64]
.RS 4
SSH receiving packet buffer size, in KiB\&. Receiving window size is calculated to fit at least two packets\&.
.RE
.PP
/confdConfig/netconf/transport/ssh/ncChunkSize (uint32) [16777216]
.RS 4
Limit for received NETCONF data (in text format) that is not yet processed by NETCONF engine\&. Minimum recommended value is 16384 bytes\&.
.RE
.PP
/confdConfig/netconf/transport/tcp
.RS 4
NETCONF over TCP is not standardized, but it can be useful during development in order to use e\&.g\&. netcat for scripting\&. It is also useful if we want to use our own proprietary transport\&. In that case we setup the NETCONF server to listen to localhost and then proxy it from our transport service module\&.
.sp
.RE
.PP
/confdConfig/netconf/transport/tcp/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the NETCONF server uses clear text TCP as a transport service\&.
.RE
.PP
/confdConfig/netconf/transport/tcp/ip (inet:ip\-address) [0\&.0\&.0\&.0]
.RS 4
ip is an IP address which the ConfD NETCONF server should listen to\&. 0\&.0\&.0\&.0 means that it listens to the port (/confdConfig/netconf/transport/tcp/port) for all IPv4 addresses on the machine\&.
.RE
.PP
/confdConfig/netconf/transport/tcp/port (inet:port\-number) [2023]
.RS 4
port is a valid port number to be used in combination with /confdConfig/netconf/transport/tcp/ip\&.
.RE
.PP
/confdConfig/netconf/transport/tcp/netns (string)
.RS 4
The network namespace name where the listening socket will belong to\&.
.RE
.PP
/confdConfig/netconf/transport/tcp/vrf (string)
.RS 4
The VRF interface name to which the listening socket should bind\&.
.RE
.PP
/confdConfig/netconf/transport/tcp/keepalive (boolean) [false]
.RS 4
keepalive is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq (default)\&. When \*(Aqtrue\*(Aq periodic polling of the other end of the connection will be done for sockets that have not exchanged data during the OS defined interval\&.
.RE
.PP
/confdConfig/netconf/transport/tcp/extraIpPorts (string)
.RS 4
This parameter may be given multiple times\&.
.sp
extraIpPorts is a leaf\-list of pipe separated ip:port pairs, network namespace names, and VRF interface names; which the NETCONF server also listens to for TCP connections\&. For IPv6 addresses, the syntax [ip]:port may be used\&. If the \*(Aq:port\*(Aq is omitted, /confdConfig/netconf/transport/tcp/port is used\&. If the \*(Aqnetns\*(Aq is omitted, /confdConfig/netconf/transport/tcp/netns is used\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
<extraIpPorts>:::88|vrf=vrf0</extraIpPorts>
<extraIpPorts>:::88|netns=ncns1|vrf=vrf1</extraIpPorts>
<extraIpPorts>:::88|netns=ncns1</extraIpPorts>
<extraIpPorts>[::]</extraIpPorts>

.fi
.if n \{\
.RE
.\}
.RE
.PP
/confdConfig/netconf/transport/tcp/dscp (dscpType)
.RS 4
Support for setting the Differentiated Services Code Point (6 bits) for traffic originating from the NETCONF server for TCP connections\&.
.RE
.PP
/confdConfig/netconf/extendedSessions (boolean) [false]
.RS 4
If extendedSessions are enabled, all ConfD sessions can be terminated using <kill\-session>, i\&.e\&. not only can other NETCONF session be terminated, but also CLI sessions, Webui sessions etc\&. If such a session holds a lock, it\*(Aqs session id will be returned in the <lock\-denied>, instead of \*(Aq0\*(Aq\&.
.sp
Strictly speaking, this extension is not covered by the NETCONF specification; therefore it\*(Aqs \*(Aqfalse\*(Aq by default\&.
.RE
.PP
/confdConfig/netconf/sendDefaults (boolean) [false]
.RS 4
DEPRECATED \- use /confdConfig/defaultHandlingMode instead to control this behavior consistently for all northbound interfaces\&.
.sp
If sendDefaults is \*(Aqtrue\*(Aq, default values will be included in the replies to <get>, <get\-config>, and <copy\-config>\&. If sendDefaults is \*(Aqfalse\*(Aq, default values will not be included by default\&.
.sp
If /confdConfig/netconf/capabilities/with\-defaults is enabled, this behavior can be controlled by the NETCONF client\&.
.RE
.PP
/confdConfig/netconf/idleTimeout (xs:duration) [PT0S]
.RS 4
Maximum idle time before terminating a NETCONF session\&. If the session is waiting for notifications, or has a pending confirmed commit, the idle timeout is not used\&. The default value is 0, which means no timeout\&. Will be silently capped to 49 days 17 hours\&.
.sp
Modification of this value will only affect connections that are established after the modification has been done\&.
.RE
.PP
/confdConfig/netconf/writeTimeout (xs:duration) [PT0S]
.RS 4
Maximum time for a write operation towards a client to complete\&. If the time is exceeded, the NETCONF session is terminated\&. The default value is 0, which means no timeout\&.
.sp
Modification of this value will only affect connections that are established after the modification has been done\&.
.RE
.PP
/confdConfig/netconf/rpcErrors (close | inline) [close]
.RS 4
If rpcErrors is \*(Aqinline\*(Aq, and an error occurs during the processing of a <get> or <get\-config> request when ConfD tries to fetch some data from a data provider, ConfD will generate an rpc\-error element in the faulty element, and continue to process the next element\&.
.sp
If an error occurs and rpcErrors is \*(Aqclose\*(Aq, the NETCONF transport is closed by ConfD\&.
.RE
.PP
/confdConfig/netconf/maxBatchProcesses (uint32 | unbounded) [unbounded]
.RS 4
Controls how many concurrent NETCONF batch processes there can be at any time\&. A batch process can be started by the server if a new NETCONF operation is implemented as a batch operation\&. See the NETCONF chapter in the ConfD User\*(Aqs Guide for details\&.
.RE
.PP
/confdConfig/netconf/capabilities
.RS 4
Decide which NETCONF capabilities to enable here\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/confirmed\-commit/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the confirmed\-commit NETCONF capability is enabled if also the /confdConfig/datastores/candidate is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/rollback\-on\-error/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the rollback\-on\-error NETCONF capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/no\-continue\-on\-error/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the continue\-on\-error error\-option, which is mandatory to support, is NOT supported\&. Note that if you enable this parameter, your NETCONF server does not implement the underspecified option \*(Aqcontinue\-on\-error\*(Aq\&. Enable only if you understand the consequences\&.
.sp
This is not a proper NETCONF capability\&.
.RE
.PP
/confdConfig/netconf/capabilities/validate/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If enabled \*(Aqtrue\*(Aq, the validate NETCONF capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/validate/test\-only (boolean) [false]
.RS 4
DEPRECATED \- this feature is available in NETCONF 1\&.1\&.
.sp
If test\-only \*(Aqtrue\*(Aq, the NETCONF server allows \*(Aqtest\-only\*(Aq as a valid value for the \*(Aq<test\-option>\*(Aq parameter in \*(Aq<edit\-config>\*(Aq\&.
.RE
.PP
/confdConfig/netconf/capabilities/url
.RS 4
Turn on the URL capability options we want to support\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/url/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the url NETCONF capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/url/file
.RS 4
Decide how the url file support should behave\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/url/file/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the url file scheme is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/url/file/rootDir (string)
.RS 4
This parameter is mandatory\&.
.sp
rootDir is a directory path on disk where ConfD will store the result from an NETCONF operation using the url capability\&. This parameter must be set if the file url scheme is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/url/ftp
.RS 4
Decide how the url ftp scheme should behave\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/url/ftp/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the url ftp scheme is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/url/ftp/sourceAddress
.RS 4
This section provides the possibility to specify the source address to use for ftp connnections\&. In most cases the source address assignment is best left to the TCP/IP stack in the OS, since an incorrectly chosen address may result in connection failures\&. However in case there is more than one address that could be chosen by the stack, and we need to restrict the choice to one of them, these settings can be used\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/url/ftp/sourceAddress/ipv4 (inet:ipv4\-address)
.RS 4
The source address to use for IPv4 connections\&. If not set, the source address will be assigned by the OS\&.
.RE
.PP
/confdConfig/netconf/capabilities/url/ftp/sourceAddress/ipv6 (inet:ipv6\-address)
.RS 4
The source address to use for IPv6 connections\&. If not set, the source address will be assigned by the OS\&.
.RE
.PP
/confdConfig/netconf/capabilities/url/sftp
.RS 4
Decide how the url sftp scheme should behave\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/url/sftp/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the url sftp scheme is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/url/sftp/sourceAddress
.RS 4
This section provides the possibility to specify the source address to use for sftp connnections\&. In most cases the source address assignment is best left to the TCP/IP stack in the OS, since an incorrectly chosen address may result in connection failures\&. However in case there is more than one address that could be chosen by the stack, and we need to restrict the choice to one of them, these settings can be used\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/url/sftp/sourceAddress/ipv4 (inet:ipv4\-address)
.RS 4
The source address to use for IPv4 connections\&. If not set, the source address will be assigned by the OS\&.
.RE
.PP
/confdConfig/netconf/capabilities/url/sftp/sourceAddress/ipv6 (inet:ipv6\-address)
.RS 4
The source address to use for Pv6 connections\&. If not set, the source address will be assigned by the OS\&.
.RE
.PP
/confdConfig/netconf/capabilities/xpath/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the xpath capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/notification/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the notification capability, defined in RFC 5277, is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/notification/interleave/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the interleave capability, defined in RFC 5277, is enabled\&. With this capability enabled, the NETCONF server will process RPCs while sending notifications\&.
.RE
.PP
/confdConfig/netconf/capabilities/ietf\-with\-defaults/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the with\-defaults capability, defined in RFC 6243, is enabled\&.
.sp
The NETCONF server will advertise its \*(Aqbasic\-mode\*(Aq and \*(Aqalso\-supported\*(Aq modes depending on the parameter /confdConfig/defaultHandlingMode\&.
.sp
It is strongly recommended to not disable this capability\&.
.RE
.PP
/confdConfig/netconf/capabilities/ietf\-yang\-library\-1\&.0/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the yang\-library:1\&.0 capability, defined in RFC 7950, is advertised\&.
.sp
Note that :yang\-library:1\&.1 is always advertised as well\&.
.RE
.PP
/confdConfig/netconf/capabilities/transactions
.RS 4
DEPRECATED \- the YANG module tailf\-netconf\-transactions will be announced if its fxs file is found in the loadPath\&.
.sp
If this parameter is present in confd\&.conf, the capability \*(Aqhttp://tail\-f\&.com/ns/netconf/transactions/1\&.0\*(Aq is announced in <hello>
.sp
.RE
.PP
/confdConfig/netconf/capabilities/transactions/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the \*(Aqhttp://tail\-f\&.com/ns/netconf/transactions/1\&.0\*(Aq capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/forward
.RS 4
DEPRECATED \- the YANG module tailf\-netconf\-forward will be announced if its fxs file is found in the loadPath and /confdConfig/proxyForwarding is enabled\&.
.sp
If this parameter is present in confd\&.conf, the capability \*(Aqhttp://tail\-f\&.com/ns/netconf/forward/1\&.0\*(Aq is announced in <hello>
.sp
.RE
.PP
/confdConfig/netconf/capabilities/forward/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the \*(Aqhttp://tail\-f\&.com/ns/netconf/forward/1\&.0\*(Aq capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/query
.RS 4
DEPRECATED \- the YANG module tailf\-netconf\-query will be announced if its fxs file is found in the loadPath\&.
.sp
If this parameter is present in confd\&.conf, the capability \*(Aqhttp://tail\-f\&.com/ns/netconf/query/1\&.0\*(Aq is announced in <hello>\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/query/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the \*(Aqhttp://tail\-f\&.com/ns/netconf/query\*(Aq capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/inactive
.RS 4
DEPRECATED \- the YANG module tailf\-netconf\-inactive will be announced if its fxs file is found in the loadPath and /confdConfig/enableInactive is set\&.
.sp
If this parameter is present in confd\&.conf, the capability \*(Aqhttp://tail\-f\&.com/ns/netconf/inactive/1\&.0\*(Aq is announced in <hello>\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/inactive/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the \*(Aqhttp://tail\-f\&.com/ns/netconf/inactive/1\&.0\*(Aq capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/partial\-lock
.RS 4
DEPRECATED \- this capability will be announced if ietf\-netconf\-partial\-lock\&.fxs is found in the loadPath\&.
.sp
.RE
.PP
/confdConfig/netconf/capabilities/partial\-lock/enabled (boolean) [false]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the partial\-lock capability as defined in RFC 5717 is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/actions/enabled (boolean) [false]
.RS 4
DEPRECATED \- actions are now part of YANG 1\&.1, use that instead\&.
.sp
This parameter is kept for backwards compatibility, but it is recommended to use standard YANG 1\&.1 instead\&.
.sp
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the \*(Aqhttp://tail\-f\&.com/ns/netconf/actions/1\&.0\*(Aq capability is enabled\&.
.RE
.PP
/confdConfig/netconf/capabilities/capability (inet:uri)
.RS 4
This parameter may be given multiple times\&.
.sp
capability is a parameter can be given multiple times\&. It specifies a URI string which the NETCONF server will report as a capability in the hello message sent to the client\&.
.RE
.PP
/confdConfig/netconf/yangPush/enableExternalAccessCheck (boolean) [false]
.RS 4
This parameter controls the option to check data access rights by an external data provider for the data provided in push\-change\-update notifications\&. If set to false, ConfD will always check the data access rights for the user on the provided data\&. If set to true and the data provider guarantees that the access rights had already been checked, then ConfD will not perform the access rights check again on the data\&.
.RE
.PP
/confdConfig/persistentTransactionIds
.RS 4
This section defines settings for storing of transaction ids (TIDs)\&. To improve traceability, ConfD persists TIDs to disk to ensure that they are monotonically increasing, even between restarts\&.
.sp
TIDs are persisted on disk in the file local\&.data
.RE
.PP
/confdConfig/persistentTransactionIds/enabled (boolean) [true]
.RS 4
Disable TID persistence to avoid disk writes\&. If persistence is disabled TIDs will no longer be monotonically increasing between restarts, instead TIDs are numbered from 1 when ConfD starts\&.
.RE
.PP
/confdConfig/persistentTransactionIds/allocationSize (int32) [1000]
.RS 4
ConfD allocates a chunk of TIDs in order to avoid excessive writes to disk\&. This means that if ConfD is restarted there will be a gap in the TID number sequence\&. Setting a higher value means less disk writes, a lower value will decrease the gap of \*(Aqwasted\*(Aq TIDs on restart\&.
.RE
.PP
/confdConfig/disableSchemaUriForAgents (netconf | rest)
.RS 4
This parameter may be given multiple times\&.
.sp
disableSchemaUriForAgents is a leaf\-list of northbound agents that schema leaf is not wanted in the ietf\-yang\-library:modules\-state resource response\&.
.RE
.PP
/confdConfig/xpathCache
.RS 4
This section defines settings which affect the behavior of the undocumented xpath cache\&.
.sp
.RE
.PP
/confdConfig/xpathCache/enabled (boolean) [true]
.RS 4
enabled is either \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq\&. If \*(Aqtrue\*(Aq, the xpath cache is enabled\&.
.RE
.SH "SEE ALSO"
.PP
\fBconfd\fR(1)
\- command to start and control the ConfD daemon
.PP
\fBconfd_lib_dp\fR(3)
\- callback library for connecting to ConfD
.PP
\fBconfd_types\fR(3)
\- Confd XML value representation in C
.PP
confd_cfg\&.yang
\- The YANG module defining the confd\&.conf file format\&.
.PP
confd\&.conf\&.example
\- A commented confd\&.conf example file\&.
.SH "AUTHOR"
.br
.RS 4
Author.
.RE
.SH "COPYRIGHT"
.br
Copyright \(co 2021, 2022, 2023 Cisco Systems, Inc. All rights reserved.
.br
