ConfD Example - NETCONF YANG-Push (RFC-8641)
--------------------------------------------------------------------------------

This example demonstrates NETCONF YANG-Push (RFC 8641) to subscribe to YANG
Notifications for Datastore updates.

This example contains two use cases, one for establishing periodic subscription
and one for on-change subscription. The example data model is defined in
ietf-interfaces.yang and it is annotated in ietf-interfaces-ann.yang which
specifies an operational callpoint on the leaf '/interfaces/interface/enabled'
and makes the leaf '/interfaces/interface/oper-status' a config false node.

Periodic subscription example is subscribing on operational datastore and leafs
'/interfaces/interface/enabled' and '/interfaces/interface/oper-status' are
read from the provided data provider program. The data provider returns
changing values at every read for demonstration purposes.

The on-change subscription example is also subscribing to the operational
datastore, thus changes on the leafs '/interfaces/interface/enabled' and
'/interfaces/interface/oper-status' are pushed by the data provider.
However, the push-change-update notifications on the leaf
'/interfaces/interface/type` are generated by ConfD. The changes in config data
are triggered by an edit-data RPC. To demonstrate changes in the operational
datastore, the data provider is triggered by a netcat command to push changes.

To run
------

1. Build:

    $ make build

2. Start Confd and DP:

    $ make start
    $ make start-dp

3. In another shell, invoke our NETCONF client, netconf-console:

    $ make periodic-subscription

4. To run on-change subscriptions example:

    $ make on-change-subscription

5. To observe push-change-update notifications for config data, we need to edit
   some of the subscribed data nodes. In another shell:

    $ netconf-console --rpc=edit-data.xml

5. To observe push-change-update notifications for operational data, we need to
   trigger our demo code in data provider. In another shell:

    $ make on-change-push

6. To stop the system:

    $ make stop
